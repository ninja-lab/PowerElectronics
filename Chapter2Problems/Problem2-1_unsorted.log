2021-05-19 07:33:11,317
adding i_L to []
2021-05-19 07:33:11,436
nonlinsolve returns: 
⎛   V_c    ⎞
⎜─────────,⎟
⎝R⋅(D - 1) ⎠
2021-05-19 07:33:11,463

  D⋅V_c           ⎛       V_c⎞
- ───── + (1 - D)⋅⎜-i_L - ───⎟
    R             ⎝        R ⎠ solved for 
i_L=
⎧  D⋅V_c     V_c⎫
⎨───────── - ───⎬
⎩R⋅(D - 1)    R ⎭
2021-05-19 07:33:11,464
so far i_L = 
OrderedSet([V_c/(R*(D - 1))])
2021-05-19 07:33:11,464
solution to i_L is: 
   V_c   
─────────
R⋅(D - 1) 
2021-05-19 07:33:11,465
set of syms: {V_c, D, R}
2021-05-19 07:33:11,465
ordered: [D, R, V_c]
2021-05-19 07:33:11,465
calling solver looking for 
V_c
2021-05-19 07:33:11,465
	adding V_c to [i_L]
2021-05-19 07:33:11,512
	nonlinsolve returns: 
	(M⋅V_g,)
2021-05-19 07:33:11,521

	D⋅V_g + V_c⋅(1 - D) solved for 
	V_c=
	⎧D⋅V_g⎫
	⎨─────⎬
	⎩D - 1⎭
2021-05-19 07:33:11,525

	    V_c
	M - ───
	    V_g solved for 
	V_c=
	{M⋅V_g}
2021-05-19 07:33:11,545

	  D⋅V_c           ⎛       V_c⎞
	- ───── + (1 - D)⋅⎜-i_L - ───⎟
	    R             ⎝        R ⎠ solved for 
	V_c=
	{R⋅i_L⋅(D - 1)}
2021-05-19 07:33:11,551

	    V_c
	R - ───
	    i_R solved for 
	V_c=
	{R⋅i_R}
2021-05-19 07:33:11,551
	so far V_c = 
	OrderedSet([M*V_g, D*V_g/(D - 1), R*i_L*(D - 1), R*i_R])
2021-05-19 07:33:11,552
	solution to V_c is: 
	M⋅V_g 
2021-05-19 07:33:11,552
set of syms: {M, V_g}
2021-05-19 07:33:11,552
ordered: [M, V_g]
2021-05-19 07:33:11,552
	calling solver looking for 
	M
2021-05-19 07:33:11,552
		adding M to [i_L, V_c]
2021-05-19 07:33:11,598
		nonlinsolve returns: 
		⎛V_c ⎞
		⎜───,⎟
		⎝V_g ⎠
2021-05-19 07:33:11,602

		    V_c
		M - ───
		    V_g solved for 
		M=
		⎧V_c⎫
		⎨───⎬
		⎩V_g⎭
2021-05-19 07:33:11,604
		so far M = 
		OrderedSet([V_c/V_g])
2021-05-19 07:33:11,605
		solution to M is: 
		V_c
		───
		V_g 
2021-05-19 07:33:11,605
set of syms: {V_c, V_g}
2021-05-19 07:33:11,605
ordered: [V_c, V_g]
2021-05-19 07:33:11,605
		calling solver looking for 
		V_c
2021-05-19 07:33:11,605
			base case
2021-05-19 07:33:11,605
		calling solver looking for 
		V_g
2021-05-19 07:33:11,605
			adding V_g to [i_L, V_c, M]
2021-05-19 07:33:11,684
			nonlinsolve returns: 
			⎛V_c ⎞
			⎜───,⎟
			⎝ M  ⎠
2021-05-19 07:33:11,697

			D⋅V_g + V_c⋅(1 - D) solved for 
			V_g=
			⎧V_c⋅(D - 1)⎫
			⎨───────────⎬
			⎩     D     ⎭
2021-05-19 07:33:11,708

			    V_c
			M - ───
			    V_g solved for 
			V_g=
			⎧V_c⎫
			⎨───⎬
			⎩ M ⎭
2021-05-19 07:33:11,709
			so far V_g = 
			OrderedSet([V_c/M, V_c - V_c/D])
2021-05-19 07:33:11,709
			solution to V_g is: 
			V_c
			───
			 M  
2021-05-19 07:33:11,709
set of syms: {V_c, M}
2021-05-19 07:33:11,709
ordered: [M, V_c]
2021-05-19 07:33:11,709
			calling solver looking for 
			V_c
2021-05-19 07:33:11,709
				base case
2021-05-19 07:33:11,709
			calling solver looking for 
			M
2021-05-19 07:33:11,709
				base case
2021-05-19 07:33:11,709
			solution to V_g is: 
			      V_c
			V_c - ───
			       D  
2021-05-19 07:33:11,709
set of syms: {V_c, D}
2021-05-19 07:33:11,710
ordered: [D, V_c]
2021-05-19 07:33:11,710
			calling solver looking for 
			V_c
2021-05-19 07:33:11,710
				base case
2021-05-19 07:33:11,710
			calling solver looking for 
			D
2021-05-19 07:33:11,710
				adding D to [i_L, V_c, M, V_g]
2021-05-19 07:33:11,780
				nonlinsolve returns: 
				⎛   V_c    ⎞
				⎜─────────,⎟
				⎝V_c - V_g ⎠
2021-05-19 07:33:11,793

				D⋅V_g + V_c⋅(1 - D) solved for 
				D=
				⎧   V_c   ⎫
				⎨─────────⎬
				⎩V_c - V_g⎭
2021-05-19 07:33:11,818

				  D⋅V_c           ⎛       V_c⎞
				- ───── + (1 - D)⋅⎜-i_L - ───⎟
				    R             ⎝        R ⎠ solved for 
				D=
				⎧R⋅i_L + V_c⎫
				⎨───────────⎬
				⎩   R⋅i_L   ⎭
2021-05-19 07:33:11,818
				so far D = 
				OrderedSet([V_c/(V_c - V_g), 1 + V_c/(R*i_L)])
2021-05-19 07:33:11,819
				solution to D is: 
				   V_c   
				─────────
				V_c - V_g 
2021-05-19 07:33:11,819
set of syms: {V_c, V_g}
2021-05-19 07:33:11,819
ordered: [V_c, V_g]
2021-05-19 07:33:11,819
				calling solver looking for 
				V_c
2021-05-19 07:33:11,819
					base case
2021-05-19 07:33:11,819
				calling solver looking for 
				V_g
2021-05-19 07:33:11,819
					base case
2021-05-19 07:33:11,820
				solution to D is: 
				     V_c 
				1 + ─────
				    R⋅i_L 
2021-05-19 07:33:11,820
set of syms: {V_c, i_L, R}
2021-05-19 07:33:11,820
ordered: [R, V_c, i_L]
2021-05-19 07:33:11,820
				calling solver looking for 
				V_c
2021-05-19 07:33:11,820
					base case
2021-05-19 07:33:11,820
				calling solver looking for 
				i_L
2021-05-19 07:33:11,820
					base case
2021-05-19 07:33:11,820
				calling solver looking for 
				R
2021-05-19 07:33:11,820
					adding R to [i_L, V_c, M, V_g, D]
2021-05-19 07:33:11,888
					nonlinsolve returns: 
					⎛V_c ⎞
					⎜───,⎟
					⎝i_R ⎠
2021-05-19 07:33:11,914

					  D⋅V_c           ⎛       V_c⎞
					- ───── + (1 - D)⋅⎜-i_L - ───⎟
					    R             ⎝        R ⎠ solved for 
					R=
					⎧D⋅V_c      ⎫
					⎪───── - V_c⎪
					⎨D - 1      ⎬
					⎪───────────⎪
					⎩    i_L    ⎭
2021-05-19 07:33:11,918

					    V_c
					R - ───
					    i_R solved for 
					R=
					⎧V_c⎫
					⎨───⎬
					⎩i_R⎭
2021-05-19 07:33:11,918
					so far R = 
					OrderedSet([V_c/i_R, V_c/(i_L*(D - 1))])
2021-05-19 07:33:11,918
					solution to R is: 
					V_c
					───
					i_R 
2021-05-19 07:33:11,918
set of syms: {V_c, i_R}
2021-05-19 07:33:11,918
ordered: [V_c, i_R]
2021-05-19 07:33:11,918
					calling solver looking for 
					V_c
2021-05-19 07:33:11,918
						base case
2021-05-19 07:33:11,918
					calling solver looking for 
					i_R
2021-05-19 07:33:11,919
						adding i_R to [i_L, V_c, M, V_g, D, R]
2021-05-19 07:33:11,968
						nonlinsolve returns: 
						⎛V_c ⎞
						⎜───,⎟
						⎝ R  ⎠
2021-05-19 07:33:11,977

						    V_c
						R - ───
						    i_R solved for 
						i_R=
						⎧V_c⎫
						⎨───⎬
						⎩ R ⎭
2021-05-19 07:33:11,977
						so far i_R = 
						OrderedSet([V_c/R])
2021-05-19 07:33:11,978
						solution to i_R is: 
						V_c
						───
						 R  
2021-05-19 07:33:11,978
set of syms: {V_c, R}
2021-05-19 07:33:11,978
ordered: [R, V_c]
2021-05-19 07:33:11,978
						calling solver looking for 
						V_c
2021-05-19 07:33:11,978
							base case
2021-05-19 07:33:11,978
						calling solver looking for 
						R
2021-05-19 07:33:11,978
							base case
2021-05-19 07:33:11,978
end of function, recursesym: [i_L, V_c, M, V_g, D, R, i_R]
2021-05-19 07:33:11,979
					sub-ing in 
					V_c
					───
					 R  for 
					i_R
2021-05-19 07:33:11,979
					and found 
					R
2021-05-19 07:33:11,979
					solution to R is: 
					    V_c    
					───────────
					i_L⋅(D - 1) 
2021-05-19 07:33:11,979
set of syms: {V_c, D, i_L}
2021-05-19 07:33:11,979
ordered: [D, V_c, i_L]
2021-05-19 07:33:11,979
					calling solver looking for 
					V_c
2021-05-19 07:33:11,979
							base case
2021-05-19 07:33:11,979
					calling solver looking for 
					D
2021-05-19 07:33:11,979
							base case
2021-05-19 07:33:11,979
					calling solver looking for 
					i_L
2021-05-19 07:33:11,979
							base case
2021-05-19 07:33:11,980
sym list: 
					{R}
2021-05-19 07:33:11,980
bool op = False
2021-05-19 07:33:11,980
					removing 
					R
2021-05-19 07:33:11,980
end of function, recursesym: [i_L, V_c, M, V_g, D, R, i_R]
2021-05-19 07:33:11,987
				sub-ing in 
				V_c
				───
				i_R for 
				R
2021-05-19 07:33:11,987
				and found 
				    i_R
				1 + ───
				    i_L
2021-05-19 07:33:11,988
				sub-ing in 
				    V_c    
				───────────
				i_L⋅(D - 1) for 
				R
2021-05-19 07:33:11,988
				and found 
				D
2021-05-19 07:33:11,989
sym list: 
				{i_L, i_R}
2021-05-19 07:33:11,989
bool op = False
2021-05-19 07:33:11,989
sym list: 
				{D}
2021-05-19 07:33:11,989
bool op = False
2021-05-19 07:33:11,989
				removing 
				D
2021-05-19 07:33:11,989
end of function, recursesym: [i_L, V_c, M, V_g, D, R, i_R]
2021-05-19 07:33:11,990
			sub-ing in 
			   V_c   
			─────────
			V_c - V_g for 
			D
2021-05-19 07:33:11,990
			and found 
			V_g
2021-05-19 07:33:12,005
			sub-ing in 
			     V_c 
			1 + ─────
			    R⋅i_L for 
			D
2021-05-19 07:33:12,006
			and found 
			         V_c   
			V_c - ─────────
			           V_c 
			      1 + ─────
			          R⋅i_L
2021-05-19 07:33:12,018
			sub-ing in 
			i_L + i_R
			─────────
			   i_L    for 
			D
2021-05-19 07:33:12,019
			and found 
			   V_c⋅i_L       
			- ───────── + V_c
			  i_L + i_R      
2021-05-19 07:33:12,019
sym list: 
			{V_g}
2021-05-19 07:33:12,019
bool op = False
2021-05-19 07:33:12,019
			removing 
			V_g
2021-05-19 07:33:12,020
sym list: 
			{R, V_c, i_L}
2021-05-19 07:33:12,020
bool op = False
2021-05-19 07:33:12,020
sym list: 
			{V_c, i_L, i_R}
2021-05-19 07:33:12,020
bool op = False
2021-05-19 07:33:12,020
end of function, recursesym: [i_L, V_c, M, V_g, D, R, i_R]
2021-05-19 07:33:12,021
		sub-ing in 
		V_c
		───
		 M  for 
		V_g
2021-05-19 07:33:12,021
		and found 
		M
2021-05-19 07:33:12,031
		sub-ing in 
		      V_c
		V_c - ───
		       D  for 
		V_g
2021-05-19 07:33:12,031
		and found 
		   V_c   
		─────────
		      V_c
		V_c - ───
		       D 
2021-05-19 07:33:12,039
		sub-ing in 
		       2   
		    V_c    
		───────────
		R⋅i_L + V_c for 
		V_g
2021-05-19 07:33:12,040
		and found 
		R⋅i_L + V_c
		───────────
		    V_c    
2021-05-19 07:33:12,045
		sub-ing in 
		 V_c⋅i_R 
		─────────
		i_L + i_R for 
		V_g
2021-05-19 07:33:12,046
		and found 
		i_L + i_R
		─────────
		   i_R   
2021-05-19 07:33:12,046
sym list: 
		{M}
2021-05-19 07:33:12,046
bool op = False
2021-05-19 07:33:12,046
		removing 
		M
2021-05-19 07:33:12,046
sym list: 
		{D}
2021-05-19 07:33:12,046
bool op = False
2021-05-19 07:33:12,046
sym list: 
		{R, V_c, i_L}
2021-05-19 07:33:12,046
bool op = False
2021-05-19 07:33:12,046
sym list: 
		{i_L, i_R}
2021-05-19 07:33:12,046
bool op = False
2021-05-19 07:33:12,046
end of function, recursesym: [i_L, V_c, M, V_g, D, R, i_R]
2021-05-19 07:33:12,047
	sub-ing in 
	V_c
	───
	V_g for 
	M
2021-05-19 07:33:12,047
	and found 
	V_c
2021-05-19 07:33:12,052
	sub-ing in 
	  D  
	─────
	D - 1 for 
	M
2021-05-19 07:33:12,052
	and found 
	D⋅V_g
	─────
	D - 1
2021-05-19 07:33:12,063
	sub-ing in 
	R⋅i_L + V_c
	───────────
	    V_c     for 
	M
2021-05-19 07:33:12,063
	and found 
	V_g⋅(R⋅i_L + V_c)
	─────────────────
	       V_c       
2021-05-19 07:33:12,072
	sub-ing in 
	i_L + i_R
	─────────
	   i_R    for 
	M
2021-05-19 07:33:12,072
	and found 
	V_g⋅(i_L + i_R)
	───────────────
	      i_R      
2021-05-19 07:33:12,072
	calling solver looking for 
	V_g
2021-05-19 07:33:12,073
							base case
2021-05-19 07:33:12,073
	solution to V_c is: 
	D⋅V_g
	─────
	D - 1 
2021-05-19 07:33:12,073
set of syms: {D, V_g}
2021-05-19 07:33:12,073
ordered: [D, V_g]
2021-05-19 07:33:12,073
	calling solver looking for 
	D
2021-05-19 07:33:12,073
							base case
2021-05-19 07:33:12,073
	calling solver looking for 
	V_g
2021-05-19 07:33:12,073
							base case
2021-05-19 07:33:12,074
	solution to V_c is: 
	R⋅i_L⋅(D - 1) 
2021-05-19 07:33:12,074
set of syms: {D, i_L, R}
2021-05-19 07:33:12,074
ordered: [D, R, i_L]
2021-05-19 07:33:12,074
	calling solver looking for 
	D
2021-05-19 07:33:12,074
							base case
2021-05-19 07:33:12,074
	calling solver looking for 
	i_L
2021-05-19 07:33:12,074
							base case
2021-05-19 07:33:12,074
	calling solver looking for 
	R
2021-05-19 07:33:12,074
							base case
2021-05-19 07:33:12,074
	solution to V_c is: 
	R⋅i_R 
2021-05-19 07:33:12,074
set of syms: {R, i_R}
2021-05-19 07:33:12,074
ordered: [R, i_R]
2021-05-19 07:33:12,074
	calling solver looking for 
	R
2021-05-19 07:33:12,074
							base case
2021-05-19 07:33:12,074
	calling solver looking for 
	i_R
2021-05-19 07:33:12,075
							base case
2021-05-19 07:33:12,075
sym list: 
	{V_c}
2021-05-19 07:33:12,075
bool op = False
2021-05-19 07:33:12,075
	removing 
	V_c
2021-05-19 07:33:12,075
sym list: 
	{D, V_g}
2021-05-19 07:33:12,075
bool op = False
2021-05-19 07:33:12,075
sym list: 
	{R, V_c, V_g, i_L}
2021-05-19 07:33:12,075
bool op = False
2021-05-19 07:33:12,076
	removing 
	V_g⋅(R⋅i_L + V_c)
	─────────────────
	       V_c       
2021-05-19 07:33:12,076
sym list: 
	{V_g, i_L, i_R}
2021-05-19 07:33:12,076
bool op = False
2021-05-19 07:33:12,076
end of function, recursesym: [i_L, V_c, M, V_g, D, R, i_R]
2021-05-19 07:33:12,085
sub-ing in 
M⋅V_g for 
V_c
2021-05-19 07:33:12,085
and found 
  M⋅V_g  
─────────
R⋅(D - 1)
2021-05-19 07:33:12,106
sub-ing in 
D⋅V_g
─────
D - 1 for 
V_c
2021-05-19 07:33:12,107
and found 
  D⋅V_g   
──────────
         2
R⋅(D - 1) 
2021-05-19 07:33:12,108
sub-ing in 
R⋅i_L⋅(D - 1) for 
V_c
2021-05-19 07:33:12,108
and found 
i_L
2021-05-19 07:33:12,113
sub-ing in 
R⋅i_R for 
V_c
2021-05-19 07:33:12,113
and found 
 i_R 
─────
D - 1
2021-05-19 07:33:12,131
sub-ing in 
V_g⋅(i_L + i_R)
───────────────
      i_R       for 
V_c
2021-05-19 07:33:12,131
and found 
V_g⋅(i_L + i_R)
───────────────
 R⋅i_R⋅(D - 1) 
2021-05-19 07:33:12,131
calling solver looking for 
D
2021-05-19 07:33:12,131
							base case
2021-05-19 07:33:12,132
calling solver looking for 
R
2021-05-19 07:33:12,132
							base case
2021-05-19 07:33:12,132
sym list: 
{D, M, R, V_g}
2021-05-19 07:33:12,132
bool op = True
2021-05-19 07:33:12,132
removing 
  M⋅V_g  
─────────
R⋅(D - 1)
2021-05-19 07:33:12,132
sym list: 
{D, R, V_g}
2021-05-19 07:33:12,133
bool op = False
2021-05-19 07:33:12,133
sym list: 
{i_L}
2021-05-19 07:33:12,133
bool op = False
2021-05-19 07:33:12,133
removing 
i_L
2021-05-19 07:33:12,133
sym list: 
{D, i_R}
2021-05-19 07:33:12,133
bool op = False
2021-05-19 07:33:12,133
sym list: 
{D, R, V_g, i_L, i_R}
2021-05-19 07:33:12,133
bool op = False
2021-05-19 07:33:12,134
removing 
V_g⋅(i_L + i_R)
───────────────
 R⋅i_R⋅(D - 1) 
2021-05-19 07:33:12,134
end of function, recursesym: [i_L, V_c, M, V_g, D, R, i_R]

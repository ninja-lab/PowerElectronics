2021-06-22 07:20:47,006
adding i_L to []
2021-06-22 07:20:47,006
looking for 
i_L
2021-06-22 07:20:47,087
nonlinsolve returns: 
i_R
2021-06-22 07:20:47,089

D⋅(-V_c + V_g) + (1 - D)⋅(V_c + V_g) solved for 
i_L=
∅
2021-06-22 07:20:47,091

    V_c
M - ───
    V_g solved for 
i_L=
∅
2021-06-22 07:20:47,092

       V_c
-i_R + ───
        R  solved for 
i_L=
∅
2021-06-22 07:20:47,093

i_L - i_R solved for 
i_L=
{i_R}
2021-06-22 07:20:47,093
Done with 
i_L
2021-06-22 07:20:47,093
so far i_L = 
OrderedSet([i_R])
2021-06-22 07:20:47,093
solution to i_L is: 
i_R 
2021-06-22 07:20:47,094
recursesym: 
[i_L]
2021-06-22 07:20:47,094
calling solver looking for 
i_R
2021-06-22 07:20:47,094
	adding i_R to [i_L]
2021-06-22 07:20:47,094
looking for 
i_R
2021-06-22 07:20:47,128
nonlinsolve returns: 
i_L
2021-06-22 07:20:47,129

D⋅(-V_c + V_g) + (1 - D)⋅(V_c + V_g) solved for 
i_R=
∅
2021-06-22 07:20:47,130

    V_c
M - ───
    V_g solved for 
i_R=
∅
2021-06-22 07:20:47,133

       V_c
-i_R + ───
        R  solved for 
i_R=
⎧V_c⎫
⎨───⎬
⎩ R ⎭
2021-06-22 07:20:47,136

i_L - i_R solved for 
i_R=
{i_L}
2021-06-22 07:20:47,136
	Done with 
i_R
2021-06-22 07:20:47,137
	so far i_R = 
	OrderedSet([V_c/R, i_L])
2021-06-22 07:20:47,137
	solution to i_R is: 
	V_c
	───
	 R  
2021-06-22 07:20:47,137
	recursesym: 
	[i_L, i_R]
2021-06-22 07:20:47,137
	calling solver looking for 
	R
2021-06-22 07:20:47,137
		adding R to [i_L, i_R]
2021-06-22 07:20:47,137
looking for 
R
2021-06-22 07:20:47,189
nonlinsolve returns: 
V_c
───
i_R
2021-06-22 07:20:47,191

D⋅(-V_c + V_g) + (1 - D)⋅(V_c + V_g) solved for 
R=
∅
2021-06-22 07:20:47,191

    V_c
M - ───
    V_g solved for 
R=
∅
2021-06-22 07:20:47,201

       V_c
-i_R + ───
        R  solved for 
R=
⎧V_c⎫      
⎨───⎬ \ {0}
⎩i_R⎭      
2021-06-22 07:20:47,204

i_L - i_R solved for 
R=
∅
2021-06-22 07:20:47,204
		Done with 
R
2021-06-22 07:20:47,204
		so far R = 
		OrderedSet([V_c/i_R])
2021-06-22 07:20:47,204
		solution to R is: 
		V_c
		───
		i_R 
2021-06-22 07:20:47,204
		recursesym: 
		[i_L, i_R, R]
2021-06-22 07:20:47,204
		calling solver looking for 
		V_c
2021-06-22 07:20:47,205
			adding V_c to [i_L, i_R, R]
2021-06-22 07:20:47,205
looking for 
V_c
2021-06-22 07:20:47,245
nonlinsolve returns: 
R⋅i_R
2021-06-22 07:20:47,266

D⋅(-V_c + V_g) + (1 - D)⋅(V_c + V_g) solved for 
V_c=
⎧  V_g  ⎫
⎨───────⎬
⎩2⋅D - 1⎭
2021-06-22 07:20:47,275

    V_c
M - ───
    V_g solved for 
V_c=
{M⋅V_g}
2021-06-22 07:20:47,279

       V_c
-i_R + ───
        R  solved for 
V_c=
{R⋅i_R}
2021-06-22 07:20:47,281

i_L - i_R solved for 
V_c=
∅
2021-06-22 07:20:47,281
			Done with 
V_c
2021-06-22 07:20:47,282
			so far V_c = 
			OrderedSet([V_g/(2*D - 1), M*V_g, R*i_R])
2021-06-22 07:20:47,282
			solution to V_c is: 
			  V_g  
			───────
			2⋅D - 1 
2021-06-22 07:20:47,282
			recursesym: 
			[i_L, i_R, R, V_c]
2021-06-22 07:20:47,282
			calling solver looking for 
			D
2021-06-22 07:20:47,282
				adding D to [i_L, i_R, R, V_c]
2021-06-22 07:20:47,282
looking for 
D
2021-06-22 07:20:47,327
nonlinsolve returns: 
V_c + V_g
─────────
  2⋅V_c  
2021-06-22 07:20:47,339

D⋅(-V_c + V_g) + (1 - D)⋅(V_c + V_g) solved for 
D=
⎧V_c + V_g⎫
⎨─────────⎬
⎩  2⋅V_c  ⎭
2021-06-22 07:20:47,347

    V_c
M - ───
    V_g solved for 
D=
∅
2021-06-22 07:20:47,348

       V_c
-i_R + ───
        R  solved for 
D=
∅
2021-06-22 07:20:47,348

i_L - i_R solved for 
D=
∅
2021-06-22 07:20:47,349
				Done with 
D
2021-06-22 07:20:47,349
				so far D = 
				OrderedSet([(V_c + V_g)/(2*V_c)])
2021-06-22 07:20:47,349
				solution to D is: 
				V_c + V_g
				─────────
				  2⋅V_c   
2021-06-22 07:20:47,349
				recursesym: 
				[i_L, i_R, R, V_c, D]
2021-06-22 07:20:47,350
				calling solver looking for 
				V_c
2021-06-22 07:20:47,350
					base case
2021-06-22 07:20:47,350
returning: V_c=set()
2021-06-22 07:20:47,350
				recursesym: 
				[i_L, i_R, R, V_c, D]
2021-06-22 07:20:47,350
				calling solver looking for 
				V_g
2021-06-22 07:20:47,350
					adding V_g to [i_L, i_R, R, V_c, D]
2021-06-22 07:20:47,350
looking for 
V_g
2021-06-22 07:20:47,415
nonlinsolve returns: 
V_c
───
 M 
2021-06-22 07:20:47,426

D⋅(-V_c + V_g) + (1 - D)⋅(V_c + V_g) solved for 
V_g=
{V_c⋅(2⋅D - 1)}
2021-06-22 07:20:47,439

    V_c
M - ───
    V_g solved for 
V_g=
⎧V_c⎫      
⎨───⎬ \ {0}
⎩ M ⎭      
2021-06-22 07:20:47,442

       V_c
-i_R + ───
        R  solved for 
V_g=
∅
2021-06-22 07:20:47,442

i_L - i_R solved for 
V_g=
∅
2021-06-22 07:20:47,442
					Done with 
V_g
2021-06-22 07:20:47,443
					so far V_g = 
					OrderedSet([V_c*(2*D - 1), V_c/M])
2021-06-22 07:20:47,443
					solution to V_g is: 
					V_c⋅(2⋅D - 1) 
2021-06-22 07:20:47,443
					recursesym: 
					[i_L, i_R, R, V_c, D, V_g]
2021-06-22 07:20:47,443
					calling solver looking for 
					D
2021-06-22 07:20:47,443
						base case
2021-06-22 07:20:47,443
returning: D=set()
2021-06-22 07:20:47,444
					recursesym: 
					[i_L, i_R, R, V_c, D, V_g]
2021-06-22 07:20:47,444
					calling solver looking for 
					V_c
2021-06-22 07:20:47,444
						base case
2021-06-22 07:20:47,444
returning: V_c=set()
2021-06-22 07:20:47,444
					solution to V_g is: 
					V_c
					───
					 M  
2021-06-22 07:20:47,444
					recursesym: 
					[i_L, i_R, R, V_c, D, V_g]
2021-06-22 07:20:47,444
					calling solver looking for 
					M
2021-06-22 07:20:47,444
						adding M to [i_L, i_R, R, V_c, D, V_g]
2021-06-22 07:20:47,444
looking for 
M
2021-06-22 07:20:47,480
nonlinsolve returns: 
V_c
───
V_g
2021-06-22 07:20:47,481

D⋅(-V_c + V_g) + (1 - D)⋅(V_c + V_g) solved for 
M=
∅
2021-06-22 07:20:47,483

    V_c
M - ───
    V_g solved for 
M=
⎧V_c⎫
⎨───⎬
⎩V_g⎭
2021-06-22 07:20:47,486

       V_c
-i_R + ───
        R  solved for 
M=
∅
2021-06-22 07:20:47,486

i_L - i_R solved for 
M=
∅
2021-06-22 07:20:47,486
						Done with 
M
2021-06-22 07:20:47,486
						so far M = 
						OrderedSet([V_c/V_g])
2021-06-22 07:20:47,487
						solution to M is: 
						V_c
						───
						V_g 
2021-06-22 07:20:47,487
						recursesym: 
						[i_L, i_R, R, V_c, D, V_g, M]
2021-06-22 07:20:47,487
						calling solver looking for 
						V_c
2021-06-22 07:20:47,487
							base case
2021-06-22 07:20:47,487
returning: V_c=set()
2021-06-22 07:20:47,487
						recursesym: 
						[i_L, i_R, R, V_c, D, V_g, M]
2021-06-22 07:20:47,487
						calling solver looking for 
						V_g
2021-06-22 07:20:47,487
							base case
2021-06-22 07:20:47,487
returning: V_g=set()
2021-06-22 07:20:47,488
end of function, recursesym: {i_L: set(), i_R: set(), R: set(), V_c: set(), D: set(), V_g: set(), M: set()}
2021-06-22 07:20:47,488
returning: 
						OrderedSet([V_c/V_g])
2021-06-22 07:20:47,489
					sub-ing in 
					V_c
					───
					V_g for 
					M
2021-06-22 07:20:47,489
					and found 
					V_g
2021-06-22 07:20:47,489
					recursesym: 
					[i_L, i_R, R, V_c, D, V_g, M]
2021-06-22 07:20:47,489
					calling solver looking for 
					V_c
2021-06-22 07:20:47,489
							base case
2021-06-22 07:20:47,490
returning: V_c=set()
2021-06-22 07:20:47,490
end of function, recursesym: {i_L: set(), i_R: set(), R: set(), V_c: set(), D: set(), V_g: set(), M: OrderedSet([V_c/V_g])}
2021-06-22 07:20:47,490
returning: 
					OrderedSet([V_c*(2*D - 1), V_c/M])
2021-06-22 07:20:47,497
				sub-ing in 
				V_c⋅(2⋅D - 1) for 
				V_g
2021-06-22 07:20:47,497
				and found 
				V_c⋅(2⋅D - 1) + V_c
				───────────────────
				       2⋅V_c       
2021-06-22 07:20:47,509
				sub-ing in 
				V_c
				───
				 M  for 
				V_g
2021-06-22 07:20:47,509
				and found 
				      V_c
				V_c + ───
				       M 
				─────────
				  2⋅V_c  
2021-06-22 07:20:47,509
end of function, recursesym: {i_L: set(), i_R: set(), R: set(), V_c: set(), D: set(), V_g: OrderedSet([V_c*(2*D - 1), V_c/M]), M: OrderedSet([V_c/V_g])}
2021-06-22 07:20:47,510
returning: 
				OrderedSet([(V_c + V_g)/(2*V_c), (M + 1)/(2*M)])
2021-06-22 07:20:47,517
			sub-ing in 
			V_c + V_g
			─────────
			  2⋅V_c   for 
			D
2021-06-22 07:20:47,518
			and found 
			     V_g      
			──────────────
			     V_c + V_g
			-1 + ─────────
			        V_c   
2021-06-22 07:20:47,525
			sub-ing in 
			M + 1
			─────
			 2⋅M  for 
			D
2021-06-22 07:20:47,526
			and found 
			   V_g    
			──────────
			     M + 1
			-1 + ─────
			       M  
2021-06-22 07:20:47,526
			recursesym: 
			[i_L, i_R, R, V_c, D, V_g, M]
2021-06-22 07:20:47,526
			calling solver looking for 
			V_g
2021-06-22 07:20:47,526
							base case
2021-06-22 07:20:47,527
returning: V_g=OrderedSet([V_c*(2*D - 1), V_c/M])
2021-06-22 07:20:47,527
			sub-ing in 
			V_c⋅(2⋅D - 1) for 
			V_g
2021-06-22 07:20:47,527
			and found 
			V_c
2021-06-22 07:20:47,537
			sub-ing in 
			V_c
			───
			 M  for 
			V_g
2021-06-22 07:20:47,537
			and found 
			    V_c    
			───────────
			M⋅(2⋅D - 1)
2021-06-22 07:20:47,538
			solution to V_c is: 
			M⋅V_g 
2021-06-22 07:20:47,538
			recursesym: 
			[i_L, i_R, R, V_c, D, V_g, M]
2021-06-22 07:20:47,538
			calling solver looking for 
			M
2021-06-22 07:20:47,538
							base case
2021-06-22 07:20:47,538
returning: M=OrderedSet([V_c/V_g])
2021-06-22 07:20:47,539
			sub-ing in 
			V_c
			───
			V_g for 
			M
2021-06-22 07:20:47,539
			and found 
			V_c
2021-06-22 07:20:47,539
			recursesym: 
			[i_L, i_R, R, V_c, D, V_g, M]
2021-06-22 07:20:47,539
			calling solver looking for 
			V_g
2021-06-22 07:20:47,539
							base case
2021-06-22 07:20:47,539
returning: V_g=OrderedSet([V_c*(2*D - 1), V_c/M])
2021-06-22 07:20:47,546
			sub-ing in 
			V_c⋅(2⋅D - 1) for 
			V_g
2021-06-22 07:20:47,547
			and found 
			M⋅V_c⋅(2⋅D - 1)
2021-06-22 07:20:47,547
			sub-ing in 
			V_c
			───
			 M  for 
			V_g
2021-06-22 07:20:47,547
			and found 
			V_c
2021-06-22 07:20:47,547
			solution to V_c is: 
			R⋅i_R 
2021-06-22 07:20:47,548
			recursesym: 
			[i_L, i_R, R, V_c, D, V_g, M]
2021-06-22 07:20:47,548
			calling solver looking for 
			R
2021-06-22 07:20:47,548
							base case
2021-06-22 07:20:47,548
returning: R=set()
2021-06-22 07:20:47,548
			recursesym: 
			[i_L, i_R, R, V_c, D, V_g, M]
2021-06-22 07:20:47,548
			calling solver looking for 
			i_R
2021-06-22 07:20:47,548
							base case
2021-06-22 07:20:47,548
returning: i_R=set()
2021-06-22 07:20:47,549
end of function, recursesym: {i_L: set(), i_R: set(), R: set(), V_c: set(), D: OrderedSet([(V_c + V_g)/(2*V_c), (M + 1)/(2*M)]), V_g: OrderedSet([V_c*(2*D - 1), V_c/M]), M: OrderedSet([V_c/V_g])}
2021-06-22 07:20:47,549
returning: 
			OrderedSet([V_g/(2*D - 1), M*V_g, R*i_R])
2021-06-22 07:20:47,559
		sub-ing in 
		  V_g  
		───────
		2⋅D - 1 for 
		V_c
2021-06-22 07:20:47,560
		and found 
		     V_g     
		─────────────
		i_R⋅(2⋅D - 1)
2021-06-22 07:20:47,564
		sub-ing in 
		M⋅V_g for 
		V_c
2021-06-22 07:20:47,564
		and found 
		M⋅V_g
		─────
		 i_R 
2021-06-22 07:20:47,565
		sub-ing in 
		R⋅i_R for 
		V_c
2021-06-22 07:20:47,565
		and found 
		R
2021-06-22 07:20:47,565
		recursesym: 
		[i_L, i_R, R, V_c, D, V_g, M]
2021-06-22 07:20:47,565
		calling solver looking for 
		i_R
2021-06-22 07:20:47,565
							base case
2021-06-22 07:20:47,565
returning: i_R=set()
2021-06-22 07:20:47,566
end of function, recursesym: {i_L: set(), i_R: set(), R: set(), V_c: OrderedSet([V_g/(2*D - 1), M*V_g, R*i_R]), D: OrderedSet([(V_c + V_g)/(2*V_c), (M + 1)/(2*M)]), V_g: OrderedSet([V_c*(2*D - 1), V_c/M]), M: OrderedSet([V_c/V_g])}
2021-06-22 07:20:47,566
returning: 
		OrderedSet([V_c/i_R, V_g/(i_R*(2*D - 1)), M*V_g/i_R])
2021-06-22 07:20:47,568
	sub-ing in 
	V_c
	───
	i_R for 
	R
2021-06-22 07:20:47,568
	and found 
	i_R
2021-06-22 07:20:47,580
	sub-ing in 
	     V_g     
	─────────────
	i_R⋅(2⋅D - 1) for 
	R
2021-06-22 07:20:47,581
	and found 
	V_c⋅i_R⋅(2⋅D - 1)
	─────────────────
	       V_g       
2021-06-22 07:20:47,588
	sub-ing in 
	M⋅V_g
	─────
	 i_R  for 
	R
2021-06-22 07:20:47,588
	and found 
	V_c⋅i_R
	───────
	 M⋅V_g 
2021-06-22 07:20:47,588
	recursesym: 
	[i_L, i_R, R, V_c, D, V_g, M]
2021-06-22 07:20:47,588
	calling solver looking for 
	V_c
2021-06-22 07:20:47,588
							base case
2021-06-22 07:20:47,589
returning: V_c=OrderedSet([V_g/(2*D - 1), M*V_g, R*i_R])
2021-06-22 07:20:47,598
	sub-ing in 
	  V_g  
	───────
	2⋅D - 1 for 
	V_c
2021-06-22 07:20:47,599
	and found 
	    V_g    
	───────────
	R⋅(2⋅D - 1)
2021-06-22 07:20:47,603
	sub-ing in 
	M⋅V_g for 
	V_c
2021-06-22 07:20:47,603
	and found 
	M⋅V_g
	─────
	  R  
2021-06-22 07:20:47,604
	sub-ing in 
	R⋅i_R for 
	V_c
2021-06-22 07:20:47,604
	and found 
	i_R
2021-06-22 07:20:47,604
	solution to i_R is: 
	i_L 
2021-06-22 07:20:47,604
	recursesym: 
	[i_L, i_R, R, V_c, D, V_g, M]
2021-06-22 07:20:47,604
	calling solver looking for 
	i_L
2021-06-22 07:20:47,604
							base case
2021-06-22 07:20:47,604
returning: i_L=set()
2021-06-22 07:20:47,606
end of function, recursesym: {i_L: set(), i_R: set(), R: OrderedSet([V_c/i_R, V_g/(i_R*(2*D - 1)), M*V_g/i_R]), V_c: OrderedSet([V_g/(2*D - 1), M*V_g, R*i_R]), D: OrderedSet([(V_c + V_g)/(2*V_c), (M + 1)/(2*M)]), V_g: OrderedSet([V_c*(2*D - 1), V_c/M]), M: OrderedSet([V_c/V_g])}
2021-06-22 07:20:47,606
returning: 
	OrderedSet([V_c/R, i_L, V_g/(R*(2*D - 1)), M*V_g/R])
2021-06-22 07:20:47,609
sub-ing in 
V_c
───
 R  for 
i_R
2021-06-22 07:20:47,609
and found 
V_c
───
 R 
2021-06-22 07:20:47,610
sub-ing in 
i_L for 
i_R
2021-06-22 07:20:47,610
and found 
i_L
2021-06-22 07:20:47,623
sub-ing in 
    V_g    
───────────
R⋅(2⋅D - 1) for 
i_R
2021-06-22 07:20:47,623
and found 
    V_g    
───────────
R⋅(2⋅D - 1)
2021-06-22 07:20:47,627
sub-ing in 
M⋅V_g
─────
  R   for 
i_R
2021-06-22 07:20:47,628
and found 
M⋅V_g
─────
  R  
2021-06-22 07:20:47,630
end of function, recursesym: {i_L: set(), i_R: OrderedSet([V_c/R, i_L, V_g/(R*(2*D - 1)), M*V_g/R]), R: OrderedSet([V_c/i_R, V_g/(i_R*(2*D - 1)), M*V_g/i_R]), V_c: OrderedSet([V_g/(2*D - 1), M*V_g, R*i_R]), D: OrderedSet([(V_c + V_g)/(2*V_c), (M + 1)/(2*M)]), V_g: OrderedSet([V_c*(2*D - 1), V_c/M]), M: OrderedSet([V_c/V_g])}
2021-06-22 07:20:47,630
returning: 
OrderedSet([i_R, V_c/R, V_g/(R*(2*D - 1)), M*V_g/R])
2021-06-22 07:20:47,638
adding M to []
2021-06-22 07:20:47,638
looking for 
M
2021-06-22 07:20:47,671
nonlinsolve returns: 
V_c
───
V_g
2021-06-22 07:20:47,673

D⋅(-V_c + V_g) + (1 - D)⋅(V_c + V_g) solved for 
M=
∅
2021-06-22 07:20:47,674

    V_c
M - ───
    V_g solved for 
M=
⎧V_c⎫
⎨───⎬
⎩V_g⎭
2021-06-22 07:20:47,677

       V_c
-i_R + ───
        R  solved for 
M=
∅
2021-06-22 07:20:47,677

i_L - i_R solved for 
M=
∅
2021-06-22 07:20:47,677
Done with 
M
2021-06-22 07:20:47,677
so far M = 
OrderedSet([V_c/V_g])
2021-06-22 07:20:47,677
solution to M is: 
V_c
───
V_g 
2021-06-22 07:20:47,677
recursesym: 
[M]
2021-06-22 07:20:47,678
calling solver looking for 
V_c
2021-06-22 07:20:47,678
	adding V_c to [M]
2021-06-22 07:20:47,678
looking for 
V_c
2021-06-22 07:20:47,715
nonlinsolve returns: 
R⋅i_R
2021-06-22 07:20:47,725

D⋅(-V_c + V_g) + (1 - D)⋅(V_c + V_g) solved for 
V_c=
⎧  V_g  ⎫
⎨───────⎬
⎩2⋅D - 1⎭
2021-06-22 07:20:47,732

    V_c
M - ───
    V_g solved for 
V_c=
{M⋅V_g}
2021-06-22 07:20:47,735

       V_c
-i_R + ───
        R  solved for 
V_c=
{R⋅i_R}
2021-06-22 07:20:47,737

i_L - i_R solved for 
V_c=
∅
2021-06-22 07:20:47,737
	Done with 
V_c
2021-06-22 07:20:47,738
	so far V_c = 
	OrderedSet([V_g/(2*D - 1), M*V_g, R*i_R])
2021-06-22 07:20:47,738
	solution to V_c is: 
	  V_g  
	───────
	2⋅D - 1 
2021-06-22 07:20:47,738
	recursesym: 
	[M, V_c]
2021-06-22 07:20:47,738
	calling solver looking for 
	D
2021-06-22 07:20:47,738
		adding D to [M, V_c]
2021-06-22 07:20:47,738
looking for 
D
2021-06-22 07:20:47,776
nonlinsolve returns: 
V_c + V_g
─────────
  2⋅V_c  
2021-06-22 07:20:47,784

D⋅(-V_c + V_g) + (1 - D)⋅(V_c + V_g) solved for 
D=
⎧V_c + V_g⎫
⎨─────────⎬
⎩  2⋅V_c  ⎭
2021-06-22 07:20:47,790

    V_c
M - ───
    V_g solved for 
D=
∅
2021-06-22 07:20:47,790

       V_c
-i_R + ───
        R  solved for 
D=
∅
2021-06-22 07:20:47,791

i_L - i_R solved for 
D=
∅
2021-06-22 07:20:47,791
		Done with 
D
2021-06-22 07:20:47,791
		so far D = 
		OrderedSet([(V_c + V_g)/(2*V_c)])
2021-06-22 07:20:47,791
		solution to D is: 
		V_c + V_g
		─────────
		  2⋅V_c   
2021-06-22 07:20:47,792
		recursesym: 
		[M, V_c, D]
2021-06-22 07:20:47,792
		calling solver looking for 
		V_c
2021-06-22 07:20:47,792
			base case
2021-06-22 07:20:47,792
returning: V_c=set()
2021-06-22 07:20:47,792
		recursesym: 
		[M, V_c, D]
2021-06-22 07:20:47,792
		calling solver looking for 
		V_g
2021-06-22 07:20:47,792
			adding V_g to [M, V_c, D]
2021-06-22 07:20:47,792
looking for 
V_g
2021-06-22 07:20:47,848
nonlinsolve returns: 
V_c
───
 M 
2021-06-22 07:20:47,856

D⋅(-V_c + V_g) + (1 - D)⋅(V_c + V_g) solved for 
V_g=
{V_c⋅(2⋅D - 1)}
2021-06-22 07:20:47,869

    V_c
M - ───
    V_g solved for 
V_g=
⎧V_c⎫      
⎨───⎬ \ {0}
⎩ M ⎭      
2021-06-22 07:20:47,872

       V_c
-i_R + ───
        R  solved for 
V_g=
∅
2021-06-22 07:20:47,873

i_L - i_R solved for 
V_g=
∅
2021-06-22 07:20:47,873
			Done with 
V_g
2021-06-22 07:20:47,873
			so far V_g = 
			OrderedSet([V_c*(2*D - 1), V_c/M])
2021-06-22 07:20:47,874
			solution to V_g is: 
			V_c⋅(2⋅D - 1) 
2021-06-22 07:20:47,874
			recursesym: 
			[M, V_c, D, V_g]
2021-06-22 07:20:47,874
			calling solver looking for 
			D
2021-06-22 07:20:47,874
				base case
2021-06-22 07:20:47,874
returning: D=set()
2021-06-22 07:20:47,874
			recursesym: 
			[M, V_c, D, V_g]
2021-06-22 07:20:47,874
			calling solver looking for 
			V_c
2021-06-22 07:20:47,874
				base case
2021-06-22 07:20:47,874
returning: V_c=set()
2021-06-22 07:20:47,874
			solution to V_g is: 
			V_c
			───
			 M  
2021-06-22 07:20:47,875
			recursesym: 
			[M, V_c, D, V_g]
2021-06-22 07:20:47,875
			calling solver looking for 
			M
2021-06-22 07:20:47,875
				base case
2021-06-22 07:20:47,875
returning: M=set()
2021-06-22 07:20:47,875
			recursesym: 
			[M, V_c, D, V_g]
2021-06-22 07:20:47,875
			calling solver looking for 
			V_c
2021-06-22 07:20:47,875
				base case
2021-06-22 07:20:47,875
returning: V_c=set()
2021-06-22 07:20:47,875
end of function, recursesym: {M: set(), V_c: set(), D: set(), V_g: set()}
2021-06-22 07:20:47,875
returning: 
			OrderedSet([V_c*(2*D - 1), V_c/M])
2021-06-22 07:20:47,881
		sub-ing in 
		V_c⋅(2⋅D - 1) for 
		V_g
2021-06-22 07:20:47,881
		and found 
		V_c⋅(2⋅D - 1) + V_c
		───────────────────
		       2⋅V_c       
2021-06-22 07:20:47,889
		sub-ing in 
		V_c
		───
		 M  for 
		V_g
2021-06-22 07:20:47,890
		and found 
		      V_c
		V_c + ───
		       M 
		─────────
		  2⋅V_c  
2021-06-22 07:20:47,890
end of function, recursesym: {M: set(), V_c: set(), D: set(), V_g: OrderedSet([V_c*(2*D - 1), V_c/M])}
2021-06-22 07:20:47,890
returning: 
		OrderedSet([(V_c + V_g)/(2*V_c), (M + 1)/(2*M)])
2021-06-22 07:20:47,894
	sub-ing in 
	V_c + V_g
	─────────
	  2⋅V_c   for 
	D
2021-06-22 07:20:47,894
	and found 
	     V_g      
	──────────────
	     V_c + V_g
	-1 + ─────────
	        V_c   
2021-06-22 07:20:47,898
	sub-ing in 
	M + 1
	─────
	 2⋅M  for 
	D
2021-06-22 07:20:47,898
	and found 
	   V_g    
	──────────
	     M + 1
	-1 + ─────
	       M  
2021-06-22 07:20:47,899
	recursesym: 
	[M, V_c, D, V_g]
2021-06-22 07:20:47,899
	calling solver looking for 
	V_g
2021-06-22 07:20:47,899
				base case
2021-06-22 07:20:47,899
returning: V_g=OrderedSet([V_c*(2*D - 1), V_c/M])
2021-06-22 07:20:47,899
	sub-ing in 
	V_c⋅(2⋅D - 1) for 
	V_g
2021-06-22 07:20:47,899
	and found 
	V_c
2021-06-22 07:20:47,908
	sub-ing in 
	V_c
	───
	 M  for 
	V_g
2021-06-22 07:20:47,908
	and found 
	    V_c    
	───────────
	M⋅(2⋅D - 1)
2021-06-22 07:20:47,908
	solution to V_c is: 
	M⋅V_g 
2021-06-22 07:20:47,908
	recursesym: 
	[M, V_c, D, V_g]
2021-06-22 07:20:47,909
	calling solver looking for 
	M
2021-06-22 07:20:47,909
				base case
2021-06-22 07:20:47,909
returning: M=set()
2021-06-22 07:20:47,909
	recursesym: 
	[M, V_c, D, V_g]
2021-06-22 07:20:47,909
	calling solver looking for 
	V_g
2021-06-22 07:20:47,909
				base case
2021-06-22 07:20:47,909
returning: V_g=OrderedSet([V_c*(2*D - 1), V_c/M])
2021-06-22 07:20:47,916
	sub-ing in 
	V_c⋅(2⋅D - 1) for 
	V_g
2021-06-22 07:20:47,916
	and found 
	M⋅V_c⋅(2⋅D - 1)
2021-06-22 07:20:47,917
	sub-ing in 
	V_c
	───
	 M  for 
	V_g
2021-06-22 07:20:47,917
	and found 
	V_c
2021-06-22 07:20:47,917
	solution to V_c is: 
	R⋅i_R 
2021-06-22 07:20:47,917
	recursesym: 
	[M, V_c, D, V_g]
2021-06-22 07:20:47,917
	calling solver looking for 
	R
2021-06-22 07:20:47,917
				adding R to [M, V_c, D, V_g]
2021-06-22 07:20:47,917
looking for 
R
2021-06-22 07:20:47,966
nonlinsolve returns: 
V_c
───
i_R
2021-06-22 07:20:47,967

D⋅(-V_c + V_g) + (1 - D)⋅(V_c + V_g) solved for 
R=
∅
2021-06-22 07:20:47,968

    V_c
M - ───
    V_g solved for 
R=
∅
2021-06-22 07:20:47,973

       V_c
-i_R + ───
        R  solved for 
R=
⎧V_c⎫      
⎨───⎬ \ {0}
⎩i_R⎭      
2021-06-22 07:20:47,976

i_L - i_R solved for 
R=
∅
2021-06-22 07:20:47,976
				Done with 
R
2021-06-22 07:20:47,976
				so far R = 
				OrderedSet([V_c/i_R])
2021-06-22 07:20:47,976
				solution to R is: 
				V_c
				───
				i_R 
2021-06-22 07:20:47,977
				recursesym: 
				[M, V_c, D, V_g, R]
2021-06-22 07:20:47,977
				calling solver looking for 
				V_c
2021-06-22 07:20:47,977
					base case
2021-06-22 07:20:47,977
returning: V_c=set()
2021-06-22 07:20:47,977
				recursesym: 
				[M, V_c, D, V_g, R]
2021-06-22 07:20:47,977
				calling solver looking for 
				i_R
2021-06-22 07:20:47,977
					adding i_R to [M, V_c, D, V_g, R]
2021-06-22 07:20:47,977
looking for 
i_R
2021-06-22 07:20:48,009
nonlinsolve returns: 
i_L
2021-06-22 07:20:48,010

D⋅(-V_c + V_g) + (1 - D)⋅(V_c + V_g) solved for 
i_R=
∅
2021-06-22 07:20:48,010

    V_c
M - ───
    V_g solved for 
i_R=
∅
2021-06-22 07:20:48,012

       V_c
-i_R + ───
        R  solved for 
i_R=
⎧V_c⎫
⎨───⎬
⎩ R ⎭
2021-06-22 07:20:48,016

i_L - i_R solved for 
i_R=
{i_L}
2021-06-22 07:20:48,016
					Done with 
i_R
2021-06-22 07:20:48,016
					so far i_R = 
					OrderedSet([V_c/R, i_L])
2021-06-22 07:20:48,016
					solution to i_R is: 
					V_c
					───
					 R  
2021-06-22 07:20:48,017
					recursesym: 
					[M, V_c, D, V_g, R, i_R]
2021-06-22 07:20:48,017
					calling solver looking for 
					R
2021-06-22 07:20:48,017
						base case
2021-06-22 07:20:48,017
returning: R=set()
2021-06-22 07:20:48,017
					recursesym: 
					[M, V_c, D, V_g, R, i_R]
2021-06-22 07:20:48,017
					calling solver looking for 
					V_c
2021-06-22 07:20:48,017
						base case
2021-06-22 07:20:48,017
returning: V_c=set()
2021-06-22 07:20:48,017
					solution to i_R is: 
					i_L 
2021-06-22 07:20:48,018
					recursesym: 
					[M, V_c, D, V_g, R, i_R]
2021-06-22 07:20:48,018
					calling solver looking for 
					i_L
2021-06-22 07:20:48,018
						adding i_L to [M, V_c, D, V_g, R, i_R]
2021-06-22 07:20:48,018
looking for 
i_L
2021-06-22 07:20:48,048
nonlinsolve returns: 
i_R
2021-06-22 07:20:48,050

D⋅(-V_c + V_g) + (1 - D)⋅(V_c + V_g) solved for 
i_L=
∅
2021-06-22 07:20:48,050

    V_c
M - ───
    V_g solved for 
i_L=
∅
2021-06-22 07:20:48,051

       V_c
-i_R + ───
        R  solved for 
i_L=
∅
2021-06-22 07:20:48,052

i_L - i_R solved for 
i_L=
{i_R}
2021-06-22 07:20:48,052
						Done with 
i_L
2021-06-22 07:20:48,052
						so far i_L = 
						OrderedSet([i_R])
2021-06-22 07:20:48,052
						solution to i_L is: 
						i_R 
2021-06-22 07:20:48,052
						recursesym: 
						[M, V_c, D, V_g, R, i_R, i_L]
2021-06-22 07:20:48,052
						calling solver looking for 
						i_R
2021-06-22 07:20:48,052
							base case
2021-06-22 07:20:48,052
returning: i_R=set()
2021-06-22 07:20:48,053
end of function, recursesym: {M: set(), V_c: set(), D: OrderedSet([(V_c + V_g)/(2*V_c), (M + 1)/(2*M)]), V_g: OrderedSet([V_c*(2*D - 1), V_c/M]), R: set(), i_R: set(), i_L: set()}
2021-06-22 07:20:48,053
returning: 
						OrderedSet([i_R])
2021-06-22 07:20:48,054
					sub-ing in 
					i_R for 
					i_L
2021-06-22 07:20:48,054
					and found 
					i_R
2021-06-22 07:20:48,055
end of function, recursesym: {M: set(), V_c: set(), D: OrderedSet([(V_c + V_g)/(2*V_c), (M + 1)/(2*M)]), V_g: OrderedSet([V_c*(2*D - 1), V_c/M]), R: set(), i_R: set(), i_L: OrderedSet([i_R])}
2021-06-22 07:20:48,055
returning: 
					OrderedSet([V_c/R, i_L])
2021-06-22 07:20:48,056
				sub-ing in 
				V_c
				───
				 R  for 
				i_R
2021-06-22 07:20:48,056
				and found 
				R
2021-06-22 07:20:48,064
				sub-ing in 
				i_L for 
				i_R
2021-06-22 07:20:48,064
				and found 
				V_c
				───
				i_L
2021-06-22 07:20:48,065
end of function, recursesym: {M: set(), V_c: set(), D: OrderedSet([(V_c + V_g)/(2*V_c), (M + 1)/(2*M)]), V_g: OrderedSet([V_c*(2*D - 1), V_c/M]), R: set(), i_R: OrderedSet([V_c/R, i_L]), i_L: OrderedSet([i_R])}
2021-06-22 07:20:48,066
returning: 
				OrderedSet([V_c/i_R, V_c/i_L])
2021-06-22 07:20:48,066
	sub-ing in 
	V_c
	───
	i_R for 
	R
2021-06-22 07:20:48,066
	and found 
	V_c
2021-06-22 07:20:48,072
	sub-ing in 
	V_c
	───
	i_L for 
	R
2021-06-22 07:20:48,072
	and found 
	V_c⋅i_R
	───────
	  i_L  
2021-06-22 07:20:48,072
	recursesym: 
	[M, V_c, D, V_g, R, i_R, i_L]
2021-06-22 07:20:48,073
	calling solver looking for 
	i_R
2021-06-22 07:20:48,073
							base case
2021-06-22 07:20:48,073
returning: i_R=OrderedSet([V_c/R, i_L])
2021-06-22 07:20:48,073
	sub-ing in 
	V_c
	───
	 R  for 
	i_R
2021-06-22 07:20:48,073
	and found 
	V_c
2021-06-22 07:20:48,076
	sub-ing in 
	i_L for 
	i_R
2021-06-22 07:20:48,076
	and found 
	R⋅i_L
2021-06-22 07:20:48,078
end of function, recursesym: {M: set(), V_c: set(), D: OrderedSet([(V_c + V_g)/(2*V_c), (M + 1)/(2*M)]), V_g: OrderedSet([V_c*(2*D - 1), V_c/M]), R: OrderedSet([V_c/i_R, V_c/i_L]), i_R: OrderedSet([V_c/R, i_L]), i_L: OrderedSet([i_R])}
2021-06-22 07:20:48,078
returning: 
	OrderedSet([V_g/(2*D - 1), M*V_g, R*i_R, R*i_L])
2021-06-22 07:20:48,084
sub-ing in 
  V_g  
───────
2⋅D - 1 for 
V_c
2021-06-22 07:20:48,084
and found 
   1   
───────
2⋅D - 1
2021-06-22 07:20:48,084
sub-ing in 
M⋅V_g for 
V_c
2021-06-22 07:20:48,084
and found 
M
2021-06-22 07:20:48,089
sub-ing in 
R⋅i_R for 
V_c
2021-06-22 07:20:48,089
and found 
R⋅i_R
─────
 V_g 
2021-06-22 07:20:48,094
sub-ing in 
R⋅i_L for 
V_c
2021-06-22 07:20:48,095
and found 
R⋅i_L
─────
 V_g 
2021-06-22 07:20:48,095
recursesym: 
[M, V_c, D, V_g, R, i_R, i_L]
2021-06-22 07:20:48,095
calling solver looking for 
V_g
2021-06-22 07:20:48,095
							base case
2021-06-22 07:20:48,095
returning: V_g=OrderedSet([V_c*(2*D - 1), V_c/M])
2021-06-22 07:20:48,100
sub-ing in 
V_c⋅(2⋅D - 1) for 
V_g
2021-06-22 07:20:48,100
and found 
   1   
───────
2⋅D - 1
2021-06-22 07:20:48,102
sub-ing in 
V_c
───
 M  for 
V_g
2021-06-22 07:20:48,102
and found 
M
2021-06-22 07:20:48,103
end of function, recursesym: {M: set(), V_c: OrderedSet([V_g/(2*D - 1), M*V_g, R*i_R, R*i_L]), D: OrderedSet([(V_c + V_g)/(2*V_c), (M + 1)/(2*M)]), V_g: OrderedSet([V_c*(2*D - 1), V_c/M]), R: OrderedSet([V_c/i_R, V_c/i_L]), i_R: OrderedSet([V_c/R, i_L]), i_L: OrderedSet([i_R])}
2021-06-22 07:20:48,104
returning: 
OrderedSet([V_c/V_g, 1/(2*D - 1), R*i_R/V_g, R*i_L/V_g])
2021-06-22 07:20:48,107
adding V_c to []
2021-06-22 07:20:48,107
looking for 
V_c
2021-06-22 07:20:48,139
nonlinsolve returns: 
R⋅i_R
2021-06-22 07:20:48,145

D⋅(-V_c + V_g) + (1 - D)⋅(V_c + V_g) solved for 
V_c=
⎧  V_g  ⎫
⎨───────⎬
⎩2⋅D - 1⎭
2021-06-22 07:20:48,152

    V_c
M - ───
    V_g solved for 
V_c=
{M⋅V_g}
2021-06-22 07:20:48,155

       V_c
-i_R + ───
        R  solved for 
V_c=
{R⋅i_R}
2021-06-22 07:20:48,157

i_L - i_R solved for 
V_c=
∅
2021-06-22 07:20:48,157
Done with 
V_c
2021-06-22 07:20:48,157
so far V_c = 
OrderedSet([V_g/(2*D - 1), M*V_g, R*i_R])
2021-06-22 07:20:48,158
solution to V_c is: 
  V_g  
───────
2⋅D - 1 
2021-06-22 07:20:48,158
recursesym: 
[V_c]
2021-06-22 07:20:48,158
calling solver looking for 
D
2021-06-22 07:20:48,158
	adding D to [V_c]
2021-06-22 07:20:48,158
looking for 
D
2021-06-22 07:20:48,196
nonlinsolve returns: 
V_c + V_g
─────────
  2⋅V_c  
2021-06-22 07:20:48,203

D⋅(-V_c + V_g) + (1 - D)⋅(V_c + V_g) solved for 
D=
⎧V_c + V_g⎫
⎨─────────⎬
⎩  2⋅V_c  ⎭
2021-06-22 07:20:48,208

    V_c
M - ───
    V_g solved for 
D=
∅
2021-06-22 07:20:48,208

       V_c
-i_R + ───
        R  solved for 
D=
∅
2021-06-22 07:20:48,209

i_L - i_R solved for 
D=
∅
2021-06-22 07:20:48,209
	Done with 
D
2021-06-22 07:20:48,209
	so far D = 
	OrderedSet([(V_c + V_g)/(2*V_c)])
2021-06-22 07:20:48,209
	solution to D is: 
	V_c + V_g
	─────────
	  2⋅V_c   
2021-06-22 07:20:48,209
	recursesym: 
	[V_c, D]
2021-06-22 07:20:48,210
	calling solver looking for 
	V_c
2021-06-22 07:20:48,210
		base case
2021-06-22 07:20:48,210
returning: V_c=set()
2021-06-22 07:20:48,210
	recursesym: 
	[V_c, D]
2021-06-22 07:20:48,210
	calling solver looking for 
	V_g
2021-06-22 07:20:48,210
		adding V_g to [V_c, D]
2021-06-22 07:20:48,210
looking for 
V_g
2021-06-22 07:20:48,269
nonlinsolve returns: 
V_c
───
 M 
2021-06-22 07:20:48,275

D⋅(-V_c + V_g) + (1 - D)⋅(V_c + V_g) solved for 
V_g=
{V_c⋅(2⋅D - 1)}
2021-06-22 07:20:48,284

    V_c
M - ───
    V_g solved for 
V_g=
⎧V_c⎫      
⎨───⎬ \ {0}
⎩ M ⎭      
2021-06-22 07:20:48,286

       V_c
-i_R + ───
        R  solved for 
V_g=
∅
2021-06-22 07:20:48,287

i_L - i_R solved for 
V_g=
∅
2021-06-22 07:20:48,287
		Done with 
V_g
2021-06-22 07:20:48,287
		so far V_g = 
		OrderedSet([V_c*(2*D - 1), V_c/M])
2021-06-22 07:20:48,288
		solution to V_g is: 
		V_c⋅(2⋅D - 1) 
2021-06-22 07:20:48,288
		recursesym: 
		[V_c, D, V_g]
2021-06-22 07:20:48,288
		calling solver looking for 
		D
2021-06-22 07:20:48,288
			base case
2021-06-22 07:20:48,288
returning: D=set()
2021-06-22 07:20:48,288
		recursesym: 
		[V_c, D, V_g]
2021-06-22 07:20:48,288
		calling solver looking for 
		V_c
2021-06-22 07:20:48,288
			base case
2021-06-22 07:20:48,288
returning: V_c=set()
2021-06-22 07:20:48,288
		solution to V_g is: 
		V_c
		───
		 M  
2021-06-22 07:20:48,289
		recursesym: 
		[V_c, D, V_g]
2021-06-22 07:20:48,289
		calling solver looking for 
		M
2021-06-22 07:20:48,289
			adding M to [V_c, D, V_g]
2021-06-22 07:20:48,289
looking for 
M
2021-06-22 07:20:48,325
nonlinsolve returns: 
V_c
───
V_g
2021-06-22 07:20:48,327

D⋅(-V_c + V_g) + (1 - D)⋅(V_c + V_g) solved for 
M=
∅
2021-06-22 07:20:48,328

    V_c
M - ───
    V_g solved for 
M=
⎧V_c⎫
⎨───⎬
⎩V_g⎭
2021-06-22 07:20:48,332

       V_c
-i_R + ───
        R  solved for 
M=
∅
2021-06-22 07:20:48,332

i_L - i_R solved for 
M=
∅
2021-06-22 07:20:48,332
			Done with 
M
2021-06-22 07:20:48,332
			so far M = 
			OrderedSet([V_c/V_g])
2021-06-22 07:20:48,332
			solution to M is: 
			V_c
			───
			V_g 
2021-06-22 07:20:48,333
			recursesym: 
			[V_c, D, V_g, M]
2021-06-22 07:20:48,333
			calling solver looking for 
			V_c
2021-06-22 07:20:48,333
				base case
2021-06-22 07:20:48,333
returning: V_c=set()
2021-06-22 07:20:48,333
			recursesym: 
			[V_c, D, V_g, M]
2021-06-22 07:20:48,333
			calling solver looking for 
			V_g
2021-06-22 07:20:48,333
				base case
2021-06-22 07:20:48,333
returning: V_g=set()
2021-06-22 07:20:48,333
end of function, recursesym: {V_c: set(), D: set(), V_g: set(), M: set()}
2021-06-22 07:20:48,333
returning: 
			OrderedSet([V_c/V_g])
2021-06-22 07:20:48,334
		sub-ing in 
		V_c
		───
		V_g for 
		M
2021-06-22 07:20:48,334
		and found 
		V_g
2021-06-22 07:20:48,334
		recursesym: 
		[V_c, D, V_g, M]
2021-06-22 07:20:48,334
		calling solver looking for 
		V_c
2021-06-22 07:20:48,334
				base case
2021-06-22 07:20:48,334
returning: V_c=set()
2021-06-22 07:20:48,334
end of function, recursesym: {V_c: set(), D: set(), V_g: set(), M: OrderedSet([V_c/V_g])}
2021-06-22 07:20:48,334
returning: 
		OrderedSet([V_c*(2*D - 1), V_c/M])
2021-06-22 07:20:48,339
	sub-ing in 
	V_c⋅(2⋅D - 1) for 
	V_g
2021-06-22 07:20:48,340
	and found 
	V_c⋅(2⋅D - 1) + V_c
	───────────────────
	       2⋅V_c       
2021-06-22 07:20:48,347
	sub-ing in 
	V_c
	───
	 M  for 
	V_g
2021-06-22 07:20:48,348
	and found 
	      V_c
	V_c + ───
	       M 
	─────────
	  2⋅V_c  
2021-06-22 07:20:48,348
end of function, recursesym: {V_c: set(), D: set(), V_g: OrderedSet([V_c*(2*D - 1), V_c/M]), M: OrderedSet([V_c/V_g])}
2021-06-22 07:20:48,348
returning: 
	OrderedSet([(V_c + V_g)/(2*V_c), (M + 1)/(2*M)])
2021-06-22 07:20:48,351
sub-ing in 
V_c + V_g
─────────
  2⋅V_c   for 
D
2021-06-22 07:20:48,352
and found 
     V_g      
──────────────
     V_c + V_g
-1 + ─────────
        V_c   
2021-06-22 07:20:48,355
sub-ing in 
M + 1
─────
 2⋅M  for 
D
2021-06-22 07:20:48,356
and found 
   V_g    
──────────
     M + 1
-1 + ─────
       M  
2021-06-22 07:20:48,356
recursesym: 
[V_c, D, V_g, M]
2021-06-22 07:20:48,356
calling solver looking for 
V_g
2021-06-22 07:20:48,356
				base case
2021-06-22 07:20:48,356
returning: V_g=OrderedSet([V_c*(2*D - 1), V_c/M])
2021-06-22 07:20:48,357
sub-ing in 
V_c⋅(2⋅D - 1) for 
V_g
2021-06-22 07:20:48,357
and found 
V_c
2021-06-22 07:20:48,364
sub-ing in 
V_c
───
 M  for 
V_g
2021-06-22 07:20:48,364
and found 
    V_c    
───────────
M⋅(2⋅D - 1)
2021-06-22 07:20:48,365
solution to V_c is: 
M⋅V_g 
2021-06-22 07:20:48,365
recursesym: 
[V_c, D, V_g, M]
2021-06-22 07:20:48,365
calling solver looking for 
M
2021-06-22 07:20:48,365
				base case
2021-06-22 07:20:48,365
returning: M=OrderedSet([V_c/V_g])
2021-06-22 07:20:48,365
sub-ing in 
V_c
───
V_g for 
M
2021-06-22 07:20:48,365
and found 
V_c
2021-06-22 07:20:48,365
recursesym: 
[V_c, D, V_g, M]
2021-06-22 07:20:48,365
calling solver looking for 
V_g
2021-06-22 07:20:48,365
				base case
2021-06-22 07:20:48,366
returning: V_g=OrderedSet([V_c*(2*D - 1), V_c/M])
2021-06-22 07:20:48,372
sub-ing in 
V_c⋅(2⋅D - 1) for 
V_g
2021-06-22 07:20:48,372
and found 
M⋅V_c⋅(2⋅D - 1)
2021-06-22 07:20:48,372
sub-ing in 
V_c
───
 M  for 
V_g
2021-06-22 07:20:48,372
and found 
V_c
2021-06-22 07:20:48,373
solution to V_c is: 
R⋅i_R 
2021-06-22 07:20:48,373
recursesym: 
[V_c, D, V_g, M]
2021-06-22 07:20:48,373
calling solver looking for 
R
2021-06-22 07:20:48,373
				adding R to [V_c, D, V_g, M]
2021-06-22 07:20:48,373
looking for 
R
2021-06-22 07:20:48,418
nonlinsolve returns: 
V_c
───
i_R
2021-06-22 07:20:48,419

D⋅(-V_c + V_g) + (1 - D)⋅(V_c + V_g) solved for 
R=
∅
2021-06-22 07:20:48,419

    V_c
M - ───
    V_g solved for 
R=
∅
2021-06-22 07:20:48,425

       V_c
-i_R + ───
        R  solved for 
R=
⎧V_c⎫      
⎨───⎬ \ {0}
⎩i_R⎭      
2021-06-22 07:20:48,428

i_L - i_R solved for 
R=
∅
2021-06-22 07:20:48,428
				Done with 
R
2021-06-22 07:20:48,428
				so far R = 
				OrderedSet([V_c/i_R])
2021-06-22 07:20:48,428
				solution to R is: 
				V_c
				───
				i_R 
2021-06-22 07:20:48,428
				recursesym: 
				[V_c, D, V_g, M, R]
2021-06-22 07:20:48,428
				calling solver looking for 
				V_c
2021-06-22 07:20:48,428
					base case
2021-06-22 07:20:48,428
returning: V_c=set()
2021-06-22 07:20:48,429
				recursesym: 
				[V_c, D, V_g, M, R]
2021-06-22 07:20:48,429
				calling solver looking for 
				i_R
2021-06-22 07:20:48,429
					adding i_R to [V_c, D, V_g, M, R]
2021-06-22 07:20:48,429
looking for 
i_R
2021-06-22 07:20:48,459
nonlinsolve returns: 
i_L
2021-06-22 07:20:48,460

D⋅(-V_c + V_g) + (1 - D)⋅(V_c + V_g) solved for 
i_R=
∅
2021-06-22 07:20:48,461

    V_c
M - ───
    V_g solved for 
i_R=
∅
2021-06-22 07:20:48,463

       V_c
-i_R + ───
        R  solved for 
i_R=
⎧V_c⎫
⎨───⎬
⎩ R ⎭
2021-06-22 07:20:48,466

i_L - i_R solved for 
i_R=
{i_L}
2021-06-22 07:20:48,466
					Done with 
i_R
2021-06-22 07:20:48,466
					so far i_R = 
					OrderedSet([V_c/R, i_L])
2021-06-22 07:20:48,467
					solution to i_R is: 
					V_c
					───
					 R  
2021-06-22 07:20:48,467
					recursesym: 
					[V_c, D, V_g, M, R, i_R]
2021-06-22 07:20:48,467
					calling solver looking for 
					R
2021-06-22 07:20:48,467
						base case
2021-06-22 07:20:48,467
returning: R=set()
2021-06-22 07:20:48,467
					recursesym: 
					[V_c, D, V_g, M, R, i_R]
2021-06-22 07:20:48,467
					calling solver looking for 
					V_c
2021-06-22 07:20:48,467
						base case
2021-06-22 07:20:48,467
returning: V_c=set()
2021-06-22 07:20:48,467
					solution to i_R is: 
					i_L 
2021-06-22 07:20:48,468
					recursesym: 
					[V_c, D, V_g, M, R, i_R]
2021-06-22 07:20:48,468
					calling solver looking for 
					i_L
2021-06-22 07:20:48,468
						adding i_L to [V_c, D, V_g, M, R, i_R]
2021-06-22 07:20:48,468
looking for 
i_L
2021-06-22 07:20:48,497
nonlinsolve returns: 
i_R
2021-06-22 07:20:48,498

D⋅(-V_c + V_g) + (1 - D)⋅(V_c + V_g) solved for 
i_L=
∅
2021-06-22 07:20:48,498

    V_c
M - ───
    V_g solved for 
i_L=
∅
2021-06-22 07:20:48,499

       V_c
-i_R + ───
        R  solved for 
i_L=
∅
2021-06-22 07:20:48,500

i_L - i_R solved for 
i_L=
{i_R}
2021-06-22 07:20:48,500
						Done with 
i_L
2021-06-22 07:20:48,500
						so far i_L = 
						OrderedSet([i_R])
2021-06-22 07:20:48,500
						solution to i_L is: 
						i_R 
2021-06-22 07:20:48,500
						recursesym: 
						[V_c, D, V_g, M, R, i_R, i_L]
2021-06-22 07:20:48,500
						calling solver looking for 
						i_R
2021-06-22 07:20:48,500
							base case
2021-06-22 07:20:48,500
returning: i_R=set()
2021-06-22 07:20:48,501
end of function, recursesym: {V_c: set(), D: OrderedSet([(V_c + V_g)/(2*V_c), (M + 1)/(2*M)]), V_g: OrderedSet([V_c*(2*D - 1), V_c/M]), M: OrderedSet([V_c/V_g]), R: set(), i_R: set(), i_L: set()}
2021-06-22 07:20:48,501
returning: 
						OrderedSet([i_R])
2021-06-22 07:20:48,501
					sub-ing in 
					i_R for 
					i_L
2021-06-22 07:20:48,501
					and found 
					i_R
2021-06-22 07:20:48,502
end of function, recursesym: {V_c: set(), D: OrderedSet([(V_c + V_g)/(2*V_c), (M + 1)/(2*M)]), V_g: OrderedSet([V_c*(2*D - 1), V_c/M]), M: OrderedSet([V_c/V_g]), R: set(), i_R: set(), i_L: OrderedSet([i_R])}
2021-06-22 07:20:48,502
returning: 
					OrderedSet([V_c/R, i_L])
2021-06-22 07:20:48,503
				sub-ing in 
				V_c
				───
				 R  for 
				i_R
2021-06-22 07:20:48,503
				and found 
				R
2021-06-22 07:20:48,505
				sub-ing in 
				i_L for 
				i_R
2021-06-22 07:20:48,505
				and found 
				V_c
				───
				i_L
2021-06-22 07:20:48,506
end of function, recursesym: {V_c: set(), D: OrderedSet([(V_c + V_g)/(2*V_c), (M + 1)/(2*M)]), V_g: OrderedSet([V_c*(2*D - 1), V_c/M]), M: OrderedSet([V_c/V_g]), R: set(), i_R: OrderedSet([V_c/R, i_L]), i_L: OrderedSet([i_R])}
2021-06-22 07:20:48,506
returning: 
				OrderedSet([V_c/i_R, V_c/i_L])
2021-06-22 07:20:48,507
sub-ing in 
V_c
───
i_R for 
R
2021-06-22 07:20:48,507
and found 
V_c
2021-06-22 07:20:48,509
sub-ing in 
V_c
───
i_L for 
R
2021-06-22 07:20:48,510
and found 
V_c⋅i_R
───────
  i_L  
2021-06-22 07:20:48,510
recursesym: 
[V_c, D, V_g, M, R, i_R, i_L]
2021-06-22 07:20:48,510
calling solver looking for 
i_R
2021-06-22 07:20:48,510
							base case
2021-06-22 07:20:48,510
returning: i_R=OrderedSet([V_c/R, i_L])
2021-06-22 07:20:48,510
sub-ing in 
V_c
───
 R  for 
i_R
2021-06-22 07:20:48,510
and found 
V_c
2021-06-22 07:20:48,512
sub-ing in 
i_L for 
i_R
2021-06-22 07:20:48,512
and found 
R⋅i_L
2021-06-22 07:20:48,513
end of function, recursesym: {V_c: set(), D: OrderedSet([(V_c + V_g)/(2*V_c), (M + 1)/(2*M)]), V_g: OrderedSet([V_c*(2*D - 1), V_c/M]), M: OrderedSet([V_c/V_g]), R: OrderedSet([V_c/i_R, V_c/i_L]), i_R: OrderedSet([V_c/R, i_L]), i_L: OrderedSet([i_R])}
2021-06-22 07:20:48,513
returning: 
OrderedSet([V_g/(2*D - 1), M*V_g, R*i_R, R*i_L])
2021-06-22 07:22:00,659
adding delta_iL to []
2021-06-22 07:22:00,660
looking for 
\Delta i_L
2021-06-22 07:22:00,782
nonlinsolve returns: 
8.0⋅C⋅\Delta v_C⋅fₛ
2021-06-22 07:22:00,783

D⋅(-V_c + V_g) + (1 - D)⋅(V_c + V_g) solved for 
\Delta i_L=
∅
2021-06-22 07:22:00,784

    V_c
M - ───
    V_g solved for 
\Delta i_L=
∅
2021-06-22 07:22:00,784

       V_c
-i_R + ───
        R  solved for 
\Delta i_L=
∅
2021-06-22 07:22:00,785

i_L - i_R solved for 
\Delta i_L=
∅
2021-06-22 07:22:00,792

  D⋅(-V_c + V_g)               
- ────────────── + 2⋅\Delta i_L
       L⋅fₛ                     solved for 
\Delta i_L=
⎧-D⋅(V_c - V_g) ⎫
⎨───────────────⎬
⎩     2⋅L⋅fₛ    ⎭
2021-06-22 07:22:00,808

                 0.25⋅\Delta i_L
2⋅C⋅\Delta v_C - ───────────────
                        fₛ       solved for 
\Delta i_L=
{8.0⋅C⋅\Delta v_C⋅fₛ}
2021-06-22 07:22:00,813
Done with 
\Delta i_L
2021-06-22 07:22:00,813
so far delta_iL = 
OrderedSet([D*(-V_c + V_g)/(2*L*f_s), 8.0*C*\Delta v_C*f_s])
2021-06-22 07:22:00,814
solution to delta_iL is: 
D⋅(-V_c + V_g)
──────────────
    2⋅L⋅fₛ     
2021-06-22 07:22:00,814
recursesym: 
[\Delta i_L]
2021-06-22 07:22:00,814
calling solver looking for 
D
2021-06-22 07:22:00,814
	adding D to [\Delta i_L]
2021-06-22 07:22:00,814
looking for 
D
2021-06-22 07:22:00,883
nonlinsolve returns: 
V_c + V_g
─────────
  2⋅V_c  
2021-06-22 07:22:00,891

D⋅(-V_c + V_g) + (1 - D)⋅(V_c + V_g) solved for 
D=
⎧V_c + V_g⎫
⎨─────────⎬
⎩  2⋅V_c  ⎭
2021-06-22 07:22:00,897

    V_c
M - ───
    V_g solved for 
D=
∅
2021-06-22 07:22:00,897

       V_c
-i_R + ───
        R  solved for 
D=
∅
2021-06-22 07:22:00,898

i_L - i_R solved for 
D=
∅
2021-06-22 07:22:00,905

  D⋅(-V_c + V_g)               
- ────────────── + 2⋅\Delta i_L
       L⋅fₛ                     solved for 
D=
⎧-2⋅L⋅\Delta i_L⋅fₛ ⎫
⎨───────────────────⎬
⎩     V_c - V_g     ⎭
2021-06-22 07:22:00,914

                 0.25⋅\Delta i_L
2⋅C⋅\Delta v_C - ───────────────
                        fₛ       solved for 
D=
∅
2021-06-22 07:22:00,914
	Done with 
D
2021-06-22 07:22:00,915
	so far D = 
	OrderedSet([(V_c + V_g)/(2*V_c), -2*L*\Delta i_L*f_s/(V_c - V_g)])
2021-06-22 07:22:00,915
	solution to D is: 
	V_c + V_g
	─────────
	  2⋅V_c   
2021-06-22 07:22:00,915
	recursesym: 
	[\Delta i_L, D]
2021-06-22 07:22:00,915
	calling solver looking for 
	V_c
2021-06-22 07:22:00,915
		adding V_c to [\Delta i_L, D]
2021-06-22 07:22:00,915
looking for 
V_c
2021-06-22 07:22:00,977
nonlinsolve returns: 
R⋅i_R
2021-06-22 07:22:00,986

D⋅(-V_c + V_g) + (1 - D)⋅(V_c + V_g) solved for 
V_c=
⎧  V_g  ⎫
⎨───────⎬
⎩2⋅D - 1⎭
2021-06-22 07:22:00,995

    V_c
M - ───
    V_g solved for 
V_c=
{M⋅V_g}
2021-06-22 07:22:00,998

       V_c
-i_R + ───
        R  solved for 
V_c=
{R⋅i_R}
2021-06-22 07:22:01,000

i_L - i_R solved for 
V_c=
∅
2021-06-22 07:22:01,008

  D⋅(-V_c + V_g)               
- ────────────── + 2⋅\Delta i_L
       L⋅fₛ                     solved for 
V_c=
⎧      2⋅L⋅\Delta i_L⋅fₛ⎫
⎨V_g - ─────────────────⎬
⎩              D        ⎭
2021-06-22 07:22:01,020

                 0.25⋅\Delta i_L
2⋅C⋅\Delta v_C - ───────────────
                        fₛ       solved for 
V_c=
∅
2021-06-22 07:22:01,020
		Done with 
V_c
2021-06-22 07:22:01,021
		so far V_c = 
		OrderedSet([V_g/(2*D - 1), M*V_g, R*i_R, V_g - 2*L*\Delta i_L*f_s/D])
2021-06-22 07:22:01,021
		solution to V_c is: 
		  V_g  
		───────
		2⋅D - 1 
2021-06-22 07:22:01,021
		recursesym: 
		[\Delta i_L, D, V_c]
2021-06-22 07:22:01,021
		calling solver looking for 
		D
2021-06-22 07:22:01,021
			base case
2021-06-22 07:22:01,021
returning: D=set()
2021-06-22 07:22:01,022
		recursesym: 
		[\Delta i_L, D, V_c]
2021-06-22 07:22:01,022
		calling solver looking for 
		V_g
2021-06-22 07:22:01,022
			adding V_g to [\Delta i_L, D, V_c]
2021-06-22 07:22:01,022
looking for 
V_g
2021-06-22 07:22:01,120
nonlinsolve returns: 
V_c
───
 M 
2021-06-22 07:22:01,129

D⋅(-V_c + V_g) + (1 - D)⋅(V_c + V_g) solved for 
V_g=
{V_c⋅(2⋅D - 1)}
2021-06-22 07:22:01,140

    V_c
M - ───
    V_g solved for 
V_g=
⎧V_c⎫      
⎨───⎬ \ {0}
⎩ M ⎭      
2021-06-22 07:22:01,143

       V_c
-i_R + ───
        R  solved for 
V_g=
∅
2021-06-22 07:22:01,143

i_L - i_R solved for 
V_g=
∅
2021-06-22 07:22:01,148

  D⋅(-V_c + V_g)               
- ────────────── + 2⋅\Delta i_L
       L⋅fₛ                     solved for 
V_g=
⎧      2⋅L⋅\Delta i_L⋅fₛ⎫
⎨V_c + ─────────────────⎬
⎩              D        ⎭
2021-06-22 07:22:01,158

                 0.25⋅\Delta i_L
2⋅C⋅\Delta v_C - ───────────────
                        fₛ       solved for 
V_g=
∅
2021-06-22 07:22:01,158
			Done with 
V_g
2021-06-22 07:22:01,159
			so far V_g = 
			OrderedSet([V_c*(2*D - 1), V_c/M, V_c + 2*L*\Delta i_L*f_s/D])
2021-06-22 07:22:01,159
			solution to V_g is: 
			V_c⋅(2⋅D - 1) 
2021-06-22 07:22:01,159
			recursesym: 
			[\Delta i_L, D, V_c, V_g]
2021-06-22 07:22:01,159
			calling solver looking for 
			D
2021-06-22 07:22:01,159
				base case
2021-06-22 07:22:01,159
returning: D=set()
2021-06-22 07:22:01,159
			recursesym: 
			[\Delta i_L, D, V_c, V_g]
2021-06-22 07:22:01,160
			calling solver looking for 
			V_c
2021-06-22 07:22:01,160
				base case
2021-06-22 07:22:01,160
returning: V_c=set()
2021-06-22 07:22:01,160
			solution to V_g is: 
			V_c
			───
			 M  
2021-06-22 07:22:01,160
			recursesym: 
			[\Delta i_L, D, V_c, V_g]
2021-06-22 07:22:01,160
			calling solver looking for 
			M
2021-06-22 07:22:01,160
				adding M to [\Delta i_L, D, V_c, V_g]
2021-06-22 07:22:01,160
looking for 
M
2021-06-22 07:22:01,220
nonlinsolve returns: 
V_c
───
V_g
2021-06-22 07:22:01,221

D⋅(-V_c + V_g) + (1 - D)⋅(V_c + V_g) solved for 
M=
∅
2021-06-22 07:22:01,223

    V_c
M - ───
    V_g solved for 
M=
⎧V_c⎫
⎨───⎬
⎩V_g⎭
2021-06-22 07:22:01,226

       V_c
-i_R + ───
        R  solved for 
M=
∅
2021-06-22 07:22:01,226

i_L - i_R solved for 
M=
∅
2021-06-22 07:22:01,229

  D⋅(-V_c + V_g)               
- ────────────── + 2⋅\Delta i_L
       L⋅fₛ                     solved for 
M=
∅
2021-06-22 07:22:01,229

                 0.25⋅\Delta i_L
2⋅C⋅\Delta v_C - ───────────────
                        fₛ       solved for 
M=
∅
2021-06-22 07:22:01,229
				Done with 
M
2021-06-22 07:22:01,230
				so far M = 
				OrderedSet([V_c/V_g])
2021-06-22 07:22:01,230
				solution to M is: 
				V_c
				───
				V_g 
2021-06-22 07:22:01,230
				recursesym: 
				[\Delta i_L, D, V_c, V_g, M]
2021-06-22 07:22:01,230
				calling solver looking for 
				V_c
2021-06-22 07:22:01,230
					base case
2021-06-22 07:22:01,230
returning: V_c=set()
2021-06-22 07:22:01,230
				recursesym: 
				[\Delta i_L, D, V_c, V_g, M]
2021-06-22 07:22:01,230
				calling solver looking for 
				V_g
2021-06-22 07:22:01,230
					base case
2021-06-22 07:22:01,230
returning: V_g=set()
2021-06-22 07:22:01,231
end of function, recursesym: {\Delta i_L: set(), D: set(), V_c: set(), V_g: set(), M: set()}
2021-06-22 07:22:01,231
returning: 
				OrderedSet([V_c/V_g])
2021-06-22 07:22:01,231
			sub-ing in 
			V_c
			───
			V_g for 
			M
2021-06-22 07:22:01,231
			and found 
			V_g
2021-06-22 07:22:01,231
			recursesym: 
			[\Delta i_L, D, V_c, V_g, M]
2021-06-22 07:22:01,231
			calling solver looking for 
			V_c
2021-06-22 07:22:01,231
					base case
2021-06-22 07:22:01,231
returning: V_c=set()
2021-06-22 07:22:01,232
			solution to V_g is: 
			      2⋅L⋅\Delta i_L⋅fₛ
			V_c + ─────────────────
			              D         
2021-06-22 07:22:01,232
			recursesym: 
			[\Delta i_L, D, V_c, V_g, M]
2021-06-22 07:22:01,232
			calling solver looking for 
			D
2021-06-22 07:22:01,232
					base case
2021-06-22 07:22:01,232
returning: D=set()
2021-06-22 07:22:01,232
			recursesym: 
			[\Delta i_L, D, V_c, V_g, M]
2021-06-22 07:22:01,232
			calling solver looking for 
			L
2021-06-22 07:22:01,232
					adding L to [\Delta i_L, D, V_c, V_g, M]
2021-06-22 07:22:01,232
looking for 
L
2021-06-22 07:22:01,350
nonlinsolve returns: 
 D⋅(-V_c + V_g)
───────────────
2⋅\Delta i_L⋅fₛ
2021-06-22 07:22:01,351

D⋅(-V_c + V_g) + (1 - D)⋅(V_c + V_g) solved for 
L=
∅
2021-06-22 07:22:01,351

    V_c
M - ───
    V_g solved for 
L=
∅
2021-06-22 07:22:01,352

       V_c
-i_R + ───
        R  solved for 
L=
∅
2021-06-22 07:22:01,352

i_L - i_R solved for 
L=
∅
2021-06-22 07:22:01,366

  D⋅(-V_c + V_g)               
- ────────────── + 2⋅\Delta i_L
       L⋅fₛ                     solved for 
L=
⎧-D⋅(V_c - V_g) ⎫      
⎨───────────────⎬ \ {0}
⎩2⋅\Delta i_L⋅fₛ⎭      
2021-06-22 07:22:01,374

                 0.25⋅\Delta i_L
2⋅C⋅\Delta v_C - ───────────────
                        fₛ       solved for 
L=
∅
2021-06-22 07:22:01,374
					Done with 
L
2021-06-22 07:22:01,374
					so far L = 
					OrderedSet([D*(-V_c + V_g)/(2*\Delta i_L*f_s)])
2021-06-22 07:22:01,375
					solution to L is: 
					 D⋅(-V_c + V_g)
					───────────────
					2⋅\Delta i_L⋅fₛ 
2021-06-22 07:22:01,375
					recursesym: 
					[\Delta i_L, D, V_c, V_g, M, L]
2021-06-22 07:22:01,375
					calling solver looking for 
					D
2021-06-22 07:22:01,375
						base case
2021-06-22 07:22:01,375
returning: D=set()
2021-06-22 07:22:01,375
					recursesym: 
					[\Delta i_L, D, V_c, V_g, M, L]
2021-06-22 07:22:01,375
					calling solver looking for 
					V_c
2021-06-22 07:22:01,375
						base case
2021-06-22 07:22:01,375
returning: V_c=set()
2021-06-22 07:22:01,376
					recursesym: 
					[\Delta i_L, D, V_c, V_g, M, L]
2021-06-22 07:22:01,376
					calling solver looking for 
					V_g
2021-06-22 07:22:01,376
						base case
2021-06-22 07:22:01,376
returning: V_g=set()
2021-06-22 07:22:01,376
					recursesym: 
					[\Delta i_L, D, V_c, V_g, M, L]
2021-06-22 07:22:01,376
					calling solver looking for 
					\Delta i_L
2021-06-22 07:22:01,376
						base case
2021-06-22 07:22:01,376
returning: delta_iL=set()
2021-06-22 07:22:01,376
					recursesym: 
					[\Delta i_L, D, V_c, V_g, M, L]
2021-06-22 07:22:01,376
					calling solver looking for 
					fₛ
2021-06-22 07:22:01,376
						adding f_s to [\Delta i_L, D, V_c, V_g, M, L]
2021-06-22 07:22:01,376
looking for 
fₛ
2021-06-22 07:22:01,494
nonlinsolve returns: 
0.125⋅\Delta i_L
────────────────
  C⋅\Delta v_C  
2021-06-22 07:22:01,495

D⋅(-V_c + V_g) + (1 - D)⋅(V_c + V_g) solved for 
fₛ=
∅
2021-06-22 07:22:01,496

    V_c
M - ───
    V_g solved for 
fₛ=
∅
2021-06-22 07:22:01,497

       V_c
-i_R + ───
        R  solved for 
fₛ=
∅
2021-06-22 07:22:01,497

i_L - i_R solved for 
fₛ=
∅
2021-06-22 07:22:01,511

  D⋅(-V_c + V_g)               
- ────────────── + 2⋅\Delta i_L
       L⋅fₛ                     solved for 
fₛ=
⎧-D⋅(V_c - V_g) ⎫      
⎨───────────────⎬ \ {0}
⎩ 2⋅L⋅\Delta i_L⎭      
2021-06-22 07:22:01,533

                 0.25⋅\Delta i_L
2⋅C⋅\Delta v_C - ───────────────
                        fₛ       solved for 
fₛ=
⎧0.125⋅\Delta i_L⎫      
⎨────────────────⎬ \ {0}
⎩  C⋅\Delta v_C  ⎭      
2021-06-22 07:22:01,537
						Done with 
fₛ
2021-06-22 07:22:01,537
						so far f_s = 
						OrderedSet([D*(-V_c + V_g)/(2*L*\Delta i_L), 0.125*\Delta i_L/(C*\Delta v_C)])
2021-06-22 07:22:01,538
						solution to f_s is: 
						D⋅(-V_c + V_g)
						──────────────
						2⋅L⋅\Delta i_L 
2021-06-22 07:22:01,538
						recursesym: 
						[\Delta i_L, D, V_c, V_g, M, L, fₛ]
2021-06-22 07:22:01,538
						calling solver looking for 
						D
2021-06-22 07:22:01,538
							base case
2021-06-22 07:22:01,538
returning: D=set()
2021-06-22 07:22:01,538
						recursesym: 
						[\Delta i_L, D, V_c, V_g, M, L, fₛ]
2021-06-22 07:22:01,538
						calling solver looking for 
						L
2021-06-22 07:22:01,539
							base case
2021-06-22 07:22:01,539
returning: L=set()
2021-06-22 07:22:01,539
						recursesym: 
						[\Delta i_L, D, V_c, V_g, M, L, fₛ]
2021-06-22 07:22:01,539
						calling solver looking for 
						V_c
2021-06-22 07:22:01,539
							base case
2021-06-22 07:22:01,539
returning: V_c=set()
2021-06-22 07:22:01,539
						recursesym: 
						[\Delta i_L, D, V_c, V_g, M, L, fₛ]
2021-06-22 07:22:01,539
						calling solver looking for 
						V_g
2021-06-22 07:22:01,539
							base case
2021-06-22 07:22:01,539
returning: V_g=set()
2021-06-22 07:22:01,540
						recursesym: 
						[\Delta i_L, D, V_c, V_g, M, L, fₛ]
2021-06-22 07:22:01,540
						calling solver looking for 
						\Delta i_L
2021-06-22 07:22:01,540
							base case
2021-06-22 07:22:01,540
returning: delta_iL=set()
2021-06-22 07:22:01,540
						solution to f_s is: 
						0.125⋅\Delta i_L
						────────────────
						  C⋅\Delta v_C   
2021-06-22 07:22:01,540
						recursesym: 
						[\Delta i_L, D, V_c, V_g, M, L, fₛ]
2021-06-22 07:22:01,540
						calling solver looking for 
						C
2021-06-22 07:22:01,540
							adding C to [\Delta i_L, D, V_c, V_g, M, L, f_s]
2021-06-22 07:22:01,540
looking for 
C
2021-06-22 07:22:01,606
nonlinsolve returns: 
0.125⋅\Delta i_L
────────────────
 \Delta v_C⋅fₛ  
2021-06-22 07:22:01,607

D⋅(-V_c + V_g) + (1 - D)⋅(V_c + V_g) solved for 
C=
∅
2021-06-22 07:22:01,608

    V_c
M - ───
    V_g solved for 
C=
∅
2021-06-22 07:22:01,609

       V_c
-i_R + ───
        R  solved for 
C=
∅
2021-06-22 07:22:01,610

i_L - i_R solved for 
C=
∅
2021-06-22 07:22:01,611

  D⋅(-V_c + V_g)               
- ────────────── + 2⋅\Delta i_L
       L⋅fₛ                     solved for 
C=
∅
2021-06-22 07:22:01,615

                 0.25⋅\Delta i_L
2⋅C⋅\Delta v_C - ───────────────
                        fₛ       solved for 
C=
⎧0.125⋅\Delta i_L⎫
⎨────────────────⎬
⎩ \Delta v_C⋅fₛ  ⎭
2021-06-22 07:22:01,621
							Done with 
C
2021-06-22 07:22:01,621
							so far C = 
							OrderedSet([0.125*\Delta i_L/(\Delta v_C*f_s)])
2021-06-22 07:22:01,621
							solution to C is: 
							0.125⋅\Delta i_L
							────────────────
							 \Delta v_C⋅fₛ   
2021-06-22 07:22:01,621
							recursesym: 
							[\Delta i_L, D, V_c, V_g, M, L, fₛ, C]
2021-06-22 07:22:01,622
							calling solver looking for 
							\Delta i_L
2021-06-22 07:22:01,622
								base case
2021-06-22 07:22:01,622
returning: delta_iL=set()
2021-06-22 07:22:01,622
							recursesym: 
							[\Delta i_L, D, V_c, V_g, M, L, fₛ, C]
2021-06-22 07:22:01,622
							calling solver looking for 
							\Delta v_C
2021-06-22 07:22:01,622
								adding detla_vC to [\Delta i_L, D, V_c, V_g, M, L, f_s, C]
2021-06-22 07:22:01,622
looking for 
\Delta v_C
2021-06-22 07:22:01,683
nonlinsolve returns: 
0.125⋅\Delta i_L
────────────────
      C⋅fₛ      
2021-06-22 07:22:01,684

D⋅(-V_c + V_g) + (1 - D)⋅(V_c + V_g) solved for 
\Delta v_C=
∅
2021-06-22 07:22:01,685

    V_c
M - ───
    V_g solved for 
\Delta v_C=
∅
2021-06-22 07:22:01,685

       V_c
-i_R + ───
        R  solved for 
\Delta v_C=
∅
2021-06-22 07:22:01,686

i_L - i_R solved for 
\Delta v_C=
∅
2021-06-22 07:22:01,686

  D⋅(-V_c + V_g)               
- ────────────── + 2⋅\Delta i_L
       L⋅fₛ                     solved for 
\Delta v_C=
∅
2021-06-22 07:22:01,689

                 0.25⋅\Delta i_L
2⋅C⋅\Delta v_C - ───────────────
                        fₛ       solved for 
\Delta v_C=
⎧0.125⋅\Delta i_L⎫
⎨────────────────⎬
⎩      C⋅fₛ      ⎭
2021-06-22 07:22:01,696
								Done with 
\Delta v_C
2021-06-22 07:22:01,696
								so far detla_vC = 
								OrderedSet([0.125*\Delta i_L/(C*f_s)])
2021-06-22 07:22:01,697
								solution to detla_vC is: 
								0.125⋅\Delta i_L
								────────────────
								      C⋅fₛ       
2021-06-22 07:22:01,697
								recursesym: 
								[\Delta i_L, D, V_c, V_g, M, L, fₛ, C, \Delta v_C]
2021-06-22 07:22:01,697
								calling solver looking for 
								C
2021-06-22 07:22:01,698
									base case
2021-06-22 07:22:01,698
returning: C=set()
2021-06-22 07:22:01,698
								recursesym: 
								[\Delta i_L, D, V_c, V_g, M, L, fₛ, C, \Delta v_C]
2021-06-22 07:22:01,698
								calling solver looking for 
								\Delta i_L
2021-06-22 07:22:01,698
									base case
2021-06-22 07:22:01,698
returning: delta_iL=set()
2021-06-22 07:22:01,699
								recursesym: 
								[\Delta i_L, D, V_c, V_g, M, L, fₛ, C, \Delta v_C]
2021-06-22 07:22:01,699
								calling solver looking for 
								fₛ
2021-06-22 07:22:01,699
									base case
2021-06-22 07:22:01,699
returning: f_s=set()
2021-06-22 07:22:01,699
end of function, recursesym: {\Delta i_L: set(), D: set(), V_c: set(), V_g: set(), M: OrderedSet([V_c/V_g]), L: set(), f_s: set(), C: set(), \Delta v_C: set()}
2021-06-22 07:22:01,699
returning: 
								OrderedSet([0.125*\Delta i_L/(C*f_s)])
2021-06-22 07:22:01,706
							sub-ing in 
							0.125⋅\Delta i_L
							────────────────
							      C⋅fₛ       for 
							\Delta v_C
2021-06-22 07:22:01,706
							and found 
							1.0⋅C
2021-06-22 07:22:01,707
							recursesym: 
							[\Delta i_L, D, V_c, V_g, M, L, fₛ, C, \Delta v_C]
2021-06-22 07:22:01,707
							calling solver looking for 
							fₛ
2021-06-22 07:22:01,707
									base case
2021-06-22 07:22:01,707
returning: f_s=set()
2021-06-22 07:22:01,707
end of function, recursesym: {\Delta i_L: set(), D: set(), V_c: set(), V_g: set(), M: OrderedSet([V_c/V_g]), L: set(), f_s: set(), C: set(), \Delta v_C: OrderedSet([0.125*\Delta i_L/(C*f_s)])}
2021-06-22 07:22:01,707
returning: 
							OrderedSet([0.125*\Delta i_L/(\Delta v_C*f_s)])
2021-06-22 07:22:01,715
						sub-ing in 
						0.125⋅\Delta i_L
						────────────────
						 \Delta v_C⋅fₛ   for 
						C
2021-06-22 07:22:01,715
						and found 
						1.0⋅fₛ
2021-06-22 07:22:01,715
						recursesym: 
						[\Delta i_L, D, V_c, V_g, M, L, fₛ, C, \Delta v_C]
2021-06-22 07:22:01,715
						calling solver looking for 
						\Delta i_L
2021-06-22 07:22:01,715
									base case
2021-06-22 07:22:01,715
returning: delta_iL=set()
2021-06-22 07:22:01,715
						recursesym: 
						[\Delta i_L, D, V_c, V_g, M, L, fₛ, C, \Delta v_C]
2021-06-22 07:22:01,716
						calling solver looking for 
						\Delta v_C
2021-06-22 07:22:01,716
									base case
2021-06-22 07:22:01,716
returning: detla_vC=OrderedSet([0.125*\Delta i_L/(C*f_s)])
2021-06-22 07:22:01,719
						sub-ing in 
						0.125⋅\Delta i_L
						────────────────
						      C⋅fₛ       for 
						\Delta v_C
2021-06-22 07:22:01,719
						and found 
						1.0⋅fₛ
2021-06-22 07:22:01,719
end of function, recursesym: {\Delta i_L: set(), D: set(), V_c: set(), V_g: set(), M: OrderedSet([V_c/V_g]), L: set(), f_s: set(), C: OrderedSet([0.125*\Delta i_L/(\Delta v_C*f_s)]), \Delta v_C: OrderedSet([0.125*\Delta i_L/(C*f_s)])}
2021-06-22 07:22:01,720
returning: 
						OrderedSet([D*(-V_c + V_g)/(2*L*\Delta i_L), 0.125*\Delta i_L/(C*\Delta v_C)])
2021-06-22 07:22:01,721
					sub-ing in 
					D⋅(-V_c + V_g)
					──────────────
					2⋅L⋅\Delta i_L for 
					fₛ
2021-06-22 07:22:01,721
					and found 
					L
2021-06-22 07:22:01,747
					sub-ing in 
					0.125⋅\Delta i_L
					────────────────
					  C⋅\Delta v_C   for 
					fₛ
2021-06-22 07:22:01,747
					and found 
					4.0⋅C⋅D⋅\Delta v_C⋅(-V_c + V_g)
					───────────────────────────────
					                    2          
					          \Delta i_L           
2021-06-22 07:22:01,748
end of function, recursesym: {\Delta i_L: set(), D: set(), V_c: set(), V_g: set(), M: OrderedSet([V_c/V_g]), L: set(), f_s: OrderedSet([D*(-V_c + V_g)/(2*L*\Delta i_L), 0.125*\Delta i_L/(C*\Delta v_C)]), C: OrderedSet([0.125*\Delta i_L/(\Delta v_C*f_s)]), \Delta v_C: OrderedSet([0.125*\Delta i_L/(C*f_s)])}
2021-06-22 07:22:01,749
returning: 
					OrderedSet([D*(-V_c + V_g)/(2*\Delta i_L*f_s), 4.0*C*D*\Delta v_C*(-V_c + V_g)
					/\Delta i_L**2])
2021-06-22 07:22:01,750
			sub-ing in 
			 D⋅(-V_c + V_g)
			───────────────
			2⋅\Delta i_L⋅fₛ for 
			L
2021-06-22 07:22:01,750
			and found 
			V_g
2021-06-22 07:22:01,782
			sub-ing in 
			4.0⋅C⋅D⋅\Delta v_C⋅(-V_c + V_g)
			───────────────────────────────
			                    2          
			          \Delta i_L            for 
			L
2021-06-22 07:22:01,783
			and found 
			8.0⋅C⋅\Delta v_C⋅fₛ⋅(-V_c + V_g)      
			──────────────────────────────── + V_c
			           \Delta i_L                 
2021-06-22 07:22:01,783
			recursesym: 
			[\Delta i_L, D, V_c, V_g, M, L, fₛ, C, \Delta v_C]
2021-06-22 07:22:01,783
			calling solver looking for 
			V_c
2021-06-22 07:22:01,783
									base case
2021-06-22 07:22:01,783
returning: V_c=set()
2021-06-22 07:22:01,784
			recursesym: 
			[\Delta i_L, D, V_c, V_g, M, L, fₛ, C, \Delta v_C]
2021-06-22 07:22:01,784
			calling solver looking for 
			\Delta i_L
2021-06-22 07:22:01,784
									base case
2021-06-22 07:22:01,784
returning: delta_iL=set()
2021-06-22 07:22:01,784
			recursesym: 
			[\Delta i_L, D, V_c, V_g, M, L, fₛ, C, \Delta v_C]
2021-06-22 07:22:01,784
			calling solver looking for 
			fₛ
2021-06-22 07:22:01,784
									base case
2021-06-22 07:22:01,785
returning: f_s=OrderedSet([D*(-V_c + V_g)/(2*L*\Delta i_L), 0.125*\Delta i_L/(C*\Delta v_C)])
2021-06-22 07:22:01,785
			sub-ing in 
			D⋅(-V_c + V_g)
			──────────────
			2⋅L⋅\Delta i_L for 
			fₛ
2021-06-22 07:22:01,785
			and found 
			V_g
2021-06-22 07:22:01,853
			sub-ing in 
			0.125⋅\Delta i_L
			────────────────
			  C⋅\Delta v_C   for 
			fₛ
2021-06-22 07:22:01,854
			and found 
			                       2
			      0.25⋅L⋅\Delta i_L 
			V_c + ──────────────────
			        C⋅D⋅\Delta v_C  
2021-06-22 07:22:01,856
end of function, recursesym: {\Delta i_L: set(), D: set(), V_c: set(), V_g: set(), M: OrderedSet([V_c/V_g]), L: OrderedSet([D*(-V_c + V_g)/(2*\Delta i_L*f_s), 4.0*C*D*\Delta v_C*(-V_c + V_g)/\Delta i_L**2]), f_s: OrderedSet([D*(-V_c + V_g)/(2*L*\Delta i_L), 0.125*\Delta i_L/(C*\Delta v_C)]), C: OrderedSet([0.125*\Delta i_L/(\Delta v_C*f_s)]), \Delta v_C: OrderedSet([0.125*\Delta i_L/(C*f_s)])}
2021-06-22 07:22:01,857
returning: 
			OrderedSet([V_c*(2*D - 1), V_c/M, V_c + 2*L*\Delta i_L*f_s/D, V_c + 0.25*L*\De
			lta i_L**2/(C*D*\Delta v_C)])
2021-06-22 07:22:01,858
		sub-ing in 
		V_c⋅(2⋅D - 1) for 
		V_g
2021-06-22 07:22:01,858
		and found 
		V_c
2021-06-22 07:22:01,871
		sub-ing in 
		V_c
		───
		 M  for 
		V_g
2021-06-22 07:22:01,872
		and found 
		    V_c    
		───────────
		M⋅(2⋅D - 1)
2021-06-22 07:22:01,900
		sub-ing in 
		      2⋅L⋅\Delta i_L⋅fₛ
		V_c + ─────────────────
		              D         for 
		V_g
2021-06-22 07:22:01,901
		and found 
		      2⋅L⋅\Delta i_L⋅fₛ
		V_c + ─────────────────
		              D        
		───────────────────────
		        2⋅D - 1        
2021-06-22 07:22:01,958
		sub-ing in 
		                       2
		      0.25⋅L⋅\Delta i_L 
		V_c + ──────────────────
		        C⋅D⋅\Delta v_C   for 
		V_g
2021-06-22 07:22:01,959
		and found 
		                       2
		      0.25⋅L⋅\Delta i_L 
		V_c + ──────────────────
		        C⋅D⋅\Delta v_C  
		────────────────────────
		        2⋅D - 1         
2021-06-22 07:22:01,959
		solution to V_c is: 
		M⋅V_g 
2021-06-22 07:22:01,960
		recursesym: 
		[\Delta i_L, D, V_c, V_g, M, L, fₛ, C, \Delta v_C]
2021-06-22 07:22:01,960
		calling solver looking for 
		M
2021-06-22 07:22:01,960
									base case
2021-06-22 07:22:01,960
returning: M=OrderedSet([V_c/V_g])
2021-06-22 07:22:01,960
		sub-ing in 
		V_c
		───
		V_g for 
		M
2021-06-22 07:22:01,960
		and found 
		V_c
2021-06-22 07:22:01,961
		recursesym: 
		[\Delta i_L, D, V_c, V_g, M, L, fₛ, C, \Delta v_C]
2021-06-22 07:22:01,961
		calling solver looking for 
		V_g
2021-06-22 07:22:01,961
									base case
2021-06-22 07:22:01,962
returning: V_g=OrderedSet([V_c*(2*D - 1), V_c/M, V_c + 2*L*\Delta i_L*f_s/D, V_c + 0.25*L*\De
lta i_L**2/(C*D*\Delta v_C)])
2021-06-22 07:22:01,969
		sub-ing in 
		V_c⋅(2⋅D - 1) for 
		V_g
2021-06-22 07:22:01,969
		and found 
		M⋅V_c⋅(2⋅D - 1)
2021-06-22 07:22:01,969
		sub-ing in 
		V_c
		───
		 M  for 
		V_g
2021-06-22 07:22:01,969
		and found 
		V_c
2021-06-22 07:22:01,984
		sub-ing in 
		      2⋅L⋅\Delta i_L⋅fₛ
		V_c + ─────────────────
		              D         for 
		V_g
2021-06-22 07:22:01,985
		and found 
		  ⎛      2⋅L⋅\Delta i_L⋅fₛ⎞
		M⋅⎜V_c + ─────────────────⎟
		  ⎝              D        ⎠
2021-06-22 07:22:02,026
		sub-ing in 
		                       2
		      0.25⋅L⋅\Delta i_L 
		V_c + ──────────────────
		        C⋅D⋅\Delta v_C   for 
		V_g
2021-06-22 07:22:02,027
		and found 
		  ⎛                       2⎞
		  ⎜      0.25⋅L⋅\Delta i_L ⎟
		M⋅⎜V_c + ──────────────────⎟
		  ⎝        C⋅D⋅\Delta v_C  ⎠
2021-06-22 07:22:02,027
		solution to V_c is: 
		R⋅i_R 
2021-06-22 07:22:02,028
		recursesym: 
		[\Delta i_L, D, V_c, V_g, M, L, fₛ, C, \Delta v_C]
2021-06-22 07:22:02,028
		calling solver looking for 
		R
2021-06-22 07:22:02,028
									adding R to [\Delta i_L, D, V_c, V_g, M, L, f_s, C, \Delta v_C]
2021-06-22 07:22:02,028
looking for 
R
2021-06-22 07:22:02,132
nonlinsolve returns: 
V_c
───
i_R
2021-06-22 07:22:02,133

D⋅(-V_c + V_g) + (1 - D)⋅(V_c + V_g) solved for 
R=
∅
2021-06-22 07:22:02,133

    V_c
M - ───
    V_g solved for 
R=
∅
2021-06-22 07:22:02,140

       V_c
-i_R + ───
        R  solved for 
R=
⎧V_c⎫      
⎨───⎬ \ {0}
⎩i_R⎭      
2021-06-22 07:22:02,143

i_L - i_R solved for 
R=
∅
2021-06-22 07:22:02,144

  D⋅(-V_c + V_g)               
- ────────────── + 2⋅\Delta i_L
       L⋅fₛ                     solved for 
R=
∅
2021-06-22 07:22:02,146

                 0.25⋅\Delta i_L
2⋅C⋅\Delta v_C - ───────────────
                        fₛ       solved for 
R=
∅
2021-06-22 07:22:02,146
									Done with 
R
2021-06-22 07:22:02,146
									so far R = 
									OrderedSet([V_c/i_R])
2021-06-22 07:22:02,146
									solution to R is: 
									V_c
									───
									i_R 
2021-06-22 07:22:02,147
									recursesym: 
									[\Delta i_L, D, V_c, V_g, M, L, fₛ, C, \Delta v_C, R]
2021-06-22 07:22:02,147
									calling solver looking for 
									V_c
2021-06-22 07:22:02,147
										base case
2021-06-22 07:22:02,147
returning: V_c=set()
2021-06-22 07:22:02,147
									recursesym: 
									[\Delta i_L, D, V_c, V_g, M, L, fₛ, C, \Delta v_C, R]
2021-06-22 07:22:02,147
									calling solver looking for 
									i_R
2021-06-22 07:22:02,147
										adding i_R to [\Delta i_L, D, V_c, V_g, M, L, f_s, C, \Delta v_C, R]
2021-06-22 07:22:02,147
looking for 
i_R
2021-06-22 07:22:02,206
nonlinsolve returns: 
i_L
2021-06-22 07:22:02,207

D⋅(-V_c + V_g) + (1 - D)⋅(V_c + V_g) solved for 
i_R=
∅
2021-06-22 07:22:02,207

    V_c
M - ───
    V_g solved for 
i_R=
∅
2021-06-22 07:22:02,210

       V_c
-i_R + ───
        R  solved for 
i_R=
⎧V_c⎫
⎨───⎬
⎩ R ⎭
2021-06-22 07:22:02,213

i_L - i_R solved for 
i_R=
{i_L}
2021-06-22 07:22:02,214

  D⋅(-V_c + V_g)               
- ────────────── + 2⋅\Delta i_L
       L⋅fₛ                     solved for 
i_R=
∅
2021-06-22 07:22:02,215

                 0.25⋅\Delta i_L
2⋅C⋅\Delta v_C - ───────────────
                        fₛ       solved for 
i_R=
∅
2021-06-22 07:22:02,215
										Done with 
i_R
2021-06-22 07:22:02,215
										so far i_R = 
										OrderedSet([V_c/R, i_L])
2021-06-22 07:22:02,215
										solution to i_R is: 
										V_c
										───
										 R  
2021-06-22 07:22:02,215
										recursesym: 
										[\Delta i_L, D, V_c, V_g, M, L, fₛ, C, \Delta v_C, R, i_R]
2021-06-22 07:22:02,215
										calling solver looking for 
										R
2021-06-22 07:22:02,215
											base case
2021-06-22 07:22:02,215
returning: R=set()
2021-06-22 07:22:02,216
										recursesym: 
										[\Delta i_L, D, V_c, V_g, M, L, fₛ, C, \Delta v_C, R, i_R]
2021-06-22 07:22:02,216
										calling solver looking for 
										V_c
2021-06-22 07:22:02,216
											base case
2021-06-22 07:22:02,216
returning: V_c=set()
2021-06-22 07:22:02,216
										solution to i_R is: 
										i_L 
2021-06-22 07:22:02,216
										recursesym: 
										[\Delta i_L, D, V_c, V_g, M, L, fₛ, C, \Delta v_C, R, i_R]
2021-06-22 07:22:02,216
										calling solver looking for 
										i_L
2021-06-22 07:22:02,217
											adding i_L to [\Delta i_L, D, V_c, V_g, M, L, f_s, C, \Delta v_C, R, i_R]
2021-06-22 07:22:02,217
looking for 
i_L
2021-06-22 07:22:02,273
nonlinsolve returns: 
i_R
2021-06-22 07:22:02,274

D⋅(-V_c + V_g) + (1 - D)⋅(V_c + V_g) solved for 
i_L=
∅
2021-06-22 07:22:02,275

    V_c
M - ───
    V_g solved for 
i_L=
∅
2021-06-22 07:22:02,276

       V_c
-i_R + ───
        R  solved for 
i_L=
∅
2021-06-22 07:22:02,276

i_L - i_R solved for 
i_L=
{i_R}
2021-06-22 07:22:02,277

  D⋅(-V_c + V_g)               
- ────────────── + 2⋅\Delta i_L
       L⋅fₛ                     solved for 
i_L=
∅
2021-06-22 07:22:02,278

                 0.25⋅\Delta i_L
2⋅C⋅\Delta v_C - ───────────────
                        fₛ       solved for 
i_L=
∅
2021-06-22 07:22:02,278
											Done with 
i_L
2021-06-22 07:22:02,278
											so far i_L = 
											OrderedSet([i_R])
2021-06-22 07:22:02,278
											solution to i_L is: 
											i_R 
2021-06-22 07:22:02,279
											recursesym: 
											[\Delta i_L, D, V_c, V_g, M, L, fₛ, C, \Delta v_C, R, i_R, i_L]
2021-06-22 07:22:02,279
											calling solver looking for 
											i_R
2021-06-22 07:22:02,279
												base case
2021-06-22 07:22:02,279
returning: i_R=set()
2021-06-22 07:22:02,281
end of function, recursesym: {\Delta i_L: set(), D: set(), V_c: set(), V_g: OrderedSet([V_c*(2*D - 1), V_c/M, V_c + 2*L*\Delta i_L*f_s/D, V_c + 0.25*L*\Delta i_L**2/(C*D*\Delta v_C)]), M: OrderedSet([V_c/V_g]), L: OrderedSet([D*(-V_c + V_g)/(2*\Delta i_L*f_s), 4.0*C*D*\Delta v_C*(-V_c + V_g)/\Delta i_L**2]), f_s: OrderedSet([D*(-V_c + V_g)/(2*L*\Delta i_L), 0.125*\Delta i_L/(C*\Delta v_C)]), C: OrderedSet([0.125*\Delta i_L/(\Delta v_C*f_s)]), \Delta v_C: OrderedSet([0.125*\Delta i_L/(C*f_s)]), R: set(), i_R: set(), i_L: set()}
2021-06-22 07:22:02,281
returning: 
											OrderedSet([i_R])
2021-06-22 07:22:02,281
										sub-ing in 
										i_R for 
										i_L
2021-06-22 07:22:02,281
										and found 
										i_R
2021-06-22 07:22:02,283
end of function, recursesym: {\Delta i_L: set(), D: set(), V_c: set(), V_g: OrderedSet([V_c*(2*D - 1), V_c/M, V_c + 2*L*\Delta i_L*f_s/D, V_c + 0.25*L*\Delta i_L**2/(C*D*\Delta v_C)]), M: OrderedSet([V_c/V_g]), L: OrderedSet([D*(-V_c + V_g)/(2*\Delta i_L*f_s), 4.0*C*D*\Delta v_C*(-V_c + V_g)/\Delta i_L**2]), f_s: OrderedSet([D*(-V_c + V_g)/(2*L*\Delta i_L), 0.125*\Delta i_L/(C*\Delta v_C)]), C: OrderedSet([0.125*\Delta i_L/(\Delta v_C*f_s)]), \Delta v_C: OrderedSet([0.125*\Delta i_L/(C*f_s)]), R: set(), i_R: set(), i_L: OrderedSet([i_R])}
2021-06-22 07:22:02,283
returning: 
										OrderedSet([V_c/R, i_L])
2021-06-22 07:22:02,283
									sub-ing in 
									V_c
									───
									 R  for 
									i_R
2021-06-22 07:22:02,283
									and found 
									R
2021-06-22 07:22:02,287
									sub-ing in 
									i_L for 
									i_R
2021-06-22 07:22:02,287
									and found 
									V_c
									───
									i_L
2021-06-22 07:22:02,289
end of function, recursesym: {\Delta i_L: set(), D: set(), V_c: set(), V_g: OrderedSet([V_c*(2*D - 1), V_c/M, V_c + 2*L*\Delta i_L*f_s/D, V_c + 0.25*L*\Delta i_L**2/(C*D*\Delta v_C)]), M: OrderedSet([V_c/V_g]), L: OrderedSet([D*(-V_c + V_g)/(2*\Delta i_L*f_s), 4.0*C*D*\Delta v_C*(-V_c + V_g)/\Delta i_L**2]), f_s: OrderedSet([D*(-V_c + V_g)/(2*L*\Delta i_L), 0.125*\Delta i_L/(C*\Delta v_C)]), C: OrderedSet([0.125*\Delta i_L/(\Delta v_C*f_s)]), \Delta v_C: OrderedSet([0.125*\Delta i_L/(C*f_s)]), R: set(), i_R: OrderedSet([V_c/R, i_L]), i_L: OrderedSet([i_R])}
2021-06-22 07:22:02,289
returning: 
									OrderedSet([V_c/i_R, V_c/i_L])
2021-06-22 07:22:02,289
		sub-ing in 
		V_c
		───
		i_R for 
		R
2021-06-22 07:22:02,289
		and found 
		V_c
2021-06-22 07:22:02,293
		sub-ing in 
		V_c
		───
		i_L for 
		R
2021-06-22 07:22:02,293
		and found 
		V_c⋅i_R
		───────
		  i_L  
2021-06-22 07:22:02,293
		recursesym: 
		[\Delta i_L, D, V_c, V_g, M, L, fₛ, C, \Delta v_C, R, i_R, i_L]
2021-06-22 07:22:02,293
		calling solver looking for 
		i_R
2021-06-22 07:22:02,293
												base case
2021-06-22 07:22:02,294
returning: i_R=OrderedSet([V_c/R, i_L])
2021-06-22 07:22:02,294
		sub-ing in 
		V_c
		───
		 R  for 
		i_R
2021-06-22 07:22:02,294
		and found 
		V_c
2021-06-22 07:22:02,296
		sub-ing in 
		i_L for 
		i_R
2021-06-22 07:22:02,296
		and found 
		R⋅i_L
2021-06-22 07:22:02,297
		solution to V_c is: 
		      2⋅L⋅\Delta i_L⋅fₛ
		V_g - ─────────────────
		              D         
2021-06-22 07:22:02,297
		recursesym: 
		[\Delta i_L, D, V_c, V_g, M, L, fₛ, C, \Delta v_C, R, i_R, i_L]
2021-06-22 07:22:02,297
		calling solver looking for 
		D
2021-06-22 07:22:02,297
												base case
2021-06-22 07:22:02,297
returning: D=set()
2021-06-22 07:22:02,298
		recursesym: 
		[\Delta i_L, D, V_c, V_g, M, L, fₛ, C, \Delta v_C, R, i_R, i_L]
2021-06-22 07:22:02,298
		calling solver looking for 
		L
2021-06-22 07:22:02,298
												base case
2021-06-22 07:22:02,298
returning: L=OrderedSet([D*(-V_c + V_g)/(2*\Delta i_L*f_s), 4.0*C*D*\Delta v_C*(-V_c + V_g)
/\Delta i_L**2])
2021-06-22 07:22:02,299
		sub-ing in 
		 D⋅(-V_c + V_g)
		───────────────
		2⋅\Delta i_L⋅fₛ for 
		L
2021-06-22 07:22:02,299
		and found 
		V_c
2021-06-22 07:22:02,330
		sub-ing in 
		4.0⋅C⋅D⋅\Delta v_C⋅(-V_c + V_g)
		───────────────────────────────
		                    2          
		          \Delta i_L            for 
		L
2021-06-22 07:22:02,331
		and found 
		  8.0⋅C⋅\Delta v_C⋅fₛ⋅(-V_c + V_g)      
		- ──────────────────────────────── + V_g
		             \Delta i_L                 
2021-06-22 07:22:02,331
		recursesym: 
		[\Delta i_L, D, V_c, V_g, M, L, fₛ, C, \Delta v_C, R, i_R, i_L]
2021-06-22 07:22:02,331
		calling solver looking for 
		V_g
2021-06-22 07:22:02,331
												base case
2021-06-22 07:22:02,332
returning: V_g=OrderedSet([V_c*(2*D - 1), V_c/M, V_c + 2*L*\Delta i_L*f_s/D, V_c + 0.25*L*\De
lta i_L**2/(C*D*\Delta v_C)])
2021-06-22 07:22:02,354
		sub-ing in 
		V_c⋅(2⋅D - 1) for 
		V_g
2021-06-22 07:22:02,355
		and found 
		                2⋅L⋅\Delta i_L⋅fₛ
		V_c⋅(2⋅D - 1) - ─────────────────
		                        D        
2021-06-22 07:22:02,369
		sub-ing in 
		V_c
		───
		 M  for 
		V_g
2021-06-22 07:22:02,370
		and found 
		V_c   2⋅L⋅\Delta i_L⋅fₛ
		─── - ─────────────────
		 M            D        
2021-06-22 07:22:02,370
		sub-ing in 
		      2⋅L⋅\Delta i_L⋅fₛ
		V_c + ─────────────────
		              D         for 
		V_g
2021-06-22 07:22:02,371
		and found 
		V_c
2021-06-22 07:22:02,414
		sub-ing in 
		                       2
		      0.25⋅L⋅\Delta i_L 
		V_c + ──────────────────
		        C⋅D⋅\Delta v_C   for 
		V_g
2021-06-22 07:22:02,414
		and found 
		                                           2
		      2⋅L⋅\Delta i_L⋅fₛ   0.25⋅L⋅\Delta i_L 
		V_c - ───────────────── + ──────────────────
		              D             C⋅D⋅\Delta v_C  
2021-06-22 07:22:02,415
		recursesym: 
		[\Delta i_L, D, V_c, V_g, M, L, fₛ, C, \Delta v_C, R, i_R, i_L]
2021-06-22 07:22:02,415
		calling solver looking for 
		\Delta i_L
2021-06-22 07:22:02,415
												base case
2021-06-22 07:22:02,415
returning: delta_iL=set()
2021-06-22 07:22:02,415
		recursesym: 
		[\Delta i_L, D, V_c, V_g, M, L, fₛ, C, \Delta v_C, R, i_R, i_L]
2021-06-22 07:22:02,415
		calling solver looking for 
		fₛ
2021-06-22 07:22:02,415
												base case
2021-06-22 07:22:02,416
returning: f_s=OrderedSet([D*(-V_c + V_g)/(2*L*\Delta i_L), 0.125*\Delta i_L/(C*\Delta v_C)])
2021-06-22 07:22:02,417
		sub-ing in 
		D⋅(-V_c + V_g)
		──────────────
		2⋅L⋅\Delta i_L for 
		fₛ
2021-06-22 07:22:02,417
		and found 
		V_c
2021-06-22 07:22:02,444
		sub-ing in 
		0.125⋅\Delta i_L
		────────────────
		  C⋅\Delta v_C   for 
		fₛ
2021-06-22 07:22:02,444
		and found 
		                       2
		      0.25⋅L⋅\Delta i_L 
		V_g - ──────────────────
		        C⋅D⋅\Delta v_C  
2021-06-22 07:22:02,447
end of function, recursesym: {\Delta i_L: set(), D: set(), V_c: set(), V_g: OrderedSet([V_c*(2*D - 1), V_c/M, V_c + 2*L*\Delta i_L*f_s/D, V_c + 0.25*L*\Delta i_L**2/(C*D*\Delta v_C)]), M: OrderedSet([V_c/V_g]), L: OrderedSet([D*(-V_c + V_g)/(2*\Delta i_L*f_s), 4.0*C*D*\Delta v_C*(-V_c + V_g)/\Delta i_L**2]), f_s: OrderedSet([D*(-V_c + V_g)/(2*L*\Delta i_L), 0.125*\Delta i_L/(C*\Delta v_C)]), C: OrderedSet([0.125*\Delta i_L/(\Delta v_C*f_s)]), \Delta v_C: OrderedSet([0.125*\Delta i_L/(C*f_s)]), R: OrderedSet([V_c/i_R, V_c/i_L]), i_R: OrderedSet([V_c/R, i_L]), i_L: OrderedSet([i_R])}
2021-06-22 07:22:02,448
returning: 
		OrderedSet([V_g/(2*D - 1), M*V_g, R*i_R, V_g - 2*L*\Delta i_L*f_s/D, R*i_L, V_
		g - 0.25*L*\Delta i_L**2/(C*D*\Delta v_C)])
2021-06-22 07:22:02,458
	sub-ing in 
	  V_g  
	───────
	2⋅D - 1 for 
	V_c
2021-06-22 07:22:02,458
	and found 
	          ⎛        V_g  ⎞
	(2⋅D - 1)⋅⎜V_g + ───────⎟
	          ⎝      2⋅D - 1⎠
	─────────────────────────
	          2⋅V_g          
2021-06-22 07:22:02,469
	sub-ing in 
	M⋅V_g for 
	V_c
2021-06-22 07:22:02,469
	and found 
	M⋅V_g + V_g
	───────────
	  2⋅M⋅V_g  
2021-06-22 07:22:02,483
	sub-ing in 
	R⋅i_R for 
	V_c
2021-06-22 07:22:02,483
	and found 
	R⋅i_R + V_g
	───────────
	  2⋅R⋅i_R  
2021-06-22 07:22:02,512
	sub-ing in 
	      2⋅L⋅\Delta i_L⋅fₛ
	V_g - ─────────────────
	              D         for 
	V_c
2021-06-22 07:22:02,513
	and found 
	         2⋅L⋅\Delta i_L⋅fₛ 
	 2⋅V_g - ───────────────── 
	                 D         
	───────────────────────────
	  ⎛      2⋅L⋅\Delta i_L⋅fₛ⎞
	2⋅⎜V_g - ─────────────────⎟
	  ⎝              D        ⎠
2021-06-22 07:22:02,525
	sub-ing in 
	R⋅i_L for 
	V_c
2021-06-22 07:22:02,526
	and found 
	R⋅i_L + V_g
	───────────
	  2⋅R⋅i_L  
2021-06-22 07:22:02,583
	sub-ing in 
	                       2
	      0.25⋅L⋅\Delta i_L 
	V_g - ──────────────────
	        C⋅D⋅\Delta v_C   for 
	V_c
2021-06-22 07:22:02,584
	and found 
	                          2 
	         0.25⋅L⋅\Delta i_L  
	 2⋅V_g - ────────────────── 
	           C⋅D⋅\Delta v_C   
	────────────────────────────
	  ⎛                       2⎞
	  ⎜      0.25⋅L⋅\Delta i_L ⎟
	2⋅⎜V_g - ──────────────────⎟
	  ⎝        C⋅D⋅\Delta v_C  ⎠
2021-06-22 07:22:02,585
	recursesym: 
	[\Delta i_L, D, V_c, V_g, M, L, fₛ, C, \Delta v_C, R, i_R, i_L]
2021-06-22 07:22:02,585
	calling solver looking for 
	V_g
2021-06-22 07:22:02,585
												base case
2021-06-22 07:22:02,585
returning: V_g=OrderedSet([V_c*(2*D - 1), V_c/M, V_c + 2*L*\Delta i_L*f_s/D, V_c + 0.25*L*\De
lta i_L**2/(C*D*\Delta v_C)])
2021-06-22 07:22:02,591
	sub-ing in 
	V_c⋅(2⋅D - 1) for 
	V_g
2021-06-22 07:22:02,591
	and found 
	V_c⋅(2⋅D - 1) + V_c
	───────────────────
	       2⋅V_c       
2021-06-22 07:22:02,598
	sub-ing in 
	V_c
	───
	 M  for 
	V_g
2021-06-22 07:22:02,599
	and found 
	      V_c
	V_c + ───
	       M 
	─────────
	  2⋅V_c  
2021-06-22 07:22:02,615
	sub-ing in 
	      2⋅L⋅\Delta i_L⋅fₛ
	V_c + ─────────────────
	              D         for 
	V_g
2021-06-22 07:22:02,615
	and found 
	        2⋅L⋅\Delta i_L⋅fₛ
	2⋅V_c + ─────────────────
	                D        
	─────────────────────────
	          2⋅V_c          
2021-06-22 07:22:02,643
	sub-ing in 
	                       2
	      0.25⋅L⋅\Delta i_L 
	V_c + ──────────────────
	        C⋅D⋅\Delta v_C   for 
	V_g
2021-06-22 07:22:02,643
	and found 
	                         2
	        0.25⋅L⋅\Delta i_L 
	2⋅V_c + ──────────────────
	          C⋅D⋅\Delta v_C  
	──────────────────────────
	          2⋅V_c           
2021-06-22 07:22:02,644
	solution to D is: 
	-2⋅L⋅\Delta i_L⋅fₛ 
	───────────────────
	     V_c - V_g      
2021-06-22 07:22:02,644
	recursesym: 
	[\Delta i_L, D, V_c, V_g, M, L, fₛ, C, \Delta v_C, R, i_R, i_L]
2021-06-22 07:22:02,644
	calling solver looking for 
	L
2021-06-22 07:22:02,644
												base case
2021-06-22 07:22:02,645
returning: L=OrderedSet([D*(-V_c + V_g)/(2*\Delta i_L*f_s), 4.0*C*D*\Delta v_C*(-V_c + V_g)
/\Delta i_L**2])
2021-06-22 07:22:02,646
	sub-ing in 
	 D⋅(-V_c + V_g)
	───────────────
	2⋅\Delta i_L⋅fₛ for 
	L
2021-06-22 07:22:02,647
	and found 
	-D⋅(-V_c + V_g) 
	────────────────
	   V_c - V_g    
2021-06-22 07:22:02,657
	sub-ing in 
	4.0⋅C⋅D⋅\Delta v_C⋅(-V_c + V_g)
	───────────────────────────────
	                    2          
	          \Delta i_L            for 
	L
2021-06-22 07:22:02,658
	and found 
	-8.0⋅C⋅D⋅\Delta v_C⋅fₛ⋅(-V_c + V_g) 
	────────────────────────────────────
	       \Delta i_L⋅(V_c - V_g)       
2021-06-22 07:22:02,659
	recursesym: 
	[\Delta i_L, D, V_c, V_g, M, L, fₛ, C, \Delta v_C, R, i_R, i_L]
2021-06-22 07:22:02,659
	calling solver looking for 
	V_c
2021-06-22 07:22:02,659
												base case
2021-06-22 07:22:02,660
returning: V_c=OrderedSet([V_g/(2*D - 1), M*V_g, R*i_R, V_g - 2*L*\Delta i_L*f_s/D, R*i_L, V_
g - 0.25*L*\Delta i_L**2/(C*D*\Delta v_C)])
2021-06-22 07:22:02,695
	sub-ing in 
	  V_g  
	───────
	2⋅D - 1 for 
	V_c
2021-06-22 07:22:02,696
	and found 
	-2⋅L⋅\Delta i_L⋅fₛ 
	───────────────────
	            V_g    
	   -V_g + ───────  
	          2⋅D - 1  
2021-06-22 07:22:02,710
	sub-ing in 
	M⋅V_g for 
	V_c
2021-06-22 07:22:02,711
	and found 
	-2⋅L⋅\Delta i_L⋅fₛ 
	───────────────────
	    M⋅V_g - V_g    
2021-06-22 07:22:02,723
	sub-ing in 
	R⋅i_R for 
	V_c
2021-06-22 07:22:02,723
	and found 
	-2⋅L⋅\Delta i_L⋅fₛ 
	───────────────────
	    R⋅i_R - V_g    
2021-06-22 07:22:02,725
	sub-ing in 
	      2⋅L⋅\Delta i_L⋅fₛ
	V_g - ─────────────────
	              D         for 
	V_c
2021-06-22 07:22:02,725
	and found 
	D
2021-06-22 07:22:02,736
	sub-ing in 
	R⋅i_L for 
	V_c
2021-06-22 07:22:02,737
	and found 
	-2⋅L⋅\Delta i_L⋅fₛ 
	───────────────────
	    R⋅i_L - V_g    
2021-06-22 07:22:02,743
	sub-ing in 
	                       2
	      0.25⋅L⋅\Delta i_L 
	V_g - ──────────────────
	        C⋅D⋅\Delta v_C   for 
	V_c
2021-06-22 07:22:02,744
	and found 
	8.0⋅C⋅D⋅\Delta v_C⋅fₛ
	─────────────────────
	      \Delta i_L     
2021-06-22 07:22:02,744
	recursesym: 
	[\Delta i_L, D, V_c, V_g, M, L, fₛ, C, \Delta v_C, R, i_R, i_L]
2021-06-22 07:22:02,744
	calling solver looking for 
	V_g
2021-06-22 07:22:02,744
												base case
2021-06-22 07:22:02,745
returning: V_g=OrderedSet([V_c*(2*D - 1), V_c/M, V_c + 2*L*\Delta i_L*f_s/D, V_c + 0.25*L*\De
lta i_L**2/(C*D*\Delta v_C)])
2021-06-22 07:22:02,761
	sub-ing in 
	V_c⋅(2⋅D - 1) for 
	V_g
2021-06-22 07:22:02,762
	and found 
	-2⋅L⋅\Delta i_L⋅fₛ  
	────────────────────
	-V_c⋅(2⋅D - 1) + V_c
2021-06-22 07:22:02,780
	sub-ing in 
	V_c
	───
	 M  for 
	V_g
2021-06-22 07:22:02,781
	and found 
	-2⋅L⋅\Delta i_L⋅fₛ 
	───────────────────
	           V_c     
	     V_c - ───     
	            M      
2021-06-22 07:22:02,782
	sub-ing in 
	      2⋅L⋅\Delta i_L⋅fₛ
	V_c + ─────────────────
	              D         for 
	V_g
2021-06-22 07:22:02,782
	and found 
	D
2021-06-22 07:22:02,787
	sub-ing in 
	                       2
	      0.25⋅L⋅\Delta i_L 
	V_c + ──────────────────
	        C⋅D⋅\Delta v_C   for 
	V_g
2021-06-22 07:22:02,787
	and found 
	8.0⋅C⋅D⋅\Delta v_C⋅fₛ
	─────────────────────
	      \Delta i_L     
2021-06-22 07:22:02,787
	recursesym: 
	[\Delta i_L, D, V_c, V_g, M, L, fₛ, C, \Delta v_C, R, i_R, i_L]
2021-06-22 07:22:02,787
	calling solver looking for 
	\Delta i_L
2021-06-22 07:22:02,787
												base case
2021-06-22 07:22:02,787
returning: delta_iL=set()
2021-06-22 07:22:02,788
	recursesym: 
	[\Delta i_L, D, V_c, V_g, M, L, fₛ, C, \Delta v_C, R, i_R, i_L]
2021-06-22 07:22:02,788
	calling solver looking for 
	fₛ
2021-06-22 07:22:02,788
												base case
2021-06-22 07:22:02,788
returning: f_s=OrderedSet([D*(-V_c + V_g)/(2*L*\Delta i_L), 0.125*\Delta i_L/(C*\Delta v_C)])
2021-06-22 07:22:02,790
	sub-ing in 
	D⋅(-V_c + V_g)
	──────────────
	2⋅L⋅\Delta i_L for 
	fₛ
2021-06-22 07:22:02,790
	and found 
	-D⋅(-V_c + V_g) 
	────────────────
	   V_c - V_g    
2021-06-22 07:22:02,811
	sub-ing in 
	0.125⋅\Delta i_L
	────────────────
	  C⋅\Delta v_C   for 
	fₛ
2021-06-22 07:22:02,812
	and found 
	                    2   
	  -0.25⋅L⋅\Delta i_L    
	────────────────────────
	C⋅\Delta v_C⋅(V_c - V_g)
2021-06-22 07:22:02,815
end of function, recursesym: {\Delta i_L: set(), D: set(), V_c: OrderedSet([V_g/(2*D - 1), M*V_g, R*i_R, V_g - 2*L*\Delta i_L*f_s/D, R*i_L, V_g - 0.25*L*\Delta i_L**2/(C*D*\Delta v_C)]), V_g: OrderedSet([V_c*(2*D - 1), V_c/M, V_c + 2*L*\Delta i_L*f_s/D, V_c + 0.25*L*\Delta i_L**2/(C*D*\Delta v_C)]), M: OrderedSet([V_c/V_g]), L: OrderedSet([D*(-V_c + V_g)/(2*\Delta i_L*f_s), 4.0*C*D*\Delta v_C*(-V_c + V_g)/\Delta i_L**2]), f_s: OrderedSet([D*(-V_c + V_g)/(2*L*\Delta i_L), 0.125*\Delta i_L/(C*\Delta v_C)]), C: OrderedSet([0.125*\Delta i_L/(\Delta v_C*f_s)]), \Delta v_C: OrderedSet([0.125*\Delta i_L/(C*f_s)]), R: OrderedSet([V_c/i_R, V_c/i_L]), i_R: OrderedSet([V_c/R, i_L]), i_L: OrderedSet([i_R])}
2021-06-22 07:22:02,817
returning: 
	OrderedSet([(V_c + V_g)/(2*V_c), -2*L*\Delta i_L*f_s/(V_c - V_g), (M + 1)/(2*M
	), (R*i_R + V_g)/(2*R*i_R), (R*i_L + V_g)/(2*R*i_L), -2*L*\Delta i_L*f_s/(V_g*
	(M - 1)), -2*L*\Delta i_L*f_s/(R*i_R - V_g), -2*L*\Delta i_L*f_s/(R*i_L - V_g)
	, -2*L*M*\Delta i_L*f_s/(V_c*(M - 1)), -0.25*L*\Delta i_L**2/(C*\Delta v_C*(V_
	c - V_g))])
2021-06-22 07:22:02,839
sub-ing in 
V_c + V_g
─────────
  2⋅V_c   for 
D
2021-06-22 07:22:02,840
and found 
(-V_c + V_g)⋅(V_c + V_g)
────────────────────────
       4⋅L⋅V_c⋅fₛ       
2021-06-22 07:22:02,841
sub-ing in 
-2⋅L⋅\Delta i_L⋅fₛ 
───────────────────
     V_c - V_g      for 
D
2021-06-22 07:22:02,842
and found 
-\Delta i_L⋅(-V_c + V_g) 
─────────────────────────
        V_c - V_g        
2021-06-22 07:22:02,864
sub-ing in 
M + 1
─────
 2⋅M  for 
D
2021-06-22 07:22:02,864
and found 
(M + 1)⋅(-V_c + V_g)
────────────────────
      4⋅L⋅M⋅fₛ      
2021-06-22 07:22:02,897
sub-ing in 
R⋅i_R + V_g
───────────
  2⋅R⋅i_R   for 
D
2021-06-22 07:22:02,898
and found 
(-V_c + V_g)⋅(R⋅i_R + V_g)
──────────────────────────
       4⋅L⋅R⋅fₛ⋅i_R       
2021-06-22 07:22:02,925
sub-ing in 
R⋅i_L + V_g
───────────
  2⋅R⋅i_L   for 
D
2021-06-22 07:22:02,926
and found 
(-V_c + V_g)⋅(R⋅i_L + V_g)
──────────────────────────
       4⋅L⋅R⋅fₛ⋅i_L       
2021-06-22 07:22:02,943
sub-ing in 
-2⋅L⋅\Delta i_L⋅fₛ 
───────────────────
    V_g⋅(M - 1)     for 
D
2021-06-22 07:22:02,943
and found 
-\Delta i_L⋅(-V_c + V_g) 
─────────────────────────
       V_g⋅(M - 1)       
2021-06-22 07:22:02,959
sub-ing in 
-2⋅L⋅\Delta i_L⋅fₛ 
───────────────────
    R⋅i_R - V_g     for 
D
2021-06-22 07:22:02,960
and found 
-\Delta i_L⋅(-V_c + V_g) 
─────────────────────────
       R⋅i_R - V_g       
2021-06-22 07:22:02,976
sub-ing in 
-2⋅L⋅\Delta i_L⋅fₛ 
───────────────────
    R⋅i_L - V_g     for 
D
2021-06-22 07:22:02,976
and found 
-\Delta i_L⋅(-V_c + V_g) 
─────────────────────────
       R⋅i_L - V_g       
2021-06-22 07:22:02,992
sub-ing in 
-2⋅L⋅M⋅\Delta i_L⋅fₛ 
─────────────────────
     V_c⋅(M - 1)      for 
D
2021-06-22 07:22:02,993
and found 
-M⋅\Delta i_L⋅(-V_c + V_g) 
───────────────────────────
        V_c⋅(M - 1)        
2021-06-22 07:22:03,005
sub-ing in 
                    2   
  -0.25⋅L⋅\Delta i_L    
────────────────────────
C⋅\Delta v_C⋅(V_c - V_g) for 
D
2021-06-22 07:22:03,006
and found 
                 2              
-0.125⋅\Delta i_L ⋅(-V_c + V_g) 
────────────────────────────────
  C⋅\Delta v_C⋅fₛ⋅(V_c - V_g)   
2021-06-22 07:22:03,006
recursesym: 
[\Delta i_L, D, V_c, V_g, M, L, fₛ, C, \Delta v_C, R, i_R, i_L]
2021-06-22 07:22:03,006
calling solver looking for 
L
2021-06-22 07:22:03,006
												base case
2021-06-22 07:22:03,007
returning: L=OrderedSet([D*(-V_c + V_g)/(2*\Delta i_L*f_s), 4.0*C*D*\Delta v_C*(-V_c + V_g)
/\Delta i_L**2])
2021-06-22 07:22:03,008
sub-ing in 
 D⋅(-V_c + V_g)
───────────────
2⋅\Delta i_L⋅fₛ for 
L
2021-06-22 07:22:03,008
and found 
\Delta i_L
2021-06-22 07:22:03,016
sub-ing in 
4.0⋅C⋅D⋅\Delta v_C⋅(-V_c + V_g)
───────────────────────────────
                    2          
          \Delta i_L            for 
L
2021-06-22 07:22:03,016
and found 
                2
0.125⋅\Delta i_L 
─────────────────
 C⋅\Delta v_C⋅fₛ 
2021-06-22 07:22:03,017
recursesym: 
[\Delta i_L, D, V_c, V_g, M, L, fₛ, C, \Delta v_C, R, i_R, i_L]
2021-06-22 07:22:03,017
calling solver looking for 
V_c
2021-06-22 07:22:03,017
												base case
2021-06-22 07:22:03,018
returning: V_c=OrderedSet([V_g/(2*D - 1), M*V_g, R*i_R, V_g - 2*L*\Delta i_L*f_s/D, R*i_L, V_
g - 0.25*L*\Delta i_L**2/(C*D*\Delta v_C)])
2021-06-22 07:22:03,048
sub-ing in 
  V_g  
───────
2⋅D - 1 for 
V_c
2021-06-22 07:22:03,049
and found 
  ⎛        V_g  ⎞
D⋅⎜V_g - ───────⎟
  ⎝      2⋅D - 1⎠
─────────────────
      2⋅L⋅fₛ     
2021-06-22 07:22:03,067
sub-ing in 
M⋅V_g for 
V_c
2021-06-22 07:22:03,068
and found 
D⋅(-M⋅V_g + V_g)
────────────────
     2⋅L⋅fₛ     
2021-06-22 07:22:03,084
sub-ing in 
R⋅i_R for 
V_c
2021-06-22 07:22:03,085
and found 
D⋅(-R⋅i_R + V_g)
────────────────
     2⋅L⋅fₛ     
2021-06-22 07:22:03,086
sub-ing in 
      2⋅L⋅\Delta i_L⋅fₛ
V_g - ─────────────────
              D         for 
V_c
2021-06-22 07:22:03,086
and found 
\Delta i_L
2021-06-22 07:22:03,102
sub-ing in 
R⋅i_L for 
V_c
2021-06-22 07:22:03,103
and found 
D⋅(-R⋅i_L + V_g)
────────────────
     2⋅L⋅fₛ     
2021-06-22 07:22:03,110
sub-ing in 
                       2
      0.25⋅L⋅\Delta i_L 
V_g - ──────────────────
        C⋅D⋅\Delta v_C   for 
V_c
2021-06-22 07:22:03,111
and found 
                2
0.125⋅\Delta i_L 
─────────────────
 C⋅\Delta v_C⋅fₛ 
2021-06-22 07:22:03,111
recursesym: 
[\Delta i_L, D, V_c, V_g, M, L, fₛ, C, \Delta v_C, R, i_R, i_L]
2021-06-22 07:22:03,111
calling solver looking for 
V_g
2021-06-22 07:22:03,111
												base case
2021-06-22 07:22:03,112
returning: V_g=OrderedSet([V_c*(2*D - 1), V_c/M, V_c + 2*L*\Delta i_L*f_s/D, V_c + 0.25*L*\De
lta i_L**2/(C*D*\Delta v_C)])
2021-06-22 07:22:03,129
sub-ing in 
V_c⋅(2⋅D - 1) for 
V_g
2021-06-22 07:22:03,130
and found 
D⋅(V_c⋅(2⋅D - 1) - V_c)
───────────────────────
         2⋅L⋅fₛ        
2021-06-22 07:22:03,151
sub-ing in 
V_c
───
 M  for 
V_g
2021-06-22 07:22:03,151
and found 
  ⎛       V_c⎞
D⋅⎜-V_c + ───⎟
  ⎝        M ⎠
──────────────
    2⋅L⋅fₛ    
2021-06-22 07:22:03,152
sub-ing in 
      2⋅L⋅\Delta i_L⋅fₛ
V_c + ─────────────────
              D         for 
V_g
2021-06-22 07:22:03,152
and found 
\Delta i_L
2021-06-22 07:22:03,159
sub-ing in 
                       2
      0.25⋅L⋅\Delta i_L 
V_c + ──────────────────
        C⋅D⋅\Delta v_C   for 
V_g
2021-06-22 07:22:03,159
and found 
                2
0.125⋅\Delta i_L 
─────────────────
 C⋅\Delta v_C⋅fₛ 
2021-06-22 07:22:03,159
recursesym: 
[\Delta i_L, D, V_c, V_g, M, L, fₛ, C, \Delta v_C, R, i_R, i_L]
2021-06-22 07:22:03,160
calling solver looking for 
fₛ
2021-06-22 07:22:03,160
												base case
2021-06-22 07:22:03,160
returning: f_s=OrderedSet([D*(-V_c + V_g)/(2*L*\Delta i_L), 0.125*\Delta i_L/(C*\Delta v_C)])
2021-06-22 07:22:03,161
sub-ing in 
D⋅(-V_c + V_g)
──────────────
2⋅L⋅\Delta i_L for 
fₛ
2021-06-22 07:22:03,161
and found 
\Delta i_L
2021-06-22 07:22:03,183
sub-ing in 
0.125⋅\Delta i_L
────────────────
  C⋅\Delta v_C   for 
fₛ
2021-06-22 07:22:03,184
and found 
4.0⋅C⋅D⋅\Delta v_C⋅(-V_c + V_g)
───────────────────────────────
          L⋅\Delta i_L         
2021-06-22 07:22:03,184
solution to delta_iL is: 
8.0⋅C⋅\Delta v_C⋅fₛ 
2021-06-22 07:22:03,184
recursesym: 
[\Delta i_L, D, V_c, V_g, M, L, fₛ, C, \Delta v_C, R, i_R, i_L]
2021-06-22 07:22:03,184
calling solver looking for 
C
2021-06-22 07:22:03,184
												base case
2021-06-22 07:22:03,185
returning: C=OrderedSet([0.125*\Delta i_L/(\Delta v_C*f_s)])
2021-06-22 07:22:03,189
sub-ing in 
0.125⋅\Delta i_L
────────────────
 \Delta v_C⋅fₛ   for 
C
2021-06-22 07:22:03,189
and found 
1.0⋅\Delta i_L
2021-06-22 07:22:03,189
recursesym: 
[\Delta i_L, D, V_c, V_g, M, L, fₛ, C, \Delta v_C, R, i_R, i_L]
2021-06-22 07:22:03,189
calling solver looking for 
\Delta v_C
2021-06-22 07:22:03,189
												base case
2021-06-22 07:22:03,190
returning: detla_vC=OrderedSet([0.125*\Delta i_L/(C*f_s)])
2021-06-22 07:22:03,193
sub-ing in 
0.125⋅\Delta i_L
────────────────
      C⋅fₛ       for 
\Delta v_C
2021-06-22 07:22:03,193
and found 
1.0⋅\Delta i_L
2021-06-22 07:22:03,194
recursesym: 
[\Delta i_L, D, V_c, V_g, M, L, fₛ, C, \Delta v_C, R, i_R, i_L]
2021-06-22 07:22:03,194
calling solver looking for 
fₛ
2021-06-22 07:22:03,194
												base case
2021-06-22 07:22:03,194
returning: f_s=OrderedSet([D*(-V_c + V_g)/(2*L*\Delta i_L), 0.125*\Delta i_L/(C*\Delta v_C)])
2021-06-22 07:22:03,204
sub-ing in 
D⋅(-V_c + V_g)
──────────────
2⋅L⋅\Delta i_L for 
fₛ
2021-06-22 07:22:03,205
and found 
4.0⋅C⋅D⋅\Delta v_C⋅(-V_c + V_g)
───────────────────────────────
          L⋅\Delta i_L         
2021-06-22 07:22:03,208
sub-ing in 
0.125⋅\Delta i_L
────────────────
  C⋅\Delta v_C   for 
fₛ
2021-06-22 07:22:03,208
and found 
1.0⋅\Delta i_L
2021-06-22 07:22:03,213
end of function, recursesym: {\Delta i_L: set(), D: OrderedSet([(V_c + V_g)/(2*V_c), -2*L*\Delta i_L*f_s/(V_c - V_g), (M + 1)/(2*M), (R*i_R + V_g)/(2*R*i_R), (R*i_L + V_g)/(2*R*i_L), -2*L*\Delta i_L*f_s/(V_g*(M - 1)), -2*L*\Delta i_L*f_s/(R*i_R - V_g), -2*L*\Delta i_L*f_s/(R*i_L - V_g), -2*L*M*\Delta i_L*f_s/(V_c*(M - 1)), -0.25*L*\Delta i_L**2/(C*\Delta v_C*(V_c - V_g))]), V_c: OrderedSet([V_g/(2*D - 1), M*V_g, R*i_R, V_g - 2*L*\Delta i_L*f_s/D, R*i_L, V_g - 0.25*L*\Delta i_L**2/(C*D*\Delta v_C)]), V_g: OrderedSet([V_c*(2*D - 1), V_c/M, V_c + 2*L*\Delta i_L*f_s/D, V_c + 0.25*L*\Delta i_L**2/(C*D*\Delta v_C)]), M: OrderedSet([V_c/V_g]), L: OrderedSet([D*(-V_c + V_g)/(2*\Delta i_L*f_s), 4.0*C*D*\Delta v_C*(-V_c + V_g)/\Delta i_L**2]), f_s: OrderedSet([D*(-V_c + V_g)/(2*L*\Delta i_L), 0.125*\Delta i_L/(C*\Delta v_C)]), C: OrderedSet([0.125*\Delta i_L/(\Delta v_C*f_s)]), \Delta v_C: OrderedSet([0.125*\Delta i_L/(C*f_s)]), R: OrderedSet([V_c/i_R, V_c/i_L]), i_R: OrderedSet([V_c/R, i_L]), i_L: OrderedSet([i_R])}
2021-06-22 07:22:03,216
returning: 
OrderedSet([D*(-V_c + V_g)/(2*L*f_s), 8.0*C*\Delta v_C*f_s, (-V_c**2 + V_g**2)
/(4*L*V_c*f_s), -(M + 1)*(V_c - V_g)/(4*L*M*f_s), -(V_c - V_g)*(R*i_R + V_g)/(
4*L*R*f_s*i_R), -(V_c - V_g)*(R*i_L + V_g)/(4*L*R*f_s*i_L), D*V_g*(D - 1)/(L*f
_s*(2*D - 1)), D*(-R*i_R + V_g)/(2*L*f_s), D*(-R*i_L + V_g)/(2*L*f_s), D*V_c*(
D - 1)/(L*f_s)])
2021-06-22 07:22:03,232
adding detla_vC to []
2021-06-22 07:22:03,232
looking for 
\Delta v_C
2021-06-22 07:22:03,322
nonlinsolve returns: 
0.125⋅\Delta i_L
────────────────
      C⋅fₛ      
2021-06-22 07:22:03,324

D⋅(-V_c + V_g) + (1 - D)⋅(V_c + V_g) solved for 
\Delta v_C=
∅
2021-06-22 07:22:03,325

    V_c
M - ───
    V_g solved for 
\Delta v_C=
∅
2021-06-22 07:22:03,326

       V_c
-i_R + ───
        R  solved for 
\Delta v_C=
∅
2021-06-22 07:22:03,326

i_L - i_R solved for 
\Delta v_C=
∅
2021-06-22 07:22:03,328

  D⋅(-V_c + V_g)               
- ────────────── + 2⋅\Delta i_L
       L⋅fₛ                     solved for 
\Delta v_C=
∅
2021-06-22 07:22:03,331

                 0.25⋅\Delta i_L
2⋅C⋅\Delta v_C - ───────────────
                        fₛ       solved for 
\Delta v_C=
⎧0.125⋅\Delta i_L⎫
⎨────────────────⎬
⎩      C⋅fₛ      ⎭
2021-06-22 07:22:03,338
Done with 
\Delta v_C
2021-06-22 07:22:03,338
so far detla_vC = 
OrderedSet([0.125*\Delta i_L/(C*f_s)])
2021-06-22 07:22:03,339
solution to detla_vC is: 
0.125⋅\Delta i_L
────────────────
      C⋅fₛ       
2021-06-22 07:22:03,339
recursesym: 
[\Delta v_C]
2021-06-22 07:22:03,339
calling solver looking for 
C
2021-06-22 07:22:03,339
	adding C to [\Delta v_C]
2021-06-22 07:22:03,339
looking for 
C
2021-06-22 07:22:03,408
nonlinsolve returns: 
0.125⋅\Delta i_L
────────────────
 \Delta v_C⋅fₛ  
2021-06-22 07:22:03,410

D⋅(-V_c + V_g) + (1 - D)⋅(V_c + V_g) solved for 
C=
∅
2021-06-22 07:22:03,410

    V_c
M - ───
    V_g solved for 
C=
∅
2021-06-22 07:22:03,411

       V_c
-i_R + ───
        R  solved for 
C=
∅
2021-06-22 07:22:03,411

i_L - i_R solved for 
C=
∅
2021-06-22 07:22:03,412

  D⋅(-V_c + V_g)               
- ────────────── + 2⋅\Delta i_L
       L⋅fₛ                     solved for 
C=
∅
2021-06-22 07:22:03,415

                 0.25⋅\Delta i_L
2⋅C⋅\Delta v_C - ───────────────
                        fₛ       solved for 
C=
⎧0.125⋅\Delta i_L⎫
⎨────────────────⎬
⎩ \Delta v_C⋅fₛ  ⎭
2021-06-22 07:22:03,422
	Done with 
C
2021-06-22 07:22:03,422
	so far C = 
	OrderedSet([0.125*\Delta i_L/(\Delta v_C*f_s)])
2021-06-22 07:22:03,422
	solution to C is: 
	0.125⋅\Delta i_L
	────────────────
	 \Delta v_C⋅fₛ   
2021-06-22 07:22:03,423
	recursesym: 
	[\Delta v_C, C]
2021-06-22 07:22:03,423
	calling solver looking for 
	\Delta i_L
2021-06-22 07:22:03,423
		adding delta_iL to [\Delta v_C, C]
2021-06-22 07:22:03,423
looking for 
\Delta i_L
2021-06-22 07:22:03,489
nonlinsolve returns: 
8.0⋅C⋅\Delta v_C⋅fₛ
2021-06-22 07:22:03,490

D⋅(-V_c + V_g) + (1 - D)⋅(V_c + V_g) solved for 
\Delta i_L=
∅
2021-06-22 07:22:03,491

    V_c
M - ───
    V_g solved for 
\Delta i_L=
∅
2021-06-22 07:22:03,492

       V_c
-i_R + ───
        R  solved for 
\Delta i_L=
∅
2021-06-22 07:22:03,492

i_L - i_R solved for 
\Delta i_L=
∅
2021-06-22 07:22:03,497

  D⋅(-V_c + V_g)               
- ────────────── + 2⋅\Delta i_L
       L⋅fₛ                     solved for 
\Delta i_L=
⎧-D⋅(V_c - V_g) ⎫
⎨───────────────⎬
⎩     2⋅L⋅fₛ    ⎭
2021-06-22 07:22:03,511

                 0.25⋅\Delta i_L
2⋅C⋅\Delta v_C - ───────────────
                        fₛ       solved for 
\Delta i_L=
{8.0⋅C⋅\Delta v_C⋅fₛ}
2021-06-22 07:22:03,515
		Done with 
\Delta i_L
2021-06-22 07:22:03,515
		so far delta_iL = 
		OrderedSet([D*(-V_c + V_g)/(2*L*f_s), 8.0*C*\Delta v_C*f_s])
2021-06-22 07:22:03,516
		solution to delta_iL is: 
		D⋅(-V_c + V_g)
		──────────────
		    2⋅L⋅fₛ     
2021-06-22 07:22:03,516
		recursesym: 
		[\Delta v_C, C, \Delta i_L]
2021-06-22 07:22:03,516
		calling solver looking for 
		D
2021-06-22 07:22:03,516
			adding D to [\Delta v_C, C, \Delta i_L]
2021-06-22 07:22:03,516
looking for 
D
2021-06-22 07:22:03,582
nonlinsolve returns: 
V_c + V_g
─────────
  2⋅V_c  
2021-06-22 07:22:03,592

D⋅(-V_c + V_g) + (1 - D)⋅(V_c + V_g) solved for 
D=
⎧V_c + V_g⎫
⎨─────────⎬
⎩  2⋅V_c  ⎭
2021-06-22 07:22:03,598

    V_c
M - ───
    V_g solved for 
D=
∅
2021-06-22 07:22:03,598

       V_c
-i_R + ───
        R  solved for 
D=
∅
2021-06-22 07:22:03,599

i_L - i_R solved for 
D=
∅
2021-06-22 07:22:03,603

  D⋅(-V_c + V_g)               
- ────────────── + 2⋅\Delta i_L
       L⋅fₛ                     solved for 
D=
⎧-2⋅L⋅\Delta i_L⋅fₛ ⎫
⎨───────────────────⎬
⎩     V_c - V_g     ⎭
2021-06-22 07:22:03,614

                 0.25⋅\Delta i_L
2⋅C⋅\Delta v_C - ───────────────
                        fₛ       solved for 
D=
∅
2021-06-22 07:22:03,614
			Done with 
D
2021-06-22 07:22:03,615
			so far D = 
			OrderedSet([(V_c + V_g)/(2*V_c), -2*L*\Delta i_L*f_s/(V_c - V_g)])
2021-06-22 07:22:03,615
			solution to D is: 
			V_c + V_g
			─────────
			  2⋅V_c   
2021-06-22 07:22:03,615
			recursesym: 
			[\Delta v_C, C, \Delta i_L, D]
2021-06-22 07:22:03,616
			calling solver looking for 
			V_c
2021-06-22 07:22:03,616
				adding V_c to [\Delta v_C, C, \Delta i_L, D]
2021-06-22 07:22:03,616
looking for 
V_c
2021-06-22 07:22:03,677
nonlinsolve returns: 
R⋅i_R
2021-06-22 07:22:03,686

D⋅(-V_c + V_g) + (1 - D)⋅(V_c + V_g) solved for 
V_c=
⎧  V_g  ⎫
⎨───────⎬
⎩2⋅D - 1⎭
2021-06-22 07:22:03,696

    V_c
M - ───
    V_g solved for 
V_c=
{M⋅V_g}
2021-06-22 07:22:03,699

       V_c
-i_R + ───
        R  solved for 
V_c=
{R⋅i_R}
2021-06-22 07:22:03,701

i_L - i_R solved for 
V_c=
∅
2021-06-22 07:22:03,706

  D⋅(-V_c + V_g)               
- ────────────── + 2⋅\Delta i_L
       L⋅fₛ                     solved for 
V_c=
⎧      2⋅L⋅\Delta i_L⋅fₛ⎫
⎨V_g - ─────────────────⎬
⎩              D        ⎭
2021-06-22 07:22:03,717

                 0.25⋅\Delta i_L
2⋅C⋅\Delta v_C - ───────────────
                        fₛ       solved for 
V_c=
∅
2021-06-22 07:22:03,717
				Done with 
V_c
2021-06-22 07:22:03,718
				so far V_c = 
				OrderedSet([V_g/(2*D - 1), M*V_g, R*i_R, V_g - 2*L*\Delta i_L*f_s/D])
2021-06-22 07:22:03,718
				solution to V_c is: 
				  V_g  
				───────
				2⋅D - 1 
2021-06-22 07:22:03,718
				recursesym: 
				[\Delta v_C, C, \Delta i_L, D, V_c]
2021-06-22 07:22:03,718
				calling solver looking for 
				D
2021-06-22 07:22:03,718
					base case
2021-06-22 07:22:03,719
returning: D=set()
2021-06-22 07:22:03,719
				recursesym: 
				[\Delta v_C, C, \Delta i_L, D, V_c]
2021-06-22 07:22:03,719
				calling solver looking for 
				V_g
2021-06-22 07:22:03,719
					adding V_g to [\Delta v_C, C, \Delta i_L, D, V_c]
2021-06-22 07:22:03,719
looking for 
V_g
2021-06-22 07:22:03,819
nonlinsolve returns: 
V_c
───
 M 
2021-06-22 07:22:03,827

D⋅(-V_c + V_g) + (1 - D)⋅(V_c + V_g) solved for 
V_g=
{V_c⋅(2⋅D - 1)}
2021-06-22 07:22:03,839

    V_c
M - ───
    V_g solved for 
V_g=
⎧V_c⎫      
⎨───⎬ \ {0}
⎩ M ⎭      
2021-06-22 07:22:03,842

       V_c
-i_R + ───
        R  solved for 
V_g=
∅
2021-06-22 07:22:03,843

i_L - i_R solved for 
V_g=
∅
2021-06-22 07:22:03,847

  D⋅(-V_c + V_g)               
- ────────────── + 2⋅\Delta i_L
       L⋅fₛ                     solved for 
V_g=
⎧      2⋅L⋅\Delta i_L⋅fₛ⎫
⎨V_c + ─────────────────⎬
⎩              D        ⎭
2021-06-22 07:22:03,856

                 0.25⋅\Delta i_L
2⋅C⋅\Delta v_C - ───────────────
                        fₛ       solved for 
V_g=
∅
2021-06-22 07:22:03,856
					Done with 
V_g
2021-06-22 07:22:03,857
					so far V_g = 
					OrderedSet([V_c*(2*D - 1), V_c/M, V_c + 2*L*\Delta i_L*f_s/D])
2021-06-22 07:22:03,857
					solution to V_g is: 
					V_c⋅(2⋅D - 1) 
2021-06-22 07:22:03,857
					recursesym: 
					[\Delta v_C, C, \Delta i_L, D, V_c, V_g]
2021-06-22 07:22:03,857
					calling solver looking for 
					D
2021-06-22 07:22:03,857
						base case
2021-06-22 07:22:03,858
returning: D=set()
2021-06-22 07:22:03,858
					recursesym: 
					[\Delta v_C, C, \Delta i_L, D, V_c, V_g]
2021-06-22 07:22:03,858
					calling solver looking for 
					V_c
2021-06-22 07:22:03,858
						base case
2021-06-22 07:22:03,858
returning: V_c=set()
2021-06-22 07:22:03,858
					solution to V_g is: 
					V_c
					───
					 M  
2021-06-22 07:22:03,858
					recursesym: 
					[\Delta v_C, C, \Delta i_L, D, V_c, V_g]
2021-06-22 07:22:03,858
					calling solver looking for 
					M
2021-06-22 07:22:03,858
						adding M to [\Delta v_C, C, \Delta i_L, D, V_c, V_g]
2021-06-22 07:22:03,859
looking for 
M
2021-06-22 07:22:03,921
nonlinsolve returns: 
V_c
───
V_g
2021-06-22 07:22:03,922

D⋅(-V_c + V_g) + (1 - D)⋅(V_c + V_g) solved for 
M=
∅
2021-06-22 07:22:03,923

    V_c
M - ───
    V_g solved for 
M=
⎧V_c⎫
⎨───⎬
⎩V_g⎭
2021-06-22 07:22:03,926

       V_c
-i_R + ───
        R  solved for 
M=
∅
2021-06-22 07:22:03,926

i_L - i_R solved for 
M=
∅
2021-06-22 07:22:03,928

  D⋅(-V_c + V_g)               
- ────────────── + 2⋅\Delta i_L
       L⋅fₛ                     solved for 
M=
∅
2021-06-22 07:22:03,928

                 0.25⋅\Delta i_L
2⋅C⋅\Delta v_C - ───────────────
                        fₛ       solved for 
M=
∅
2021-06-22 07:22:03,928
						Done with 
M
2021-06-22 07:22:03,928
						so far M = 
						OrderedSet([V_c/V_g])
2021-06-22 07:22:03,929
						solution to M is: 
						V_c
						───
						V_g 
2021-06-22 07:22:03,929
						recursesym: 
						[\Delta v_C, C, \Delta i_L, D, V_c, V_g, M]
2021-06-22 07:22:03,929
						calling solver looking for 
						V_c
2021-06-22 07:22:03,929
							base case
2021-06-22 07:22:03,929
returning: V_c=set()
2021-06-22 07:22:03,929
						recursesym: 
						[\Delta v_C, C, \Delta i_L, D, V_c, V_g, M]
2021-06-22 07:22:03,929
						calling solver looking for 
						V_g
2021-06-22 07:22:03,929
							base case
2021-06-22 07:22:03,929
returning: V_g=set()
2021-06-22 07:22:03,930
end of function, recursesym: {\Delta v_C: set(), C: set(), \Delta i_L: set(), D: set(), V_c: set(), V_g: set(), M: set()}
2021-06-22 07:22:03,930
returning: 
						OrderedSet([V_c/V_g])
2021-06-22 07:22:03,930
					sub-ing in 
					V_c
					───
					V_g for 
					M
2021-06-22 07:22:03,930
					and found 
					V_g
2021-06-22 07:22:03,930
					recursesym: 
					[\Delta v_C, C, \Delta i_L, D, V_c, V_g, M]
2021-06-22 07:22:03,930
					calling solver looking for 
					V_c
2021-06-22 07:22:03,930
							base case
2021-06-22 07:22:03,930
returning: V_c=set()
2021-06-22 07:22:03,931
					solution to V_g is: 
					      2⋅L⋅\Delta i_L⋅fₛ
					V_c + ─────────────────
					              D         
2021-06-22 07:22:03,931
					recursesym: 
					[\Delta v_C, C, \Delta i_L, D, V_c, V_g, M]
2021-06-22 07:22:03,931
					calling solver looking for 
					D
2021-06-22 07:22:03,931
							base case
2021-06-22 07:22:03,931
returning: D=set()
2021-06-22 07:22:03,932
					recursesym: 
					[\Delta v_C, C, \Delta i_L, D, V_c, V_g, M]
2021-06-22 07:22:03,932
					calling solver looking for 
					L
2021-06-22 07:22:03,932
							adding L to [\Delta v_C, C, \Delta i_L, D, V_c, V_g, M]
2021-06-22 07:22:03,932
looking for 
L
2021-06-22 07:22:04,045
nonlinsolve returns: 
 D⋅(-V_c + V_g)
───────────────
2⋅\Delta i_L⋅fₛ
2021-06-22 07:22:04,046

D⋅(-V_c + V_g) + (1 - D)⋅(V_c + V_g) solved for 
L=
∅
2021-06-22 07:22:04,047

    V_c
M - ───
    V_g solved for 
L=
∅
2021-06-22 07:22:04,047

       V_c
-i_R + ───
        R  solved for 
L=
∅
2021-06-22 07:22:04,048

i_L - i_R solved for 
L=
∅
2021-06-22 07:22:04,058

  D⋅(-V_c + V_g)               
- ────────────── + 2⋅\Delta i_L
       L⋅fₛ                     solved for 
L=
⎧-D⋅(V_c - V_g) ⎫      
⎨───────────────⎬ \ {0}
⎩2⋅\Delta i_L⋅fₛ⎭      
2021-06-22 07:22:04,066

                 0.25⋅\Delta i_L
2⋅C⋅\Delta v_C - ───────────────
                        fₛ       solved for 
L=
∅
2021-06-22 07:22:04,066
							Done with 
L
2021-06-22 07:22:04,066
							so far L = 
							OrderedSet([D*(-V_c + V_g)/(2*\Delta i_L*f_s)])
2021-06-22 07:22:04,067
							solution to L is: 
							 D⋅(-V_c + V_g)
							───────────────
							2⋅\Delta i_L⋅fₛ 
2021-06-22 07:22:04,067
							recursesym: 
							[\Delta v_C, C, \Delta i_L, D, V_c, V_g, M, L]
2021-06-22 07:22:04,067
							calling solver looking for 
							D
2021-06-22 07:22:04,067
								base case
2021-06-22 07:22:04,067
returning: D=set()
2021-06-22 07:22:04,068
							recursesym: 
							[\Delta v_C, C, \Delta i_L, D, V_c, V_g, M, L]
2021-06-22 07:22:04,068
							calling solver looking for 
							V_c
2021-06-22 07:22:04,068
								base case
2021-06-22 07:22:04,068
returning: V_c=set()
2021-06-22 07:22:04,068
							recursesym: 
							[\Delta v_C, C, \Delta i_L, D, V_c, V_g, M, L]
2021-06-22 07:22:04,068
							calling solver looking for 
							V_g
2021-06-22 07:22:04,068
								base case
2021-06-22 07:22:04,068
returning: V_g=set()
2021-06-22 07:22:04,068
							recursesym: 
							[\Delta v_C, C, \Delta i_L, D, V_c, V_g, M, L]
2021-06-22 07:22:04,068
							calling solver looking for 
							\Delta i_L
2021-06-22 07:22:04,068
								base case
2021-06-22 07:22:04,068
returning: delta_iL=set()
2021-06-22 07:22:04,069
							recursesym: 
							[\Delta v_C, C, \Delta i_L, D, V_c, V_g, M, L]
2021-06-22 07:22:04,069
							calling solver looking for 
							fₛ
2021-06-22 07:22:04,069
								adding f_s to [\Delta v_C, C, \Delta i_L, D, V_c, V_g, M, L]
2021-06-22 07:22:04,069
looking for 
fₛ
2021-06-22 07:22:04,179
nonlinsolve returns: 
0.125⋅\Delta i_L
────────────────
  C⋅\Delta v_C  
2021-06-22 07:22:04,181

D⋅(-V_c + V_g) + (1 - D)⋅(V_c + V_g) solved for 
fₛ=
∅
2021-06-22 07:22:04,181

    V_c
M - ───
    V_g solved for 
fₛ=
∅
2021-06-22 07:22:04,182

       V_c
-i_R + ───
        R  solved for 
fₛ=
∅
2021-06-22 07:22:04,182

i_L - i_R solved for 
fₛ=
∅
2021-06-22 07:22:04,192

  D⋅(-V_c + V_g)               
- ────────────── + 2⋅\Delta i_L
       L⋅fₛ                     solved for 
fₛ=
⎧-D⋅(V_c - V_g) ⎫      
⎨───────────────⎬ \ {0}
⎩ 2⋅L⋅\Delta i_L⎭      
2021-06-22 07:22:04,211

                 0.25⋅\Delta i_L
2⋅C⋅\Delta v_C - ───────────────
                        fₛ       solved for 
fₛ=
⎧0.125⋅\Delta i_L⎫      
⎨────────────────⎬ \ {0}
⎩  C⋅\Delta v_C  ⎭      
2021-06-22 07:22:04,215
								Done with 
fₛ
2021-06-22 07:22:04,216
								so far f_s = 
								OrderedSet([D*(-V_c + V_g)/(2*L*\Delta i_L), 0.125*\Delta i_L/(C*\Delta v_C)])
2021-06-22 07:22:04,216
								solution to f_s is: 
								D⋅(-V_c + V_g)
								──────────────
								2⋅L⋅\Delta i_L 
2021-06-22 07:22:04,217
								recursesym: 
								[\Delta v_C, C, \Delta i_L, D, V_c, V_g, M, L, fₛ]
2021-06-22 07:22:04,217
								calling solver looking for 
								D
2021-06-22 07:22:04,217
									base case
2021-06-22 07:22:04,217
returning: D=set()
2021-06-22 07:22:04,217
								recursesym: 
								[\Delta v_C, C, \Delta i_L, D, V_c, V_g, M, L, fₛ]
2021-06-22 07:22:04,217
								calling solver looking for 
								L
2021-06-22 07:22:04,217
									base case
2021-06-22 07:22:04,217
returning: L=set()
2021-06-22 07:22:04,217
								recursesym: 
								[\Delta v_C, C, \Delta i_L, D, V_c, V_g, M, L, fₛ]
2021-06-22 07:22:04,218
								calling solver looking for 
								V_c
2021-06-22 07:22:04,218
									base case
2021-06-22 07:22:04,218
returning: V_c=set()
2021-06-22 07:22:04,218
								recursesym: 
								[\Delta v_C, C, \Delta i_L, D, V_c, V_g, M, L, fₛ]
2021-06-22 07:22:04,218
								calling solver looking for 
								V_g
2021-06-22 07:22:04,218
									base case
2021-06-22 07:22:04,218
returning: V_g=set()
2021-06-22 07:22:04,218
								recursesym: 
								[\Delta v_C, C, \Delta i_L, D, V_c, V_g, M, L, fₛ]
2021-06-22 07:22:04,218
								calling solver looking for 
								\Delta i_L
2021-06-22 07:22:04,218
									base case
2021-06-22 07:22:04,218
returning: delta_iL=set()
2021-06-22 07:22:04,219
								solution to f_s is: 
								0.125⋅\Delta i_L
								────────────────
								  C⋅\Delta v_C   
2021-06-22 07:22:04,219
								recursesym: 
								[\Delta v_C, C, \Delta i_L, D, V_c, V_g, M, L, fₛ]
2021-06-22 07:22:04,219
								calling solver looking for 
								C
2021-06-22 07:22:04,219
									base case
2021-06-22 07:22:04,219
returning: C=set()
2021-06-22 07:22:04,219
								recursesym: 
								[\Delta v_C, C, \Delta i_L, D, V_c, V_g, M, L, fₛ]
2021-06-22 07:22:04,220
								calling solver looking for 
								\Delta i_L
2021-06-22 07:22:04,220
									base case
2021-06-22 07:22:04,220
returning: delta_iL=set()
2021-06-22 07:22:04,220
								recursesym: 
								[\Delta v_C, C, \Delta i_L, D, V_c, V_g, M, L, fₛ]
2021-06-22 07:22:04,220
								calling solver looking for 
								\Delta v_C
2021-06-22 07:22:04,220
									base case
2021-06-22 07:22:04,220
returning: detla_vC=set()
2021-06-22 07:22:04,220
end of function, recursesym: {\Delta v_C: set(), C: set(), \Delta i_L: set(), D: set(), V_c: set(), V_g: set(), M: OrderedSet([V_c/V_g]), L: set(), f_s: set()}
2021-06-22 07:22:04,221
returning: 
								OrderedSet([D*(-V_c + V_g)/(2*L*\Delta i_L), 0.125*\Delta i_L/(C*\Delta v_C)])
2021-06-22 07:22:04,221
							sub-ing in 
							D⋅(-V_c + V_g)
							──────────────
							2⋅L⋅\Delta i_L for 
							fₛ
2021-06-22 07:22:04,221
							and found 
							L
2021-06-22 07:22:04,237
							sub-ing in 
							0.125⋅\Delta i_L
							────────────────
							  C⋅\Delta v_C   for 
							fₛ
2021-06-22 07:22:04,238
							and found 
							4.0⋅C⋅D⋅\Delta v_C⋅(-V_c + V_g)
							───────────────────────────────
							                    2          
							          \Delta i_L           
2021-06-22 07:22:04,238
end of function, recursesym: {\Delta v_C: set(), C: set(), \Delta i_L: set(), D: set(), V_c: set(), V_g: set(), M: OrderedSet([V_c/V_g]), L: set(), f_s: OrderedSet([D*(-V_c + V_g)/(2*L*\Delta i_L), 0.125*\Delta i_L/(C*\Delta v_C)])}
2021-06-22 07:22:04,239
returning: 
							OrderedSet([D*(-V_c + V_g)/(2*\Delta i_L*f_s), 4.0*C*D*\Delta v_C*(-V_c + V_g)
							/\Delta i_L**2])
2021-06-22 07:22:04,240
					sub-ing in 
					 D⋅(-V_c + V_g)
					───────────────
					2⋅\Delta i_L⋅fₛ for 
					L
2021-06-22 07:22:04,240
					and found 
					V_g
2021-06-22 07:22:04,264
					sub-ing in 
					4.0⋅C⋅D⋅\Delta v_C⋅(-V_c + V_g)
					───────────────────────────────
					                    2          
					          \Delta i_L            for 
					L
2021-06-22 07:22:04,265
					and found 
					8.0⋅C⋅\Delta v_C⋅fₛ⋅(-V_c + V_g)      
					──────────────────────────────── + V_c
					           \Delta i_L                 
2021-06-22 07:22:04,265
					recursesym: 
					[\Delta v_C, C, \Delta i_L, D, V_c, V_g, M, L, fₛ]
2021-06-22 07:22:04,265
					calling solver looking for 
					V_c
2021-06-22 07:22:04,265
									base case
2021-06-22 07:22:04,265
returning: V_c=set()
2021-06-22 07:22:04,266
					recursesym: 
					[\Delta v_C, C, \Delta i_L, D, V_c, V_g, M, L, fₛ]
2021-06-22 07:22:04,266
					calling solver looking for 
					\Delta i_L
2021-06-22 07:22:04,266
									base case
2021-06-22 07:22:04,266
returning: delta_iL=set()
2021-06-22 07:22:04,266
					recursesym: 
					[\Delta v_C, C, \Delta i_L, D, V_c, V_g, M, L, fₛ]
2021-06-22 07:22:04,266
					calling solver looking for 
					fₛ
2021-06-22 07:22:04,266
									base case
2021-06-22 07:22:04,267
returning: f_s=OrderedSet([D*(-V_c + V_g)/(2*L*\Delta i_L), 0.125*\Delta i_L/(C*\Delta v_C)])
2021-06-22 07:22:04,267
					sub-ing in 
					D⋅(-V_c + V_g)
					──────────────
					2⋅L⋅\Delta i_L for 
					fₛ
2021-06-22 07:22:04,267
					and found 
					V_g
2021-06-22 07:22:04,289
					sub-ing in 
					0.125⋅\Delta i_L
					────────────────
					  C⋅\Delta v_C   for 
					fₛ
2021-06-22 07:22:04,289
					and found 
					                       2
					      0.25⋅L⋅\Delta i_L 
					V_c + ──────────────────
					        C⋅D⋅\Delta v_C  
2021-06-22 07:22:04,290
end of function, recursesym: {\Delta v_C: set(), C: set(), \Delta i_L: set(), D: set(), V_c: set(), V_g: set(), M: OrderedSet([V_c/V_g]), L: OrderedSet([D*(-V_c + V_g)/(2*\Delta i_L*f_s), 4.0*C*D*\Delta v_C*(-V_c + V_g)/\Delta i_L**2]), f_s: OrderedSet([D*(-V_c + V_g)/(2*L*\Delta i_L), 0.125*\Delta i_L/(C*\Delta v_C)])}
2021-06-22 07:22:04,291
returning: 
					OrderedSet([V_c*(2*D - 1), V_c/M, V_c + 2*L*\Delta i_L*f_s/D, V_c + 0.25*L*\De
					lta i_L**2/(C*D*\Delta v_C)])
2021-06-22 07:22:04,292
				sub-ing in 
				V_c⋅(2⋅D - 1) for 
				V_g
2021-06-22 07:22:04,292
				and found 
				V_c
2021-06-22 07:22:04,302
				sub-ing in 
				V_c
				───
				 M  for 
				V_g
2021-06-22 07:22:04,302
				and found 
				    V_c    
				───────────
				M⋅(2⋅D - 1)
2021-06-22 07:22:04,319
				sub-ing in 
				      2⋅L⋅\Delta i_L⋅fₛ
				V_c + ─────────────────
				              D         for 
				V_g
2021-06-22 07:22:04,320
				and found 
				      2⋅L⋅\Delta i_L⋅fₛ
				V_c + ─────────────────
				              D        
				───────────────────────
				        2⋅D - 1        
2021-06-22 07:22:04,355
				sub-ing in 
				                       2
				      0.25⋅L⋅\Delta i_L 
				V_c + ──────────────────
				        C⋅D⋅\Delta v_C   for 
				V_g
2021-06-22 07:22:04,356
				and found 
				                       2
				      0.25⋅L⋅\Delta i_L 
				V_c + ──────────────────
				        C⋅D⋅\Delta v_C  
				────────────────────────
				        2⋅D - 1         
2021-06-22 07:22:04,356
				solution to V_c is: 
				M⋅V_g 
2021-06-22 07:22:04,357
				recursesym: 
				[\Delta v_C, C, \Delta i_L, D, V_c, V_g, M, L, fₛ]
2021-06-22 07:22:04,357
				calling solver looking for 
				M
2021-06-22 07:22:04,357
									base case
2021-06-22 07:22:04,357
returning: M=OrderedSet([V_c/V_g])
2021-06-22 07:22:04,357
				sub-ing in 
				V_c
				───
				V_g for 
				M
2021-06-22 07:22:04,357
				and found 
				V_c
2021-06-22 07:22:04,358
				recursesym: 
				[\Delta v_C, C, \Delta i_L, D, V_c, V_g, M, L, fₛ]
2021-06-22 07:22:04,358
				calling solver looking for 
				V_g
2021-06-22 07:22:04,358
									base case
2021-06-22 07:22:04,358
returning: V_g=OrderedSet([V_c*(2*D - 1), V_c/M, V_c + 2*L*\Delta i_L*f_s/D, V_c + 0.25*L*\De
lta i_L**2/(C*D*\Delta v_C)])
2021-06-22 07:22:04,365
				sub-ing in 
				V_c⋅(2⋅D - 1) for 
				V_g
2021-06-22 07:22:04,365
				and found 
				M⋅V_c⋅(2⋅D - 1)
2021-06-22 07:22:04,365
				sub-ing in 
				V_c
				───
				 M  for 
				V_g
2021-06-22 07:22:04,366
				and found 
				V_c
2021-06-22 07:22:04,377
				sub-ing in 
				      2⋅L⋅\Delta i_L⋅fₛ
				V_c + ─────────────────
				              D         for 
				V_g
2021-06-22 07:22:04,377
				and found 
				  ⎛      2⋅L⋅\Delta i_L⋅fₛ⎞
				M⋅⎜V_c + ─────────────────⎟
				  ⎝              D        ⎠
2021-06-22 07:22:04,398
				sub-ing in 
				                       2
				      0.25⋅L⋅\Delta i_L 
				V_c + ──────────────────
				        C⋅D⋅\Delta v_C   for 
				V_g
2021-06-22 07:22:04,399
				and found 
				  ⎛                       2⎞
				  ⎜      0.25⋅L⋅\Delta i_L ⎟
				M⋅⎜V_c + ──────────────────⎟
				  ⎝        C⋅D⋅\Delta v_C  ⎠
2021-06-22 07:22:04,399
				solution to V_c is: 
				R⋅i_R 
2021-06-22 07:22:04,400
				recursesym: 
				[\Delta v_C, C, \Delta i_L, D, V_c, V_g, M, L, fₛ]
2021-06-22 07:22:04,400
				calling solver looking for 
				R
2021-06-22 07:22:04,400
									adding R to [\Delta v_C, C, \Delta i_L, D, V_c, V_g, M, L, f_s]
2021-06-22 07:22:04,400
looking for 
R
2021-06-22 07:22:04,498
nonlinsolve returns: 
V_c
───
i_R
2021-06-22 07:22:04,499

D⋅(-V_c + V_g) + (1 - D)⋅(V_c + V_g) solved for 
R=
∅
2021-06-22 07:22:04,499

    V_c
M - ───
    V_g solved for 
R=
∅
2021-06-22 07:22:04,506

       V_c
-i_R + ───
        R  solved for 
R=
⎧V_c⎫      
⎨───⎬ \ {0}
⎩i_R⎭      
2021-06-22 07:22:04,509

i_L - i_R solved for 
R=
∅
2021-06-22 07:22:04,510

  D⋅(-V_c + V_g)               
- ────────────── + 2⋅\Delta i_L
       L⋅fₛ                     solved for 
R=
∅
2021-06-22 07:22:04,511

                 0.25⋅\Delta i_L
2⋅C⋅\Delta v_C - ───────────────
                        fₛ       solved for 
R=
∅
2021-06-22 07:22:04,511
									Done with 
R
2021-06-22 07:22:04,511
									so far R = 
									OrderedSet([V_c/i_R])
2021-06-22 07:22:04,512
									solution to R is: 
									V_c
									───
									i_R 
2021-06-22 07:22:04,512
									recursesym: 
									[\Delta v_C, C, \Delta i_L, D, V_c, V_g, M, L, fₛ, R]
2021-06-22 07:22:04,512
									calling solver looking for 
									V_c
2021-06-22 07:22:04,512
										base case
2021-06-22 07:22:04,512
returning: V_c=set()
2021-06-22 07:22:04,512
									recursesym: 
									[\Delta v_C, C, \Delta i_L, D, V_c, V_g, M, L, fₛ, R]
2021-06-22 07:22:04,512
									calling solver looking for 
									i_R
2021-06-22 07:22:04,513
										adding i_R to [\Delta v_C, C, \Delta i_L, D, V_c, V_g, M, L, f_s, R]
2021-06-22 07:22:04,513
looking for 
i_R
2021-06-22 07:22:04,571
nonlinsolve returns: 
i_L
2021-06-22 07:22:04,572

D⋅(-V_c + V_g) + (1 - D)⋅(V_c + V_g) solved for 
i_R=
∅
2021-06-22 07:22:04,573

    V_c
M - ───
    V_g solved for 
i_R=
∅
2021-06-22 07:22:04,575

       V_c
-i_R + ───
        R  solved for 
i_R=
⎧V_c⎫
⎨───⎬
⎩ R ⎭
2021-06-22 07:22:04,578

i_L - i_R solved for 
i_R=
{i_L}
2021-06-22 07:22:04,579

  D⋅(-V_c + V_g)               
- ────────────── + 2⋅\Delta i_L
       L⋅fₛ                     solved for 
i_R=
∅
2021-06-22 07:22:04,580

                 0.25⋅\Delta i_L
2⋅C⋅\Delta v_C - ───────────────
                        fₛ       solved for 
i_R=
∅
2021-06-22 07:22:04,580
										Done with 
i_R
2021-06-22 07:22:04,580
										so far i_R = 
										OrderedSet([V_c/R, i_L])
2021-06-22 07:22:04,580
										solution to i_R is: 
										V_c
										───
										 R  
2021-06-22 07:22:04,581
										recursesym: 
										[\Delta v_C, C, \Delta i_L, D, V_c, V_g, M, L, fₛ, R, i_R]
2021-06-22 07:22:04,581
										calling solver looking for 
										R
2021-06-22 07:22:04,581
											base case
2021-06-22 07:22:04,581
returning: R=set()
2021-06-22 07:22:04,581
										recursesym: 
										[\Delta v_C, C, \Delta i_L, D, V_c, V_g, M, L, fₛ, R, i_R]
2021-06-22 07:22:04,581
										calling solver looking for 
										V_c
2021-06-22 07:22:04,581
											base case
2021-06-22 07:22:04,581
returning: V_c=set()
2021-06-22 07:22:04,581
										solution to i_R is: 
										i_L 
2021-06-22 07:22:04,582
										recursesym: 
										[\Delta v_C, C, \Delta i_L, D, V_c, V_g, M, L, fₛ, R, i_R]
2021-06-22 07:22:04,582
										calling solver looking for 
										i_L
2021-06-22 07:22:04,582
											adding i_L to [\Delta v_C, C, \Delta i_L, D, V_c, V_g, M, L, f_s, R, i_R]
2021-06-22 07:22:04,582
looking for 
i_L
2021-06-22 07:22:04,643
nonlinsolve returns: 
i_R
2021-06-22 07:22:04,644

D⋅(-V_c + V_g) + (1 - D)⋅(V_c + V_g) solved for 
i_L=
∅
2021-06-22 07:22:04,645

    V_c
M - ───
    V_g solved for 
i_L=
∅
2021-06-22 07:22:04,645

       V_c
-i_R + ───
        R  solved for 
i_L=
∅
2021-06-22 07:22:04,646

i_L - i_R solved for 
i_L=
{i_R}
2021-06-22 07:22:04,647

  D⋅(-V_c + V_g)               
- ────────────── + 2⋅\Delta i_L
       L⋅fₛ                     solved for 
i_L=
∅
2021-06-22 07:22:04,648

                 0.25⋅\Delta i_L
2⋅C⋅\Delta v_C - ───────────────
                        fₛ       solved for 
i_L=
∅
2021-06-22 07:22:04,648
											Done with 
i_L
2021-06-22 07:22:04,648
											so far i_L = 
											OrderedSet([i_R])
2021-06-22 07:22:04,648
											solution to i_L is: 
											i_R 
2021-06-22 07:22:04,648
											recursesym: 
											[\Delta v_C, C, \Delta i_L, D, V_c, V_g, M, L, fₛ, R, i_R, i_L]
2021-06-22 07:22:04,648
											calling solver looking for 
											i_R
2021-06-22 07:22:04,648
												base case
2021-06-22 07:22:04,648
returning: i_R=set()
2021-06-22 07:22:04,650
end of function, recursesym: {\Delta v_C: set(), C: set(), \Delta i_L: set(), D: set(), V_c: set(), V_g: OrderedSet([V_c*(2*D - 1), V_c/M, V_c + 2*L*\Delta i_L*f_s/D, V_c + 0.25*L*\Delta i_L**2/(C*D*\Delta v_C)]), M: OrderedSet([V_c/V_g]), L: OrderedSet([D*(-V_c + V_g)/(2*\Delta i_L*f_s), 4.0*C*D*\Delta v_C*(-V_c + V_g)/\Delta i_L**2]), f_s: OrderedSet([D*(-V_c + V_g)/(2*L*\Delta i_L), 0.125*\Delta i_L/(C*\Delta v_C)]), R: set(), i_R: set(), i_L: set()}
2021-06-22 07:22:04,650
returning: 
											OrderedSet([i_R])
2021-06-22 07:22:04,650
										sub-ing in 
										i_R for 
										i_L
2021-06-22 07:22:04,650
										and found 
										i_R
2021-06-22 07:22:04,652
end of function, recursesym: {\Delta v_C: set(), C: set(), \Delta i_L: set(), D: set(), V_c: set(), V_g: OrderedSet([V_c*(2*D - 1), V_c/M, V_c + 2*L*\Delta i_L*f_s/D, V_c + 0.25*L*\Delta i_L**2/(C*D*\Delta v_C)]), M: OrderedSet([V_c/V_g]), L: OrderedSet([D*(-V_c + V_g)/(2*\Delta i_L*f_s), 4.0*C*D*\Delta v_C*(-V_c + V_g)/\Delta i_L**2]), f_s: OrderedSet([D*(-V_c + V_g)/(2*L*\Delta i_L), 0.125*\Delta i_L/(C*\Delta v_C)]), R: set(), i_R: set(), i_L: OrderedSet([i_R])}
2021-06-22 07:22:04,652
returning: 
										OrderedSet([V_c/R, i_L])
2021-06-22 07:22:04,653
									sub-ing in 
									V_c
									───
									 R  for 
									i_R
2021-06-22 07:22:04,653
									and found 
									R
2021-06-22 07:22:04,656
									sub-ing in 
									i_L for 
									i_R
2021-06-22 07:22:04,656
									and found 
									V_c
									───
									i_L
2021-06-22 07:22:04,658
end of function, recursesym: {\Delta v_C: set(), C: set(), \Delta i_L: set(), D: set(), V_c: set(), V_g: OrderedSet([V_c*(2*D - 1), V_c/M, V_c + 2*L*\Delta i_L*f_s/D, V_c + 0.25*L*\Delta i_L**2/(C*D*\Delta v_C)]), M: OrderedSet([V_c/V_g]), L: OrderedSet([D*(-V_c + V_g)/(2*\Delta i_L*f_s), 4.0*C*D*\Delta v_C*(-V_c + V_g)/\Delta i_L**2]), f_s: OrderedSet([D*(-V_c + V_g)/(2*L*\Delta i_L), 0.125*\Delta i_L/(C*\Delta v_C)]), R: set(), i_R: OrderedSet([V_c/R, i_L]), i_L: OrderedSet([i_R])}
2021-06-22 07:22:04,658
returning: 
									OrderedSet([V_c/i_R, V_c/i_L])
2021-06-22 07:22:04,658
				sub-ing in 
				V_c
				───
				i_R for 
				R
2021-06-22 07:22:04,658
				and found 
				V_c
2021-06-22 07:22:04,662
				sub-ing in 
				V_c
				───
				i_L for 
				R
2021-06-22 07:22:04,662
				and found 
				V_c⋅i_R
				───────
				  i_L  
2021-06-22 07:22:04,662
				recursesym: 
				[\Delta v_C, C, \Delta i_L, D, V_c, V_g, M, L, fₛ, R, i_R, i_L]
2021-06-22 07:22:04,663
				calling solver looking for 
				i_R
2021-06-22 07:22:04,663
												base case
2021-06-22 07:22:04,663
returning: i_R=OrderedSet([V_c/R, i_L])
2021-06-22 07:22:04,663
				sub-ing in 
				V_c
				───
				 R  for 
				i_R
2021-06-22 07:22:04,663
				and found 
				V_c
2021-06-22 07:22:04,665
				sub-ing in 
				i_L for 
				i_R
2021-06-22 07:22:04,665
				and found 
				R⋅i_L
2021-06-22 07:22:04,666
				solution to V_c is: 
				      2⋅L⋅\Delta i_L⋅fₛ
				V_g - ─────────────────
				              D         
2021-06-22 07:22:04,666
				recursesym: 
				[\Delta v_C, C, \Delta i_L, D, V_c, V_g, M, L, fₛ, R, i_R, i_L]
2021-06-22 07:22:04,666
				calling solver looking for 
				D
2021-06-22 07:22:04,666
												base case
2021-06-22 07:22:04,666
returning: D=set()
2021-06-22 07:22:04,667
				recursesym: 
				[\Delta v_C, C, \Delta i_L, D, V_c, V_g, M, L, fₛ, R, i_R, i_L]
2021-06-22 07:22:04,667
				calling solver looking for 
				L
2021-06-22 07:22:04,667
												base case
2021-06-22 07:22:04,667
returning: L=OrderedSet([D*(-V_c + V_g)/(2*\Delta i_L*f_s), 4.0*C*D*\Delta v_C*(-V_c + V_g)
/\Delta i_L**2])
2021-06-22 07:22:04,668
				sub-ing in 
				 D⋅(-V_c + V_g)
				───────────────
				2⋅\Delta i_L⋅fₛ for 
				L
2021-06-22 07:22:04,668
				and found 
				V_c
2021-06-22 07:22:04,692
				sub-ing in 
				4.0⋅C⋅D⋅\Delta v_C⋅(-V_c + V_g)
				───────────────────────────────
				                    2          
				          \Delta i_L            for 
				L
2021-06-22 07:22:04,693
				and found 
				  8.0⋅C⋅\Delta v_C⋅fₛ⋅(-V_c + V_g)      
				- ──────────────────────────────── + V_g
				             \Delta i_L                 
2021-06-22 07:22:04,693
				recursesym: 
				[\Delta v_C, C, \Delta i_L, D, V_c, V_g, M, L, fₛ, R, i_R, i_L]
2021-06-22 07:22:04,693
				calling solver looking for 
				V_g
2021-06-22 07:22:04,693
												base case
2021-06-22 07:22:04,694
returning: V_g=OrderedSet([V_c*(2*D - 1), V_c/M, V_c + 2*L*\Delta i_L*f_s/D, V_c + 0.25*L*\De
lta i_L**2/(C*D*\Delta v_C)])
2021-06-22 07:22:04,712
				sub-ing in 
				V_c⋅(2⋅D - 1) for 
				V_g
2021-06-22 07:22:04,713
				and found 
				                2⋅L⋅\Delta i_L⋅fₛ
				V_c⋅(2⋅D - 1) - ─────────────────
				                        D        
2021-06-22 07:22:04,725
				sub-ing in 
				V_c
				───
				 M  for 
				V_g
2021-06-22 07:22:04,726
				and found 
				V_c   2⋅L⋅\Delta i_L⋅fₛ
				─── - ─────────────────
				 M            D        
2021-06-22 07:22:04,726
				sub-ing in 
				      2⋅L⋅\Delta i_L⋅fₛ
				V_c + ─────────────────
				              D         for 
				V_g
2021-06-22 07:22:04,726
				and found 
				V_c
2021-06-22 07:22:04,761
				sub-ing in 
				                       2
				      0.25⋅L⋅\Delta i_L 
				V_c + ──────────────────
				        C⋅D⋅\Delta v_C   for 
				V_g
2021-06-22 07:22:04,762
				and found 
				                                           2
				      2⋅L⋅\Delta i_L⋅fₛ   0.25⋅L⋅\Delta i_L 
				V_c - ───────────────── + ──────────────────
				              D             C⋅D⋅\Delta v_C  
2021-06-22 07:22:04,763
				recursesym: 
				[\Delta v_C, C, \Delta i_L, D, V_c, V_g, M, L, fₛ, R, i_R, i_L]
2021-06-22 07:22:04,763
				calling solver looking for 
				\Delta i_L
2021-06-22 07:22:04,763
												base case
2021-06-22 07:22:04,763
returning: delta_iL=set()
2021-06-22 07:22:04,763
				recursesym: 
				[\Delta v_C, C, \Delta i_L, D, V_c, V_g, M, L, fₛ, R, i_R, i_L]
2021-06-22 07:22:04,763
				calling solver looking for 
				fₛ
2021-06-22 07:22:04,763
												base case
2021-06-22 07:22:04,764
returning: f_s=OrderedSet([D*(-V_c + V_g)/(2*L*\Delta i_L), 0.125*\Delta i_L/(C*\Delta v_C)])
2021-06-22 07:22:04,764
				sub-ing in 
				D⋅(-V_c + V_g)
				──────────────
				2⋅L⋅\Delta i_L for 
				fₛ
2021-06-22 07:22:04,765
				and found 
				V_c
2021-06-22 07:22:04,785
				sub-ing in 
				0.125⋅\Delta i_L
				────────────────
				  C⋅\Delta v_C   for 
				fₛ
2021-06-22 07:22:04,786
				and found 
				                       2
				      0.25⋅L⋅\Delta i_L 
				V_g - ──────────────────
				        C⋅D⋅\Delta v_C  
2021-06-22 07:22:04,788
end of function, recursesym: {\Delta v_C: set(), C: set(), \Delta i_L: set(), D: set(), V_c: set(), V_g: OrderedSet([V_c*(2*D - 1), V_c/M, V_c + 2*L*\Delta i_L*f_s/D, V_c + 0.25*L*\Delta i_L**2/(C*D*\Delta v_C)]), M: OrderedSet([V_c/V_g]), L: OrderedSet([D*(-V_c + V_g)/(2*\Delta i_L*f_s), 4.0*C*D*\Delta v_C*(-V_c + V_g)/\Delta i_L**2]), f_s: OrderedSet([D*(-V_c + V_g)/(2*L*\Delta i_L), 0.125*\Delta i_L/(C*\Delta v_C)]), R: OrderedSet([V_c/i_R, V_c/i_L]), i_R: OrderedSet([V_c/R, i_L]), i_L: OrderedSet([i_R])}
2021-06-22 07:22:04,789
returning: 
				OrderedSet([V_g/(2*D - 1), M*V_g, R*i_R, V_g - 2*L*\Delta i_L*f_s/D, R*i_L, V_
				g - 0.25*L*\Delta i_L**2/(C*D*\Delta v_C)])
2021-06-22 07:22:04,795
			sub-ing in 
			  V_g  
			───────
			2⋅D - 1 for 
			V_c
2021-06-22 07:22:04,796
			and found 
			          ⎛        V_g  ⎞
			(2⋅D - 1)⋅⎜V_g + ───────⎟
			          ⎝      2⋅D - 1⎠
			─────────────────────────
			          2⋅V_g          
2021-06-22 07:22:04,805
			sub-ing in 
			M⋅V_g for 
			V_c
2021-06-22 07:22:04,805
			and found 
			M⋅V_g + V_g
			───────────
			  2⋅M⋅V_g  
2021-06-22 07:22:04,815
			sub-ing in 
			R⋅i_R for 
			V_c
2021-06-22 07:22:04,815
			and found 
			R⋅i_R + V_g
			───────────
			  2⋅R⋅i_R  
2021-06-22 07:22:04,835
			sub-ing in 
			      2⋅L⋅\Delta i_L⋅fₛ
			V_g - ─────────────────
			              D         for 
			V_c
2021-06-22 07:22:04,836
			and found 
			         2⋅L⋅\Delta i_L⋅fₛ 
			 2⋅V_g - ───────────────── 
			                 D         
			───────────────────────────
			  ⎛      2⋅L⋅\Delta i_L⋅fₛ⎞
			2⋅⎜V_g - ─────────────────⎟
			  ⎝              D        ⎠
2021-06-22 07:22:04,845
			sub-ing in 
			R⋅i_L for 
			V_c
2021-06-22 07:22:04,846
			and found 
			R⋅i_L + V_g
			───────────
			  2⋅R⋅i_L  
2021-06-22 07:22:04,891
			sub-ing in 
			                       2
			      0.25⋅L⋅\Delta i_L 
			V_g - ──────────────────
			        C⋅D⋅\Delta v_C   for 
			V_c
2021-06-22 07:22:04,892
			and found 
			                          2 
			         0.25⋅L⋅\Delta i_L  
			 2⋅V_g - ────────────────── 
			           C⋅D⋅\Delta v_C   
			────────────────────────────
			  ⎛                       2⎞
			  ⎜      0.25⋅L⋅\Delta i_L ⎟
			2⋅⎜V_g - ──────────────────⎟
			  ⎝        C⋅D⋅\Delta v_C  ⎠
2021-06-22 07:22:04,893
			recursesym: 
			[\Delta v_C, C, \Delta i_L, D, V_c, V_g, M, L, fₛ, R, i_R, i_L]
2021-06-22 07:22:04,893
			calling solver looking for 
			V_g
2021-06-22 07:22:04,893
												base case
2021-06-22 07:22:04,893
returning: V_g=OrderedSet([V_c*(2*D - 1), V_c/M, V_c + 2*L*\Delta i_L*f_s/D, V_c + 0.25*L*\De
lta i_L**2/(C*D*\Delta v_C)])
2021-06-22 07:22:04,899
			sub-ing in 
			V_c⋅(2⋅D - 1) for 
			V_g
2021-06-22 07:22:04,900
			and found 
			V_c⋅(2⋅D - 1) + V_c
			───────────────────
			       2⋅V_c       
2021-06-22 07:22:04,907
			sub-ing in 
			V_c
			───
			 M  for 
			V_g
2021-06-22 07:22:04,907
			and found 
			      V_c
			V_c + ───
			       M 
			─────────
			  2⋅V_c  
2021-06-22 07:22:04,919
			sub-ing in 
			      2⋅L⋅\Delta i_L⋅fₛ
			V_c + ─────────────────
			              D         for 
			V_g
2021-06-22 07:22:04,920
			and found 
			        2⋅L⋅\Delta i_L⋅fₛ
			2⋅V_c + ─────────────────
			                D        
			─────────────────────────
			          2⋅V_c          
2021-06-22 07:22:04,943
			sub-ing in 
			                       2
			      0.25⋅L⋅\Delta i_L 
			V_c + ──────────────────
			        C⋅D⋅\Delta v_C   for 
			V_g
2021-06-22 07:22:04,943
			and found 
			                         2
			        0.25⋅L⋅\Delta i_L 
			2⋅V_c + ──────────────────
			          C⋅D⋅\Delta v_C  
			──────────────────────────
			          2⋅V_c           
2021-06-22 07:22:04,944
			solution to D is: 
			-2⋅L⋅\Delta i_L⋅fₛ 
			───────────────────
			     V_c - V_g      
2021-06-22 07:22:04,944
			recursesym: 
			[\Delta v_C, C, \Delta i_L, D, V_c, V_g, M, L, fₛ, R, i_R, i_L]
2021-06-22 07:22:04,944
			calling solver looking for 
			L
2021-06-22 07:22:04,944
												base case
2021-06-22 07:22:04,945
returning: L=OrderedSet([D*(-V_c + V_g)/(2*\Delta i_L*f_s), 4.0*C*D*\Delta v_C*(-V_c + V_g)
/\Delta i_L**2])
2021-06-22 07:22:04,946
			sub-ing in 
			 D⋅(-V_c + V_g)
			───────────────
			2⋅\Delta i_L⋅fₛ for 
			L
2021-06-22 07:22:04,947
			and found 
			-D⋅(-V_c + V_g) 
			────────────────
			   V_c - V_g    
2021-06-22 07:22:04,955
			sub-ing in 
			4.0⋅C⋅D⋅\Delta v_C⋅(-V_c + V_g)
			───────────────────────────────
			                    2          
			          \Delta i_L            for 
			L
2021-06-22 07:22:04,956
			and found 
			-8.0⋅C⋅D⋅\Delta v_C⋅fₛ⋅(-V_c + V_g) 
			────────────────────────────────────
			       \Delta i_L⋅(V_c - V_g)       
2021-06-22 07:22:04,956
			recursesym: 
			[\Delta v_C, C, \Delta i_L, D, V_c, V_g, M, L, fₛ, R, i_R, i_L]
2021-06-22 07:22:04,956
			calling solver looking for 
			V_c
2021-06-22 07:22:04,956
												base case
2021-06-22 07:22:04,957
returning: V_c=OrderedSet([V_g/(2*D - 1), M*V_g, R*i_R, V_g - 2*L*\Delta i_L*f_s/D, R*i_L, V_
g - 0.25*L*\Delta i_L**2/(C*D*\Delta v_C)])
2021-06-22 07:22:04,977
			sub-ing in 
			  V_g  
			───────
			2⋅D - 1 for 
			V_c
2021-06-22 07:22:04,978
			and found 
			-2⋅L⋅\Delta i_L⋅fₛ 
			───────────────────
			            V_g    
			   -V_g + ───────  
			          2⋅D - 1  
2021-06-22 07:22:04,989
			sub-ing in 
			M⋅V_g for 
			V_c
2021-06-22 07:22:04,990
			and found 
			-2⋅L⋅\Delta i_L⋅fₛ 
			───────────────────
			    M⋅V_g - V_g    
2021-06-22 07:22:05,000
			sub-ing in 
			R⋅i_R for 
			V_c
2021-06-22 07:22:05,000
			and found 
			-2⋅L⋅\Delta i_L⋅fₛ 
			───────────────────
			    R⋅i_R - V_g    
2021-06-22 07:22:05,001
			sub-ing in 
			      2⋅L⋅\Delta i_L⋅fₛ
			V_g - ─────────────────
			              D         for 
			V_c
2021-06-22 07:22:05,001
			and found 
			D
2021-06-22 07:22:05,010
			sub-ing in 
			R⋅i_L for 
			V_c
2021-06-22 07:22:05,011
			and found 
			-2⋅L⋅\Delta i_L⋅fₛ 
			───────────────────
			    R⋅i_L - V_g    
2021-06-22 07:22:05,015
			sub-ing in 
			                       2
			      0.25⋅L⋅\Delta i_L 
			V_g - ──────────────────
			        C⋅D⋅\Delta v_C   for 
			V_c
2021-06-22 07:22:05,016
			and found 
			8.0⋅C⋅D⋅\Delta v_C⋅fₛ
			─────────────────────
			      \Delta i_L     
2021-06-22 07:22:05,016
			recursesym: 
			[\Delta v_C, C, \Delta i_L, D, V_c, V_g, M, L, fₛ, R, i_R, i_L]
2021-06-22 07:22:05,016
			calling solver looking for 
			V_g
2021-06-22 07:22:05,016
												base case
2021-06-22 07:22:05,017
returning: V_g=OrderedSet([V_c*(2*D - 1), V_c/M, V_c + 2*L*\Delta i_L*f_s/D, V_c + 0.25*L*\De
lta i_L**2/(C*D*\Delta v_C)])
2021-06-22 07:22:05,028
			sub-ing in 
			V_c⋅(2⋅D - 1) for 
			V_g
2021-06-22 07:22:05,029
			and found 
			-2⋅L⋅\Delta i_L⋅fₛ  
			────────────────────
			-V_c⋅(2⋅D - 1) + V_c
2021-06-22 07:22:05,041
			sub-ing in 
			V_c
			───
			 M  for 
			V_g
2021-06-22 07:22:05,042
			and found 
			-2⋅L⋅\Delta i_L⋅fₛ 
			───────────────────
			           V_c     
			     V_c - ───     
			            M      
2021-06-22 07:22:05,042
			sub-ing in 
			      2⋅L⋅\Delta i_L⋅fₛ
			V_c + ─────────────────
			              D         for 
			V_g
2021-06-22 07:22:05,042
			and found 
			D
2021-06-22 07:22:05,047
			sub-ing in 
			                       2
			      0.25⋅L⋅\Delta i_L 
			V_c + ──────────────────
			        C⋅D⋅\Delta v_C   for 
			V_g
2021-06-22 07:22:05,047
			and found 
			8.0⋅C⋅D⋅\Delta v_C⋅fₛ
			─────────────────────
			      \Delta i_L     
2021-06-22 07:22:05,048
			recursesym: 
			[\Delta v_C, C, \Delta i_L, D, V_c, V_g, M, L, fₛ, R, i_R, i_L]
2021-06-22 07:22:05,048
			calling solver looking for 
			\Delta i_L
2021-06-22 07:22:05,048
												base case
2021-06-22 07:22:05,048
returning: delta_iL=set()
2021-06-22 07:22:05,048
			recursesym: 
			[\Delta v_C, C, \Delta i_L, D, V_c, V_g, M, L, fₛ, R, i_R, i_L]
2021-06-22 07:22:05,048
			calling solver looking for 
			fₛ
2021-06-22 07:22:05,048
												base case
2021-06-22 07:22:05,049
returning: f_s=OrderedSet([D*(-V_c + V_g)/(2*L*\Delta i_L), 0.125*\Delta i_L/(C*\Delta v_C)])
2021-06-22 07:22:05,050
			sub-ing in 
			D⋅(-V_c + V_g)
			──────────────
			2⋅L⋅\Delta i_L for 
			fₛ
2021-06-22 07:22:05,050
			and found 
			-D⋅(-V_c + V_g) 
			────────────────
			   V_c - V_g    
2021-06-22 07:22:05,067
			sub-ing in 
			0.125⋅\Delta i_L
			────────────────
			  C⋅\Delta v_C   for 
			fₛ
2021-06-22 07:22:05,068
			and found 
			                    2   
			  -0.25⋅L⋅\Delta i_L    
			────────────────────────
			C⋅\Delta v_C⋅(V_c - V_g)
2021-06-22 07:22:05,071
end of function, recursesym: {\Delta v_C: set(), C: set(), \Delta i_L: set(), D: set(), V_c: OrderedSet([V_g/(2*D - 1), M*V_g, R*i_R, V_g - 2*L*\Delta i_L*f_s/D, R*i_L, V_g - 0.25*L*\Delta i_L**2/(C*D*\Delta v_C)]), V_g: OrderedSet([V_c*(2*D - 1), V_c/M, V_c + 2*L*\Delta i_L*f_s/D, V_c + 0.25*L*\Delta i_L**2/(C*D*\Delta v_C)]), M: OrderedSet([V_c/V_g]), L: OrderedSet([D*(-V_c + V_g)/(2*\Delta i_L*f_s), 4.0*C*D*\Delta v_C*(-V_c + V_g)/\Delta i_L**2]), f_s: OrderedSet([D*(-V_c + V_g)/(2*L*\Delta i_L), 0.125*\Delta i_L/(C*\Delta v_C)]), R: OrderedSet([V_c/i_R, V_c/i_L]), i_R: OrderedSet([V_c/R, i_L]), i_L: OrderedSet([i_R])}
2021-06-22 07:22:05,073
returning: 
			OrderedSet([(V_c + V_g)/(2*V_c), -2*L*\Delta i_L*f_s/(V_c - V_g), (M + 1)/(2*M
			), (R*i_R + V_g)/(2*R*i_R), (R*i_L + V_g)/(2*R*i_L), -2*L*\Delta i_L*f_s/(V_g*
			(M - 1)), -2*L*\Delta i_L*f_s/(R*i_R - V_g), -2*L*\Delta i_L*f_s/(R*i_L - V_g)
			, -2*L*M*\Delta i_L*f_s/(V_c*(M - 1)), -0.25*L*\Delta i_L**2/(C*\Delta v_C*(V_
			c - V_g))])
2021-06-22 07:22:05,091
		sub-ing in 
		V_c + V_g
		─────────
		  2⋅V_c   for 
		D
2021-06-22 07:22:05,092
		and found 
		(-V_c + V_g)⋅(V_c + V_g)
		────────────────────────
		       4⋅L⋅V_c⋅fₛ       
2021-06-22 07:22:05,093
		sub-ing in 
		-2⋅L⋅\Delta i_L⋅fₛ 
		───────────────────
		     V_c - V_g      for 
		D
2021-06-22 07:22:05,093
		and found 
		-\Delta i_L⋅(-V_c + V_g) 
		─────────────────────────
		        V_c - V_g        
2021-06-22 07:22:05,109
		sub-ing in 
		M + 1
		─────
		 2⋅M  for 
		D
2021-06-22 07:22:05,110
		and found 
		(M + 1)⋅(-V_c + V_g)
		────────────────────
		      4⋅L⋅M⋅fₛ      
2021-06-22 07:22:05,133
		sub-ing in 
		R⋅i_R + V_g
		───────────
		  2⋅R⋅i_R   for 
		D
2021-06-22 07:22:05,135
		and found 
		(-V_c + V_g)⋅(R⋅i_R + V_g)
		──────────────────────────
		       4⋅L⋅R⋅fₛ⋅i_R       
2021-06-22 07:22:05,169
		sub-ing in 
		R⋅i_L + V_g
		───────────
		  2⋅R⋅i_L   for 
		D
2021-06-22 07:22:05,170
		and found 
		(-V_c + V_g)⋅(R⋅i_L + V_g)
		──────────────────────────
		       4⋅L⋅R⋅fₛ⋅i_L       
2021-06-22 07:22:05,190
		sub-ing in 
		-2⋅L⋅\Delta i_L⋅fₛ 
		───────────────────
		    V_g⋅(M - 1)     for 
		D
2021-06-22 07:22:05,191
		and found 
		-\Delta i_L⋅(-V_c + V_g) 
		─────────────────────────
		       V_g⋅(M - 1)       
2021-06-22 07:22:05,208
		sub-ing in 
		-2⋅L⋅\Delta i_L⋅fₛ 
		───────────────────
		    R⋅i_R - V_g     for 
		D
2021-06-22 07:22:05,209
		and found 
		-\Delta i_L⋅(-V_c + V_g) 
		─────────────────────────
		       R⋅i_R - V_g       
2021-06-22 07:22:05,225
		sub-ing in 
		-2⋅L⋅\Delta i_L⋅fₛ 
		───────────────────
		    R⋅i_L - V_g     for 
		D
2021-06-22 07:22:05,226
		and found 
		-\Delta i_L⋅(-V_c + V_g) 
		─────────────────────────
		       R⋅i_L - V_g       
2021-06-22 07:22:05,246
		sub-ing in 
		-2⋅L⋅M⋅\Delta i_L⋅fₛ 
		─────────────────────
		     V_c⋅(M - 1)      for 
		D
2021-06-22 07:22:05,247
		and found 
		-M⋅\Delta i_L⋅(-V_c + V_g) 
		───────────────────────────
		        V_c⋅(M - 1)        
2021-06-22 07:22:05,261
		sub-ing in 
		                    2   
		  -0.25⋅L⋅\Delta i_L    
		────────────────────────
		C⋅\Delta v_C⋅(V_c - V_g) for 
		D
2021-06-22 07:22:05,262
		and found 
		                 2              
		-0.125⋅\Delta i_L ⋅(-V_c + V_g) 
		────────────────────────────────
		  C⋅\Delta v_C⋅fₛ⋅(V_c - V_g)   
2021-06-22 07:22:05,263
		recursesym: 
		[\Delta v_C, C, \Delta i_L, D, V_c, V_g, M, L, fₛ, R, i_R, i_L]
2021-06-22 07:22:05,263
		calling solver looking for 
		L
2021-06-22 07:22:05,263
												base case
2021-06-22 07:22:05,264
returning: L=OrderedSet([D*(-V_c + V_g)/(2*\Delta i_L*f_s), 4.0*C*D*\Delta v_C*(-V_c + V_g)
/\Delta i_L**2])
2021-06-22 07:22:05,264
		sub-ing in 
		 D⋅(-V_c + V_g)
		───────────────
		2⋅\Delta i_L⋅fₛ for 
		L
2021-06-22 07:22:05,264
		and found 
		\Delta i_L
2021-06-22 07:22:05,273
		sub-ing in 
		4.0⋅C⋅D⋅\Delta v_C⋅(-V_c + V_g)
		───────────────────────────────
		                    2          
		          \Delta i_L            for 
		L
2021-06-22 07:22:05,274
		and found 
		                2
		0.125⋅\Delta i_L 
		─────────────────
		 C⋅\Delta v_C⋅fₛ 
2021-06-22 07:22:05,274
		recursesym: 
		[\Delta v_C, C, \Delta i_L, D, V_c, V_g, M, L, fₛ, R, i_R, i_L]
2021-06-22 07:22:05,274
		calling solver looking for 
		V_c
2021-06-22 07:22:05,274
												base case
2021-06-22 07:22:05,276
returning: V_c=OrderedSet([V_g/(2*D - 1), M*V_g, R*i_R, V_g - 2*L*\Delta i_L*f_s/D, R*i_L, V_
g - 0.25*L*\Delta i_L**2/(C*D*\Delta v_C)])
2021-06-22 07:22:05,303
		sub-ing in 
		  V_g  
		───────
		2⋅D - 1 for 
		V_c
2021-06-22 07:22:05,304
		and found 
		  ⎛        V_g  ⎞
		D⋅⎜V_g - ───────⎟
		  ⎝      2⋅D - 1⎠
		─────────────────
		      2⋅L⋅fₛ     
2021-06-22 07:22:05,322
		sub-ing in 
		M⋅V_g for 
		V_c
2021-06-22 07:22:05,323
		and found 
		D⋅(-M⋅V_g + V_g)
		────────────────
		     2⋅L⋅fₛ     
2021-06-22 07:22:05,340
		sub-ing in 
		R⋅i_R for 
		V_c
2021-06-22 07:22:05,341
		and found 
		D⋅(-R⋅i_R + V_g)
		────────────────
		     2⋅L⋅fₛ     
2021-06-22 07:22:05,342
		sub-ing in 
		      2⋅L⋅\Delta i_L⋅fₛ
		V_g - ─────────────────
		              D         for 
		V_c
2021-06-22 07:22:05,342
		and found 
		\Delta i_L
2021-06-22 07:22:05,359
		sub-ing in 
		R⋅i_L for 
		V_c
2021-06-22 07:22:05,359
		and found 
		D⋅(-R⋅i_L + V_g)
		────────────────
		     2⋅L⋅fₛ     
2021-06-22 07:22:05,368
		sub-ing in 
		                       2
		      0.25⋅L⋅\Delta i_L 
		V_g - ──────────────────
		        C⋅D⋅\Delta v_C   for 
		V_c
2021-06-22 07:22:05,369
		and found 
		                2
		0.125⋅\Delta i_L 
		─────────────────
		 C⋅\Delta v_C⋅fₛ 
2021-06-22 07:22:05,369
		recursesym: 
		[\Delta v_C, C, \Delta i_L, D, V_c, V_g, M, L, fₛ, R, i_R, i_L]
2021-06-22 07:22:05,369
		calling solver looking for 
		V_g
2021-06-22 07:22:05,369
												base case
2021-06-22 07:22:05,370
returning: V_g=OrderedSet([V_c*(2*D - 1), V_c/M, V_c + 2*L*\Delta i_L*f_s/D, V_c + 0.25*L*\De
lta i_L**2/(C*D*\Delta v_C)])
2021-06-22 07:22:05,389
		sub-ing in 
		V_c⋅(2⋅D - 1) for 
		V_g
2021-06-22 07:22:05,390
		and found 
		D⋅(V_c⋅(2⋅D - 1) - V_c)
		───────────────────────
		         2⋅L⋅fₛ        
2021-06-22 07:22:05,410
		sub-ing in 
		V_c
		───
		 M  for 
		V_g
2021-06-22 07:22:05,410
		and found 
		  ⎛       V_c⎞
		D⋅⎜-V_c + ───⎟
		  ⎝        M ⎠
		──────────────
		    2⋅L⋅fₛ    
2021-06-22 07:22:05,411
		sub-ing in 
		      2⋅L⋅\Delta i_L⋅fₛ
		V_c + ─────────────────
		              D         for 
		V_g
2021-06-22 07:22:05,411
		and found 
		\Delta i_L
2021-06-22 07:22:05,420
		sub-ing in 
		                       2
		      0.25⋅L⋅\Delta i_L 
		V_c + ──────────────────
		        C⋅D⋅\Delta v_C   for 
		V_g
2021-06-22 07:22:05,420
		and found 
		                2
		0.125⋅\Delta i_L 
		─────────────────
		 C⋅\Delta v_C⋅fₛ 
2021-06-22 07:22:05,420
		recursesym: 
		[\Delta v_C, C, \Delta i_L, D, V_c, V_g, M, L, fₛ, R, i_R, i_L]
2021-06-22 07:22:05,421
		calling solver looking for 
		fₛ
2021-06-22 07:22:05,421
												base case
2021-06-22 07:22:05,421
returning: f_s=OrderedSet([D*(-V_c + V_g)/(2*L*\Delta i_L), 0.125*\Delta i_L/(C*\Delta v_C)])
2021-06-22 07:22:05,422
		sub-ing in 
		D⋅(-V_c + V_g)
		──────────────
		2⋅L⋅\Delta i_L for 
		fₛ
2021-06-22 07:22:05,422
		and found 
		\Delta i_L
2021-06-22 07:22:05,445
		sub-ing in 
		0.125⋅\Delta i_L
		────────────────
		  C⋅\Delta v_C   for 
		fₛ
2021-06-22 07:22:05,446
		and found 
		4.0⋅C⋅D⋅\Delta v_C⋅(-V_c + V_g)
		───────────────────────────────
		          L⋅\Delta i_L         
2021-06-22 07:22:05,446
		solution to delta_iL is: 
		8.0⋅C⋅\Delta v_C⋅fₛ 
2021-06-22 07:22:05,447
		recursesym: 
		[\Delta v_C, C, \Delta i_L, D, V_c, V_g, M, L, fₛ, R, i_R, i_L]
2021-06-22 07:22:05,447
		calling solver looking for 
		C
2021-06-22 07:22:05,447
												base case
2021-06-22 07:22:05,447
returning: C=set()
2021-06-22 07:22:05,447
		recursesym: 
		[\Delta v_C, C, \Delta i_L, D, V_c, V_g, M, L, fₛ, R, i_R, i_L]
2021-06-22 07:22:05,447
		calling solver looking for 
		\Delta v_C
2021-06-22 07:22:05,447
												base case
2021-06-22 07:22:05,447
returning: detla_vC=set()
2021-06-22 07:22:05,448
		recursesym: 
		[\Delta v_C, C, \Delta i_L, D, V_c, V_g, M, L, fₛ, R, i_R, i_L]
2021-06-22 07:22:05,448
		calling solver looking for 
		fₛ
2021-06-22 07:22:05,448
												base case
2021-06-22 07:22:05,448
returning: f_s=OrderedSet([D*(-V_c + V_g)/(2*L*\Delta i_L), 0.125*\Delta i_L/(C*\Delta v_C)])
2021-06-22 07:22:05,460
		sub-ing in 
		D⋅(-V_c + V_g)
		──────────────
		2⋅L⋅\Delta i_L for 
		fₛ
2021-06-22 07:22:05,460
		and found 
		4.0⋅C⋅D⋅\Delta v_C⋅(-V_c + V_g)
		───────────────────────────────
		          L⋅\Delta i_L         
2021-06-22 07:22:05,463
		sub-ing in 
		0.125⋅\Delta i_L
		────────────────
		  C⋅\Delta v_C   for 
		fₛ
2021-06-22 07:22:05,464
		and found 
		1.0⋅\Delta i_L
2021-06-22 07:22:05,469
end of function, recursesym: {\Delta v_C: set(), C: set(), \Delta i_L: set(), D: OrderedSet([(V_c + V_g)/(2*V_c), -2*L*\Delta i_L*f_s/(V_c - V_g), (M + 1)/(2*M), (R*i_R + V_g)/(2*R*i_R), (R*i_L + V_g)/(2*R*i_L), -2*L*\Delta i_L*f_s/(V_g*(M - 1)), -2*L*\Delta i_L*f_s/(R*i_R - V_g), -2*L*\Delta i_L*f_s/(R*i_L - V_g), -2*L*M*\Delta i_L*f_s/(V_c*(M - 1)), -0.25*L*\Delta i_L**2/(C*\Delta v_C*(V_c - V_g))]), V_c: OrderedSet([V_g/(2*D - 1), M*V_g, R*i_R, V_g - 2*L*\Delta i_L*f_s/D, R*i_L, V_g - 0.25*L*\Delta i_L**2/(C*D*\Delta v_C)]), V_g: OrderedSet([V_c*(2*D - 1), V_c/M, V_c + 2*L*\Delta i_L*f_s/D, V_c + 0.25*L*\Delta i_L**2/(C*D*\Delta v_C)]), M: OrderedSet([V_c/V_g]), L: OrderedSet([D*(-V_c + V_g)/(2*\Delta i_L*f_s), 4.0*C*D*\Delta v_C*(-V_c + V_g)/\Delta i_L**2]), f_s: OrderedSet([D*(-V_c + V_g)/(2*L*\Delta i_L), 0.125*\Delta i_L/(C*\Delta v_C)]), R: OrderedSet([V_c/i_R, V_c/i_L]), i_R: OrderedSet([V_c/R, i_L]), i_L: OrderedSet([i_R])}
2021-06-22 07:22:05,471
returning: 
		OrderedSet([D*(-V_c + V_g)/(2*L*f_s), 8.0*C*\Delta v_C*f_s, (-V_c**2 + V_g**2)
		/(4*L*V_c*f_s), -(M + 1)*(V_c - V_g)/(4*L*M*f_s), -(V_c - V_g)*(R*i_R + V_g)/(
		4*L*R*f_s*i_R), -(V_c - V_g)*(R*i_L + V_g)/(4*L*R*f_s*i_L), D*V_g*(D - 1)/(L*f
		_s*(2*D - 1)), D*(-R*i_R + V_g)/(2*L*f_s), D*(-R*i_L + V_g)/(2*L*f_s), D*V_c*(
		D - 1)/(L*f_s)])
2021-06-22 07:22:05,497
	sub-ing in 
	D⋅(-V_c + V_g)
	──────────────
	    2⋅L⋅fₛ     for 
	\Delta i_L
2021-06-22 07:22:05,498
	and found 
	0.0625⋅D⋅(-V_c + V_g)
	─────────────────────
	                  2  
	   L⋅\Delta v_C⋅fₛ   
2021-06-22 07:22:05,502
	sub-ing in 
	8.0⋅C⋅\Delta v_C⋅fₛ for 
	\Delta i_L
2021-06-22 07:22:05,502
	and found 
	1.0⋅C
2021-06-22 07:22:05,531
	sub-ing in 
	     2      2
	- V_c  + V_g 
	─────────────
	  4⋅L⋅V_c⋅fₛ  for 
	\Delta i_L
2021-06-22 07:22:05,531
	and found 
	        ⎛     2      2⎞
	0.03125⋅⎝- V_c  + V_g ⎠
	───────────────────────
	                     2 
	  L⋅V_c⋅\Delta v_C⋅fₛ  
2021-06-22 07:22:05,564
	sub-ing in 
	-(M + 1)⋅(V_c - V_g) 
	─────────────────────
	       4⋅L⋅M⋅fₛ       for 
	\Delta i_L
2021-06-22 07:22:05,564
	and found 
	-0.03125⋅(M + 1)⋅(V_c - V_g) 
	─────────────────────────────
	                       2     
	      L⋅M⋅\Delta v_C⋅fₛ      
2021-06-22 07:22:05,603
	sub-ing in 
	-(V_c - V_g)⋅(R⋅i_R + V_g) 
	───────────────────────────
	        4⋅L⋅R⋅fₛ⋅i_R        for 
	\Delta i_L
2021-06-22 07:22:05,604
	and found 
	-0.03125⋅(V_c - V_g)⋅(R⋅i_R + V_g) 
	───────────────────────────────────
	                        2          
	       L⋅R⋅\Delta v_C⋅fₛ ⋅i_R      
2021-06-22 07:22:05,642
	sub-ing in 
	-(V_c - V_g)⋅(R⋅i_L + V_g) 
	───────────────────────────
	        4⋅L⋅R⋅fₛ⋅i_L        for 
	\Delta i_L
2021-06-22 07:22:05,643
	and found 
	-0.03125⋅(V_c - V_g)⋅(R⋅i_L + V_g) 
	───────────────────────────────────
	                        2          
	       L⋅R⋅\Delta v_C⋅fₛ ⋅i_L      
2021-06-22 07:22:05,684
	sub-ing in 
	D⋅V_g⋅(D - 1) 
	──────────────
	L⋅fₛ⋅(2⋅D - 1) for 
	\Delta i_L
2021-06-22 07:22:05,685
	and found 
	   0.125⋅D⋅V_g⋅(D - 1)    
	──────────────────────────
	               2          
	L⋅\Delta v_C⋅fₛ ⋅(2⋅D - 1)
2021-06-22 07:22:05,708
	sub-ing in 
	D⋅(-R⋅i_R + V_g)
	────────────────
	     2⋅L⋅fₛ      for 
	\Delta i_L
2021-06-22 07:22:05,709
	and found 
	0.0625⋅D⋅(-R⋅i_R + V_g)
	───────────────────────
	                   2   
	    L⋅\Delta v_C⋅fₛ    
2021-06-22 07:22:05,732
	sub-ing in 
	D⋅(-R⋅i_L + V_g)
	────────────────
	     2⋅L⋅fₛ      for 
	\Delta i_L
2021-06-22 07:22:05,732
	and found 
	0.0625⋅D⋅(-R⋅i_L + V_g)
	───────────────────────
	                   2   
	    L⋅\Delta v_C⋅fₛ    
2021-06-22 07:22:05,753
	sub-ing in 
	D⋅V_c⋅(D - 1)
	─────────────
	     L⋅fₛ     for 
	\Delta i_L
2021-06-22 07:22:05,754
	and found 
	0.125⋅D⋅V_c⋅(D - 1)
	───────────────────
	                 2 
	  L⋅\Delta v_C⋅fₛ  
2021-06-22 07:22:05,755
	recursesym: 
	[\Delta v_C, C, \Delta i_L, D, V_c, V_g, M, L, fₛ, R, i_R, i_L]
2021-06-22 07:22:05,755
	calling solver looking for 
	\Delta v_C
2021-06-22 07:22:05,755
												base case
2021-06-22 07:22:05,755
returning: detla_vC=set()
2021-06-22 07:22:05,755
	recursesym: 
	[\Delta v_C, C, \Delta i_L, D, V_c, V_g, M, L, fₛ, R, i_R, i_L]
2021-06-22 07:22:05,755
	calling solver looking for 
	fₛ
2021-06-22 07:22:05,755
												base case
2021-06-22 07:22:05,756
returning: f_s=OrderedSet([D*(-V_c + V_g)/(2*L*\Delta i_L), 0.125*\Delta i_L/(C*\Delta v_C)])
2021-06-22 07:22:05,778
	sub-ing in 
	D⋅(-V_c + V_g)
	──────────────
	2⋅L⋅\Delta i_L for 
	fₛ
2021-06-22 07:22:05,779
	and found 
	                     2   
	    0.25⋅L⋅\Delta i_L    
	─────────────────────────
	D⋅\Delta v_C⋅(-V_c + V_g)
2021-06-22 07:22:05,782
	sub-ing in 
	0.125⋅\Delta i_L
	────────────────
	  C⋅\Delta v_C   for 
	fₛ
2021-06-22 07:22:05,782
	and found 
	1.0⋅C
2021-06-22 07:22:05,789
end of function, recursesym: {\Delta v_C: set(), C: set(), \Delta i_L: OrderedSet([D*(-V_c + V_g)/(2*L*f_s), 8.0*C*\Delta v_C*f_s, (-V_c**2 + V_g**2)/(4*L*V_c*f_s), -(M + 1)*(V_c - V_g)/(4*L*M*f_s), -(V_c - V_g)*(R*i_R + V_g)/(4*L*R*f_s*i_R), -(V_c - V_g)*(R*i_L + V_g)/(4*L*R*f_s*i_L), D*V_g*(D - 1)/(L*f_s*(2*D - 1)), D*(-R*i_R + V_g)/(2*L*f_s), D*(-R*i_L + V_g)/(2*L*f_s), D*V_c*(D - 1)/(L*f_s)]), D: OrderedSet([(V_c + V_g)/(2*V_c), -2*L*\Delta i_L*f_s/(V_c - V_g), (M + 1)/(2*M), (R*i_R + V_g)/(2*R*i_R), (R*i_L + V_g)/(2*R*i_L), -2*L*\Delta i_L*f_s/(V_g*(M - 1)), -2*L*\Delta i_L*f_s/(R*i_R - V_g), -2*L*\Delta i_L*f_s/(R*i_L - V_g), -2*L*M*\Delta i_L*f_s/(V_c*(M - 1)), -0.25*L*\Delta i_L**2/(C*\Delta v_C*(V_c - V_g))]), V_c: OrderedSet([V_g/(2*D - 1), M*V_g, R*i_R, V_g - 2*L*\Delta i_L*f_s/D, R*i_L, V_g - 0.25*L*\Delta i_L**2/(C*D*\Delta v_C)]), V_g: OrderedSet([V_c*(2*D - 1), V_c/M, V_c + 2*L*\Delta i_L*f_s/D, V_c + 0.25*L*\Delta i_L**2/(C*D*\Delta v_C)]), M: OrderedSet([V_c/V_g]), L: OrderedSet([D*(-V_c + V_g)/(2*\Delta i_L*f_s), 4.0*C*D*\Delta v_C*(-V_c + V_g)/\Delta i_L**2]), f_s: OrderedSet([D*(-V_c + V_g)/(2*L*\Delta i_L), 0.125*\Delta i_L/(C*\Delta v_C)]), R: OrderedSet([V_c/i_R, V_c/i_L]), i_R: OrderedSet([V_c/R, i_L]), i_L: OrderedSet([i_R])}
2021-06-22 07:22:05,793
returning: 
	OrderedSet([0.125*\Delta i_L/(\Delta v_C*f_s), 0.0625*D*(-V_c + V_g)/(L*\Delta
	 v_C*f_s**2), 0.03125*(-V_c**2 + V_g**2)/(L*V_c*\Delta v_C*f_s**2), -0.03125*(
	M + 1)*(V_c - V_g)/(L*M*\Delta v_C*f_s**2), -0.03125*(V_c - V_g)*(R*i_R + V_g)
	/(L*R*\Delta v_C*f_s**2*i_R), -0.03125*(V_c - V_g)*(R*i_L + V_g)/(L*R*\Delta v
	_C*f_s**2*i_L), 0.125*D*V_g*(D - 1)/(L*\Delta v_C*f_s**2*(2*D - 1)), 0.0625*D*
	(-R*i_R + V_g)/(L*\Delta v_C*f_s**2), 0.0625*D*(-R*i_L + V_g)/(L*\Delta v_C*f_
	s**2), 0.125*D*V_c*(D - 1)/(L*\Delta v_C*f_s**2), -0.25*L*\Delta i_L**2/(D*\De
	lta v_C*(V_c - V_g))])
2021-06-22 07:22:05,798
sub-ing in 
0.125⋅\Delta i_L
────────────────
 \Delta v_C⋅fₛ   for 
C
2021-06-22 07:22:05,798
and found 
1.0⋅\Delta v_C
2021-06-22 07:22:05,818
sub-ing in 
0.0625⋅D⋅(-V_c + V_g)
─────────────────────
                  2  
   L⋅\Delta v_C⋅fₛ    for 
C
2021-06-22 07:22:05,818
and found 
2.0⋅L⋅\Delta i_L⋅\Delta v_C⋅fₛ
──────────────────────────────
        D⋅(-V_c + V_g)        
2021-06-22 07:22:05,841
sub-ing in 
        ⎛     2      2⎞
0.03125⋅⎝- V_c  + V_g ⎠
───────────────────────
                     2 
  L⋅V_c⋅\Delta v_C⋅fₛ   for 
C
2021-06-22 07:22:05,841
and found 
4.0⋅L⋅V_c⋅\Delta i_L⋅\Delta v_C⋅fₛ
──────────────────────────────────
               2      2           
          - V_c  + V_g            
2021-06-22 07:22:05,867
sub-ing in 
-0.03125⋅(M + 1)⋅(V_c - V_g) 
─────────────────────────────
                       2     
      L⋅M⋅\Delta v_C⋅fₛ       for 
C
2021-06-22 07:22:05,868
and found 
-4.0⋅L⋅M⋅\Delta i_L⋅\Delta v_C⋅fₛ 
──────────────────────────────────
       (M + 1)⋅(V_c - V_g)        
2021-06-22 07:22:05,898
sub-ing in 
-0.03125⋅(V_c - V_g)⋅(R⋅i_R + V_g) 
───────────────────────────────────
                        2          
       L⋅R⋅\Delta v_C⋅fₛ ⋅i_R       for 
C
2021-06-22 07:22:05,899
and found 
-4.0⋅L⋅R⋅\Delta i_L⋅\Delta v_C⋅fₛ⋅i_R 
──────────────────────────────────────
      (V_c - V_g)⋅(R⋅i_R + V_g)       
2021-06-22 07:22:05,928
sub-ing in 
-0.03125⋅(V_c - V_g)⋅(R⋅i_L + V_g) 
───────────────────────────────────
                        2          
       L⋅R⋅\Delta v_C⋅fₛ ⋅i_L       for 
C
2021-06-22 07:22:05,929
and found 
-4.0⋅L⋅R⋅\Delta i_L⋅\Delta v_C⋅fₛ⋅i_L 
──────────────────────────────────────
      (V_c - V_g)⋅(R⋅i_L + V_g)       
2021-06-22 07:22:05,972
sub-ing in 
   0.125⋅D⋅V_g⋅(D - 1)    
──────────────────────────
               2          
L⋅\Delta v_C⋅fₛ ⋅(2⋅D - 1) for 
C
2021-06-22 07:22:05,973
and found 
1.0⋅L⋅\Delta i_L⋅\Delta v_C⋅fₛ⋅(2⋅D - 1)
────────────────────────────────────────
             D⋅V_g⋅(D - 1)              
2021-06-22 07:22:05,994
sub-ing in 
0.0625⋅D⋅(-R⋅i_R + V_g)
───────────────────────
                   2   
    L⋅\Delta v_C⋅fₛ     for 
C
2021-06-22 07:22:05,995
and found 
2.0⋅L⋅\Delta i_L⋅\Delta v_C⋅fₛ
──────────────────────────────
       D⋅(-R⋅i_R + V_g)       
2021-06-22 07:22:06,016
sub-ing in 
0.0625⋅D⋅(-R⋅i_L + V_g)
───────────────────────
                   2   
    L⋅\Delta v_C⋅fₛ     for 
C
2021-06-22 07:22:06,016
and found 
2.0⋅L⋅\Delta i_L⋅\Delta v_C⋅fₛ
──────────────────────────────
       D⋅(-R⋅i_L + V_g)       
2021-06-22 07:22:06,035
sub-ing in 
0.125⋅D⋅V_c⋅(D - 1)
───────────────────
                 2 
  L⋅\Delta v_C⋅fₛ   for 
C
2021-06-22 07:22:06,036
and found 
1.0⋅L⋅\Delta i_L⋅\Delta v_C⋅fₛ
──────────────────────────────
        D⋅V_c⋅(D - 1)         
2021-06-22 07:22:06,061
sub-ing in 
                    2   
  -0.25⋅L⋅\Delta i_L    
────────────────────────
D⋅\Delta v_C⋅(V_c - V_g) for 
C
2021-06-22 07:22:06,061
and found 
-0.5⋅D⋅\Delta v_C⋅(V_c - V_g) 
──────────────────────────────
       L⋅\Delta i_L⋅fₛ        
2021-06-22 07:22:06,062
recursesym: 
[\Delta v_C, C, \Delta i_L, D, V_c, V_g, M, L, fₛ, R, i_R, i_L]
2021-06-22 07:22:06,062
calling solver looking for 
\Delta i_L
2021-06-22 07:22:06,062
												base case
2021-06-22 07:22:06,065
returning: delta_iL=OrderedSet([D*(-V_c + V_g)/(2*L*f_s), 8.0*C*\Delta v_C*f_s, (-V_c**2 + V_g**2)
/(4*L*V_c*f_s), -(M + 1)*(V_c - V_g)/(4*L*M*f_s), -(V_c - V_g)*(R*i_R + V_g)/(
4*L*R*f_s*i_R), -(V_c - V_g)*(R*i_L + V_g)/(4*L*R*f_s*i_L), D*V_g*(D - 1)/(L*f
_s*(2*D - 1)), D*(-R*i_R + V_g)/(2*L*f_s), D*(-R*i_L + V_g)/(2*L*f_s), D*V_c*(
D - 1)/(L*f_s)])
2021-06-22 07:22:06,089
sub-ing in 
D⋅(-V_c + V_g)
──────────────
    2⋅L⋅fₛ     for 
\Delta i_L
2021-06-22 07:22:06,089
and found 
0.0625⋅D⋅(-V_c + V_g)
─────────────────────
             2       
       C⋅L⋅fₛ        
2021-06-22 07:22:06,093
sub-ing in 
8.0⋅C⋅\Delta v_C⋅fₛ for 
\Delta i_L
2021-06-22 07:22:06,093
and found 
1.0⋅\Delta v_C
2021-06-22 07:22:06,122
sub-ing in 
     2      2
- V_c  + V_g 
─────────────
  4⋅L⋅V_c⋅fₛ  for 
\Delta i_L
2021-06-22 07:22:06,123
and found 
        ⎛     2      2⎞
0.03125⋅⎝- V_c  + V_g ⎠
───────────────────────
                2      
      C⋅L⋅V_c⋅fₛ       
2021-06-22 07:22:06,158
sub-ing in 
-(M + 1)⋅(V_c - V_g) 
─────────────────────
       4⋅L⋅M⋅fₛ       for 
\Delta i_L
2021-06-22 07:22:06,159
and found 
-0.03125⋅(M + 1)⋅(V_c - V_g) 
─────────────────────────────
                  2          
          C⋅L⋅M⋅fₛ           
2021-06-22 07:22:06,194
sub-ing in 
-(V_c - V_g)⋅(R⋅i_R + V_g) 
───────────────────────────
        4⋅L⋅R⋅fₛ⋅i_R        for 
\Delta i_L
2021-06-22 07:22:06,195
and found 
-0.03125⋅(V_c - V_g)⋅(R⋅i_R + V_g) 
───────────────────────────────────
                   2               
           C⋅L⋅R⋅fₛ ⋅i_R           
2021-06-22 07:22:06,229
sub-ing in 
-(V_c - V_g)⋅(R⋅i_L + V_g) 
───────────────────────────
        4⋅L⋅R⋅fₛ⋅i_L        for 
\Delta i_L
2021-06-22 07:22:06,230
and found 
-0.03125⋅(V_c - V_g)⋅(R⋅i_L + V_g) 
───────────────────────────────────
                   2               
           C⋅L⋅R⋅fₛ ⋅i_L           
2021-06-22 07:22:06,270
sub-ing in 
D⋅V_g⋅(D - 1) 
──────────────
L⋅fₛ⋅(2⋅D - 1) for 
\Delta i_L
2021-06-22 07:22:06,271
and found 
0.125⋅D⋅V_g⋅(D - 1)
───────────────────
       2           
 C⋅L⋅fₛ ⋅(2⋅D - 1) 
2021-06-22 07:22:06,293
sub-ing in 
D⋅(-R⋅i_R + V_g)
────────────────
     2⋅L⋅fₛ      for 
\Delta i_L
2021-06-22 07:22:06,293
and found 
0.0625⋅D⋅(-R⋅i_R + V_g)
───────────────────────
              2        
        C⋅L⋅fₛ         
2021-06-22 07:22:06,315
sub-ing in 
D⋅(-R⋅i_L + V_g)
────────────────
     2⋅L⋅fₛ      for 
\Delta i_L
2021-06-22 07:22:06,315
and found 
0.0625⋅D⋅(-R⋅i_L + V_g)
───────────────────────
              2        
        C⋅L⋅fₛ         
2021-06-22 07:22:06,335
sub-ing in 
D⋅V_c⋅(D - 1)
─────────────
     L⋅fₛ     for 
\Delta i_L
2021-06-22 07:22:06,336
and found 
0.125⋅D⋅V_c⋅(D - 1)
───────────────────
            2      
      C⋅L⋅fₛ       
2021-06-22 07:22:06,336
recursesym: 
[\Delta v_C, C, \Delta i_L, D, V_c, V_g, M, L, fₛ, R, i_R, i_L]
2021-06-22 07:22:06,336
calling solver looking for 
fₛ
2021-06-22 07:22:06,336
												base case
2021-06-22 07:22:06,337
returning: f_s=OrderedSet([D*(-V_c + V_g)/(2*L*\Delta i_L), 0.125*\Delta i_L/(C*\Delta v_C)])
2021-06-22 07:22:06,359
sub-ing in 
D⋅(-V_c + V_g)
──────────────
2⋅L⋅\Delta i_L for 
fₛ
2021-06-22 07:22:06,360
and found 
                 2
0.25⋅L⋅\Delta i_L 
──────────────────
 C⋅D⋅(-V_c + V_g) 
2021-06-22 07:22:06,365
sub-ing in 
0.125⋅\Delta i_L
────────────────
  C⋅\Delta v_C   for 
fₛ
2021-06-22 07:22:06,366
and found 
1.0⋅\Delta v_C
2021-06-22 07:22:06,379
end of function, recursesym: {\Delta v_C: set(), C: OrderedSet([0.125*\Delta i_L/(\Delta v_C*f_s), 0.0625*D*(-V_c + V_g)/(L*\Delta v_C*f_s**2), 0.03125*(-V_c**2 + V_g**2)/(L*V_c*\Delta v_C*f_s**2), -0.03125*(M + 1)*(V_c - V_g)/(L*M*\Delta v_C*f_s**2), -0.03125*(V_c - V_g)*(R*i_R + V_g)/(L*R*\Delta v_C*f_s**2*i_R), -0.03125*(V_c - V_g)*(R*i_L + V_g)/(L*R*\Delta v_C*f_s**2*i_L), 0.125*D*V_g*(D - 1)/(L*\Delta v_C*f_s**2*(2*D - 1)), 0.0625*D*(-R*i_R + V_g)/(L*\Delta v_C*f_s**2), 0.0625*D*(-R*i_L + V_g)/(L*\Delta v_C*f_s**2), 0.125*D*V_c*(D - 1)/(L*\Delta v_C*f_s**2), -0.25*L*\Delta i_L**2/(D*\Delta v_C*(V_c - V_g))]), \Delta i_L: OrderedSet([D*(-V_c + V_g)/(2*L*f_s), 8.0*C*\Delta v_C*f_s, (-V_c**2 + V_g**2)/(4*L*V_c*f_s), -(M + 1)*(V_c - V_g)/(4*L*M*f_s), -(V_c - V_g)*(R*i_R + V_g)/(4*L*R*f_s*i_R), -(V_c - V_g)*(R*i_L + V_g)/(4*L*R*f_s*i_L), D*V_g*(D - 1)/(L*f_s*(2*D - 1)), D*(-R*i_R + V_g)/(2*L*f_s), D*(-R*i_L + V_g)/(2*L*f_s), D*V_c*(D - 1)/(L*f_s)]), D: OrderedSet([(V_c + V_g)/(2*V_c), -2*L*\Delta i_L*f_s/(V_c - V_g), (M + 1)/(2*M), (R*i_R + V_g)/(2*R*i_R), (R*i_L + V_g)/(2*R*i_L), -2*L*\Delta i_L*f_s/(V_g*(M - 1)), -2*L*\Delta i_L*f_s/(R*i_R - V_g), -2*L*\Delta i_L*f_s/(R*i_L - V_g), -2*L*M*\Delta i_L*f_s/(V_c*(M - 1)), -0.25*L*\Delta i_L**2/(C*\Delta v_C*(V_c - V_g))]), V_c: OrderedSet([V_g/(2*D - 1), M*V_g, R*i_R, V_g - 2*L*\Delta i_L*f_s/D, R*i_L, V_g - 0.25*L*\Delta i_L**2/(C*D*\Delta v_C)]), V_g: OrderedSet([V_c*(2*D - 1), V_c/M, V_c + 2*L*\Delta i_L*f_s/D, V_c + 0.25*L*\Delta i_L**2/(C*D*\Delta v_C)]), M: OrderedSet([V_c/V_g]), L: OrderedSet([D*(-V_c + V_g)/(2*\Delta i_L*f_s), 4.0*C*D*\Delta v_C*(-V_c + V_g)/\Delta i_L**2]), f_s: OrderedSet([D*(-V_c + V_g)/(2*L*\Delta i_L), 0.125*\Delta i_L/(C*\Delta v_C)]), R: OrderedSet([V_c/i_R, V_c/i_L]), i_R: OrderedSet([V_c/R, i_L]), i_L: OrderedSet([i_R])}
2021-06-22 07:22:06,384
returning: 
OrderedSet([0.125*\Delta i_L/(C*f_s), 0.0625*D*(-V_c + V_g)/(C*L*f_s**2), 0.03
125*(-V_c**2 + V_g**2)/(C*L*V_c*f_s**2), -0.03125*(M + 1)*(V_c - V_g)/(C*L*M*f
_s**2), -0.03125*(V_c - V_g)*(R*i_R + V_g)/(C*L*R*f_s**2*i_R), -0.03125*(V_c -
 V_g)*(R*i_L + V_g)/(C*L*R*f_s**2*i_L), 0.125*D*V_g*(D - 1)/(C*L*f_s**2*(2*D -
 1)), 0.0625*D*(-R*i_R + V_g)/(C*L*f_s**2), 0.0625*D*(-R*i_L + V_g)/(C*L*f_s**
2), 0.125*D*V_c*(D - 1)/(C*L*f_s**2), -0.25*L*\Delta i_L**2/(C*D*(V_c - V_g))]
)
2021-06-22 07:22:28,257
adding V_c to []
2021-06-22 07:22:28,265
looking for 
V_c
2021-06-22 07:22:28,389
nonlinsolve returns: 
R⋅i_R
2021-06-22 07:22:28,399

D⋅(-V_c + V_g) + (1 - D)⋅(V_c + V_g) solved for 
V_c=
⎧  V_g  ⎫
⎨───────⎬
⎩2⋅D - 1⎭
2021-06-22 07:22:28,406

    V_c
M - ───
    V_g solved for 
V_c=
{M⋅V_g}
2021-06-22 07:22:28,410

       V_c
-i_R + ───
        R  solved for 
V_c=
{R⋅i_R}
2021-06-22 07:22:28,412

i_L - i_R solved for 
V_c=
∅
2021-06-22 07:22:28,417

  D⋅(-V_c + V_g)               
- ────────────── + 2⋅\Delta i_L
       L⋅fₛ                     solved for 
V_c=
⎧      2⋅L⋅\Delta i_L⋅fₛ⎫
⎨V_g - ─────────────────⎬
⎩              D        ⎭
2021-06-22 07:22:28,429

                 0.25⋅\Delta i_L
2⋅C⋅\Delta v_C - ───────────────
                        fₛ       solved for 
V_c=
∅
2021-06-22 07:22:28,429
Done with 
V_c
2021-06-22 07:22:28,430
so far V_c = 
OrderedSet([V_g/(2*D - 1), M*V_g, R*i_R, V_g - 2*L*\Delta i_L*f_s/D])
2021-06-22 07:22:28,430
solution to V_c is: 
  V_g  
───────
2⋅D - 1 
2021-06-22 07:22:28,430
recursesym: 
[V_c]
2021-06-22 07:22:28,430
calling solver looking for 
D
2021-06-22 07:22:28,430
	adding D to [V_c]
2021-06-22 07:22:28,430
looking for 
D
2021-06-22 07:22:28,496
nonlinsolve returns: 
V_c + V_g
─────────
  2⋅V_c  
2021-06-22 07:22:28,505

D⋅(-V_c + V_g) + (1 - D)⋅(V_c + V_g) solved for 
D=
⎧V_c + V_g⎫
⎨─────────⎬
⎩  2⋅V_c  ⎭
2021-06-22 07:22:28,511

    V_c
M - ───
    V_g solved for 
D=
∅
2021-06-22 07:22:28,512

       V_c
-i_R + ───
        R  solved for 
D=
∅
2021-06-22 07:22:28,513

i_L - i_R solved for 
D=
∅
2021-06-22 07:22:28,517

  D⋅(-V_c + V_g)               
- ────────────── + 2⋅\Delta i_L
       L⋅fₛ                     solved for 
D=
⎧-2⋅L⋅\Delta i_L⋅fₛ ⎫
⎨───────────────────⎬
⎩     V_c - V_g     ⎭
2021-06-22 07:22:28,525

                 0.25⋅\Delta i_L
2⋅C⋅\Delta v_C - ───────────────
                        fₛ       solved for 
D=
∅
2021-06-22 07:22:28,525
	Done with 
D
2021-06-22 07:22:28,525
	so far D = 
	OrderedSet([(V_c + V_g)/(2*V_c), -2*L*\Delta i_L*f_s/(V_c - V_g)])
2021-06-22 07:22:28,526
	solution to D is: 
	V_c + V_g
	─────────
	  2⋅V_c   
2021-06-22 07:22:28,526
	recursesym: 
	[V_c, D]
2021-06-22 07:22:28,526
	calling solver looking for 
	V_c
2021-06-22 07:22:28,526
		base case
2021-06-22 07:22:28,526
returning: V_c=set()
2021-06-22 07:22:28,526
	recursesym: 
	[V_c, D]
2021-06-22 07:22:28,526
	calling solver looking for 
	V_g
2021-06-22 07:22:28,526
		adding V_g to [V_c, D]
2021-06-22 07:22:28,526
looking for 
V_g
2021-06-22 07:22:28,636
nonlinsolve returns: 
V_c
───
 M 
2021-06-22 07:22:28,646

D⋅(-V_c + V_g) + (1 - D)⋅(V_c + V_g) solved for 
V_g=
{V_c⋅(2⋅D - 1)}
2021-06-22 07:22:28,663

    V_c
M - ───
    V_g solved for 
V_g=
⎧V_c⎫      
⎨───⎬ \ {0}
⎩ M ⎭      
2021-06-22 07:22:28,669

       V_c
-i_R + ───
        R  solved for 
V_g=
∅
2021-06-22 07:22:28,670

i_L - i_R solved for 
V_g=
∅
2021-06-22 07:22:28,675

  D⋅(-V_c + V_g)               
- ────────────── + 2⋅\Delta i_L
       L⋅fₛ                     solved for 
V_g=
⎧      2⋅L⋅\Delta i_L⋅fₛ⎫
⎨V_c + ─────────────────⎬
⎩              D        ⎭
2021-06-22 07:22:28,686

                 0.25⋅\Delta i_L
2⋅C⋅\Delta v_C - ───────────────
                        fₛ       solved for 
V_g=
∅
2021-06-22 07:22:28,686
		Done with 
V_g
2021-06-22 07:22:28,687
		so far V_g = 
		OrderedSet([V_c*(2*D - 1), V_c/M, V_c + 2*L*\Delta i_L*f_s/D])
2021-06-22 07:22:28,687
		solution to V_g is: 
		V_c⋅(2⋅D - 1) 
2021-06-22 07:22:28,687
		recursesym: 
		[V_c, D, V_g]
2021-06-22 07:22:28,687
		calling solver looking for 
		D
2021-06-22 07:22:28,687
			base case
2021-06-22 07:22:28,687
returning: D=set()
2021-06-22 07:22:28,687
		recursesym: 
		[V_c, D, V_g]
2021-06-22 07:22:28,688
		calling solver looking for 
		V_c
2021-06-22 07:22:28,688
			base case
2021-06-22 07:22:28,688
returning: V_c=set()
2021-06-22 07:22:28,688
		solution to V_g is: 
		V_c
		───
		 M  
2021-06-22 07:22:28,688
		recursesym: 
		[V_c, D, V_g]
2021-06-22 07:22:28,688
		calling solver looking for 
		M
2021-06-22 07:22:28,688
			adding M to [V_c, D, V_g]
2021-06-22 07:22:28,688
looking for 
M
2021-06-22 07:22:28,786
nonlinsolve returns: 
V_c
───
V_g
2021-06-22 07:22:28,788

D⋅(-V_c + V_g) + (1 - D)⋅(V_c + V_g) solved for 
M=
∅
2021-06-22 07:22:28,789

    V_c
M - ───
    V_g solved for 
M=
⎧V_c⎫
⎨───⎬
⎩V_g⎭
2021-06-22 07:22:28,792

       V_c
-i_R + ───
        R  solved for 
M=
∅
2021-06-22 07:22:28,793

i_L - i_R solved for 
M=
∅
2021-06-22 07:22:28,794

  D⋅(-V_c + V_g)               
- ────────────── + 2⋅\Delta i_L
       L⋅fₛ                     solved for 
M=
∅
2021-06-22 07:22:28,795

                 0.25⋅\Delta i_L
2⋅C⋅\Delta v_C - ───────────────
                        fₛ       solved for 
M=
∅
2021-06-22 07:22:28,795
			Done with 
M
2021-06-22 07:22:28,795
			so far M = 
			OrderedSet([V_c/V_g])
2021-06-22 07:22:28,796
			solution to M is: 
			V_c
			───
			V_g 
2021-06-22 07:22:28,796
			recursesym: 
			[V_c, D, V_g, M]
2021-06-22 07:22:28,796
			calling solver looking for 
			V_c
2021-06-22 07:22:28,796
				base case
2021-06-22 07:22:28,796
returning: V_c=set()
2021-06-22 07:22:28,796
			recursesym: 
			[V_c, D, V_g, M]
2021-06-22 07:22:28,796
			calling solver looking for 
			V_g
2021-06-22 07:22:28,796
				base case
2021-06-22 07:22:28,796
returning: V_g=set()
2021-06-22 07:22:28,796
end of function, recursesym: {V_c: set(), D: set(), V_g: set(), M: set()}
2021-06-22 07:22:28,796
returning: 
			OrderedSet([V_c/V_g])
2021-06-22 07:22:28,797
		sub-ing in 
		V_c
		───
		V_g for 
		M
2021-06-22 07:22:28,797
		and found 
		V_g
2021-06-22 07:22:28,797
		recursesym: 
		[V_c, D, V_g, M]
2021-06-22 07:22:28,797
		calling solver looking for 
		V_c
2021-06-22 07:22:28,797
				base case
2021-06-22 07:22:28,797
returning: V_c=set()
2021-06-22 07:22:28,797
		solution to V_g is: 
		      2⋅L⋅\Delta i_L⋅fₛ
		V_c + ─────────────────
		              D         
2021-06-22 07:22:28,798
		recursesym: 
		[V_c, D, V_g, M]
2021-06-22 07:22:28,798
		calling solver looking for 
		D
2021-06-22 07:22:28,798
				base case
2021-06-22 07:22:28,798
returning: D=set()
2021-06-22 07:22:28,798
		recursesym: 
		[V_c, D, V_g, M]
2021-06-22 07:22:28,798
		calling solver looking for 
		L
2021-06-22 07:22:28,798
				adding L to [V_c, D, V_g, M]
2021-06-22 07:22:28,798
looking for 
L
2021-06-22 07:22:28,914
nonlinsolve returns: 
 D⋅(-V_c + V_g)
───────────────
2⋅\Delta i_L⋅fₛ
2021-06-22 07:22:28,915

D⋅(-V_c + V_g) + (1 - D)⋅(V_c + V_g) solved for 
L=
∅
2021-06-22 07:22:28,916

    V_c
M - ───
    V_g solved for 
L=
∅
2021-06-22 07:22:28,916

       V_c
-i_R + ───
        R  solved for 
L=
∅
2021-06-22 07:22:28,917

i_L - i_R solved for 
L=
∅
2021-06-22 07:22:28,927

  D⋅(-V_c + V_g)               
- ────────────── + 2⋅\Delta i_L
       L⋅fₛ                     solved for 
L=
⎧-D⋅(V_c - V_g) ⎫      
⎨───────────────⎬ \ {0}
⎩2⋅\Delta i_L⋅fₛ⎭      
2021-06-22 07:22:28,935

                 0.25⋅\Delta i_L
2⋅C⋅\Delta v_C - ───────────────
                        fₛ       solved for 
L=
∅
2021-06-22 07:22:28,935
				Done with 
L
2021-06-22 07:22:28,935
				so far L = 
				OrderedSet([D*(-V_c + V_g)/(2*\Delta i_L*f_s)])
2021-06-22 07:22:28,936
				solution to L is: 
				 D⋅(-V_c + V_g)
				───────────────
				2⋅\Delta i_L⋅fₛ 
2021-06-22 07:22:28,936
				recursesym: 
				[V_c, D, V_g, M, L]
2021-06-22 07:22:28,936
				calling solver looking for 
				D
2021-06-22 07:22:28,936
					base case
2021-06-22 07:22:28,936
returning: D=set()
2021-06-22 07:22:28,936
				recursesym: 
				[V_c, D, V_g, M, L]
2021-06-22 07:22:28,937
				calling solver looking for 
				V_c
2021-06-22 07:22:28,937
					base case
2021-06-22 07:22:28,937
returning: V_c=set()
2021-06-22 07:22:28,937
				recursesym: 
				[V_c, D, V_g, M, L]
2021-06-22 07:22:28,937
				calling solver looking for 
				V_g
2021-06-22 07:22:28,937
					base case
2021-06-22 07:22:28,937
returning: V_g=set()
2021-06-22 07:22:28,937
				recursesym: 
				[V_c, D, V_g, M, L]
2021-06-22 07:22:28,937
				calling solver looking for 
				\Delta i_L
2021-06-22 07:22:28,937
					adding delta_iL to [V_c, D, V_g, M, L]
2021-06-22 07:22:28,937
looking for 
\Delta i_L
2021-06-22 07:22:29,000
nonlinsolve returns: 
8.0⋅C⋅\Delta v_C⋅fₛ
2021-06-22 07:22:29,002

D⋅(-V_c + V_g) + (1 - D)⋅(V_c + V_g) solved for 
\Delta i_L=
∅
2021-06-22 07:22:29,002

    V_c
M - ───
    V_g solved for 
\Delta i_L=
∅
2021-06-22 07:22:29,003

       V_c
-i_R + ───
        R  solved for 
\Delta i_L=
∅
2021-06-22 07:22:29,003

i_L - i_R solved for 
\Delta i_L=
∅
2021-06-22 07:22:29,008

  D⋅(-V_c + V_g)               
- ────────────── + 2⋅\Delta i_L
       L⋅fₛ                     solved for 
\Delta i_L=
⎧-D⋅(V_c - V_g) ⎫
⎨───────────────⎬
⎩     2⋅L⋅fₛ    ⎭
2021-06-22 07:22:29,021

                 0.25⋅\Delta i_L
2⋅C⋅\Delta v_C - ───────────────
                        fₛ       solved for 
\Delta i_L=
{8.0⋅C⋅\Delta v_C⋅fₛ}
2021-06-22 07:22:29,025
					Done with 
\Delta i_L
2021-06-22 07:22:29,025
					so far delta_iL = 
					OrderedSet([D*(-V_c + V_g)/(2*L*f_s), 8.0*C*\Delta v_C*f_s])
2021-06-22 07:22:29,026
					solution to delta_iL is: 
					D⋅(-V_c + V_g)
					──────────────
					    2⋅L⋅fₛ     
2021-06-22 07:22:29,026
					recursesym: 
					[V_c, D, V_g, M, L, \Delta i_L]
2021-06-22 07:22:29,026
					calling solver looking for 
					D
2021-06-22 07:22:29,026
						base case
2021-06-22 07:22:29,026
returning: D=set()
2021-06-22 07:22:29,026
					recursesym: 
					[V_c, D, V_g, M, L, \Delta i_L]
2021-06-22 07:22:29,026
					calling solver looking for 
					L
2021-06-22 07:22:29,026
						base case
2021-06-22 07:22:29,026
returning: L=set()
2021-06-22 07:22:29,027
					recursesym: 
					[V_c, D, V_g, M, L, \Delta i_L]
2021-06-22 07:22:29,027
					calling solver looking for 
					V_c
2021-06-22 07:22:29,027
						base case
2021-06-22 07:22:29,027
returning: V_c=set()
2021-06-22 07:22:29,027
					recursesym: 
					[V_c, D, V_g, M, L, \Delta i_L]
2021-06-22 07:22:29,027
					calling solver looking for 
					V_g
2021-06-22 07:22:29,027
						base case
2021-06-22 07:22:29,027
returning: V_g=set()
2021-06-22 07:22:29,027
					recursesym: 
					[V_c, D, V_g, M, L, \Delta i_L]
2021-06-22 07:22:29,027
					calling solver looking for 
					fₛ
2021-06-22 07:22:29,028
						adding f_s to [V_c, D, V_g, M, L, \Delta i_L]
2021-06-22 07:22:29,028
looking for 
fₛ
2021-06-22 07:22:29,198
nonlinsolve returns: 
0.125⋅\Delta i_L
────────────────
  C⋅\Delta v_C  
2021-06-22 07:22:29,199

D⋅(-V_c + V_g) + (1 - D)⋅(V_c + V_g) solved for 
fₛ=
∅
2021-06-22 07:22:29,200

    V_c
M - ───
    V_g solved for 
fₛ=
∅
2021-06-22 07:22:29,200

       V_c
-i_R + ───
        R  solved for 
fₛ=
∅
2021-06-22 07:22:29,201

i_L - i_R solved for 
fₛ=
∅
2021-06-22 07:22:29,213

  D⋅(-V_c + V_g)               
- ────────────── + 2⋅\Delta i_L
       L⋅fₛ                     solved for 
fₛ=
⎧-D⋅(V_c - V_g) ⎫      
⎨───────────────⎬ \ {0}
⎩ 2⋅L⋅\Delta i_L⎭      
2021-06-22 07:22:29,234

                 0.25⋅\Delta i_L
2⋅C⋅\Delta v_C - ───────────────
                        fₛ       solved for 
fₛ=
⎧0.125⋅\Delta i_L⎫      
⎨────────────────⎬ \ {0}
⎩  C⋅\Delta v_C  ⎭      
2021-06-22 07:22:29,238
						Done with 
fₛ
2021-06-22 07:22:29,238
						so far f_s = 
						OrderedSet([D*(-V_c + V_g)/(2*L*\Delta i_L), 0.125*\Delta i_L/(C*\Delta v_C)])
2021-06-22 07:22:29,239
						solution to f_s is: 
						D⋅(-V_c + V_g)
						──────────────
						2⋅L⋅\Delta i_L 
2021-06-22 07:22:29,239
						recursesym: 
						[V_c, D, V_g, M, L, \Delta i_L, fₛ]
2021-06-22 07:22:29,239
						calling solver looking for 
						D
2021-06-22 07:22:29,239
							base case
2021-06-22 07:22:29,239
returning: D=set()
2021-06-22 07:22:29,239
						recursesym: 
						[V_c, D, V_g, M, L, \Delta i_L, fₛ]
2021-06-22 07:22:29,239
						calling solver looking for 
						L
2021-06-22 07:22:29,240
							base case
2021-06-22 07:22:29,240
returning: L=set()
2021-06-22 07:22:29,240
						recursesym: 
						[V_c, D, V_g, M, L, \Delta i_L, fₛ]
2021-06-22 07:22:29,240
						calling solver looking for 
						V_c
2021-06-22 07:22:29,240
							base case
2021-06-22 07:22:29,240
returning: V_c=set()
2021-06-22 07:22:29,240
						recursesym: 
						[V_c, D, V_g, M, L, \Delta i_L, fₛ]
2021-06-22 07:22:29,240
						calling solver looking for 
						V_g
2021-06-22 07:22:29,240
							base case
2021-06-22 07:22:29,240
returning: V_g=set()
2021-06-22 07:22:29,241
						recursesym: 
						[V_c, D, V_g, M, L, \Delta i_L, fₛ]
2021-06-22 07:22:29,241
						calling solver looking for 
						\Delta i_L
2021-06-22 07:22:29,241
							base case
2021-06-22 07:22:29,241
returning: delta_iL=set()
2021-06-22 07:22:29,241
						solution to f_s is: 
						0.125⋅\Delta i_L
						────────────────
						  C⋅\Delta v_C   
2021-06-22 07:22:29,241
						recursesym: 
						[V_c, D, V_g, M, L, \Delta i_L, fₛ]
2021-06-22 07:22:29,241
						calling solver looking for 
						C
2021-06-22 07:22:29,241
							adding C to [V_c, D, V_g, M, L, \Delta i_L, f_s]
2021-06-22 07:22:29,241
looking for 
C
2021-06-22 07:22:29,308
nonlinsolve returns: 
0.125⋅\Delta i_L
────────────────
 \Delta v_C⋅fₛ  
2021-06-22 07:22:29,309

D⋅(-V_c + V_g) + (1 - D)⋅(V_c + V_g) solved for 
C=
∅
2021-06-22 07:22:29,310

    V_c
M - ───
    V_g solved for 
C=
∅
2021-06-22 07:22:29,311

       V_c
-i_R + ───
        R  solved for 
C=
∅
2021-06-22 07:22:29,311

i_L - i_R solved for 
C=
∅
2021-06-22 07:22:29,312

  D⋅(-V_c + V_g)               
- ────────────── + 2⋅\Delta i_L
       L⋅fₛ                     solved for 
C=
∅
2021-06-22 07:22:29,317

                 0.25⋅\Delta i_L
2⋅C⋅\Delta v_C - ───────────────
                        fₛ       solved for 
C=
⎧0.125⋅\Delta i_L⎫
⎨────────────────⎬
⎩ \Delta v_C⋅fₛ  ⎭
2021-06-22 07:22:29,324
							Done with 
C
2021-06-22 07:22:29,325
							so far C = 
							OrderedSet([0.125*\Delta i_L/(\Delta v_C*f_s)])
2021-06-22 07:22:29,325
							solution to C is: 
							0.125⋅\Delta i_L
							────────────────
							 \Delta v_C⋅fₛ   
2021-06-22 07:22:29,326
							recursesym: 
							[V_c, D, V_g, M, L, \Delta i_L, fₛ, C]
2021-06-22 07:22:29,326
							calling solver looking for 
							\Delta i_L
2021-06-22 07:22:29,326
								base case
2021-06-22 07:22:29,326
returning: delta_iL=set()
2021-06-22 07:22:29,326
							recursesym: 
							[V_c, D, V_g, M, L, \Delta i_L, fₛ, C]
2021-06-22 07:22:29,326
							calling solver looking for 
							\Delta v_C
2021-06-22 07:22:29,327
								adding detla_vC to [V_c, D, V_g, M, L, \Delta i_L, f_s, C]
2021-06-22 07:22:29,327
looking for 
\Delta v_C
2021-06-22 07:22:29,389
nonlinsolve returns: 
0.125⋅\Delta i_L
────────────────
      C⋅fₛ      
2021-06-22 07:22:29,390

D⋅(-V_c + V_g) + (1 - D)⋅(V_c + V_g) solved for 
\Delta v_C=
∅
2021-06-22 07:22:29,390

    V_c
M - ───
    V_g solved for 
\Delta v_C=
∅
2021-06-22 07:22:29,391

       V_c
-i_R + ───
        R  solved for 
\Delta v_C=
∅
2021-06-22 07:22:29,391

i_L - i_R solved for 
\Delta v_C=
∅
2021-06-22 07:22:29,392

  D⋅(-V_c + V_g)               
- ────────────── + 2⋅\Delta i_L
       L⋅fₛ                     solved for 
\Delta v_C=
∅
2021-06-22 07:22:29,395

                 0.25⋅\Delta i_L
2⋅C⋅\Delta v_C - ───────────────
                        fₛ       solved for 
\Delta v_C=
⎧0.125⋅\Delta i_L⎫
⎨────────────────⎬
⎩      C⋅fₛ      ⎭
2021-06-22 07:22:29,401
								Done with 
\Delta v_C
2021-06-22 07:22:29,401
								so far detla_vC = 
								OrderedSet([0.125*\Delta i_L/(C*f_s)])
2021-06-22 07:22:29,401
								solution to detla_vC is: 
								0.125⋅\Delta i_L
								────────────────
								      C⋅fₛ       
2021-06-22 07:22:29,401
								recursesym: 
								[V_c, D, V_g, M, L, \Delta i_L, fₛ, C, \Delta v_C]
2021-06-22 07:22:29,401
								calling solver looking for 
								C
2021-06-22 07:22:29,402
									base case
2021-06-22 07:22:29,402
returning: C=set()
2021-06-22 07:22:29,402
								recursesym: 
								[V_c, D, V_g, M, L, \Delta i_L, fₛ, C, \Delta v_C]
2021-06-22 07:22:29,402
								calling solver looking for 
								\Delta i_L
2021-06-22 07:22:29,402
									base case
2021-06-22 07:22:29,402
returning: delta_iL=set()
2021-06-22 07:22:29,402
								recursesym: 
								[V_c, D, V_g, M, L, \Delta i_L, fₛ, C, \Delta v_C]
2021-06-22 07:22:29,402
								calling solver looking for 
								fₛ
2021-06-22 07:22:29,403
									base case
2021-06-22 07:22:29,403
returning: f_s=set()
2021-06-22 07:22:29,403
end of function, recursesym: {V_c: set(), D: set(), V_g: set(), M: OrderedSet([V_c/V_g]), L: set(), \Delta i_L: set(), f_s: set(), C: set(), \Delta v_C: set()}
2021-06-22 07:22:29,403
returning: 
								OrderedSet([0.125*\Delta i_L/(C*f_s)])
2021-06-22 07:22:29,407
							sub-ing in 
							0.125⋅\Delta i_L
							────────────────
							      C⋅fₛ       for 
							\Delta v_C
2021-06-22 07:22:29,407
							and found 
							1.0⋅C
2021-06-22 07:22:29,407
							recursesym: 
							[V_c, D, V_g, M, L, \Delta i_L, fₛ, C, \Delta v_C]
2021-06-22 07:22:29,407
							calling solver looking for 
							fₛ
2021-06-22 07:22:29,407
									base case
2021-06-22 07:22:29,407
returning: f_s=set()
2021-06-22 07:22:29,407
end of function, recursesym: {V_c: set(), D: set(), V_g: set(), M: OrderedSet([V_c/V_g]), L: set(), \Delta i_L: set(), f_s: set(), C: set(), \Delta v_C: OrderedSet([0.125*\Delta i_L/(C*f_s)])}
2021-06-22 07:22:29,408
returning: 
							OrderedSet([0.125*\Delta i_L/(\Delta v_C*f_s)])
2021-06-22 07:22:29,411
						sub-ing in 
						0.125⋅\Delta i_L
						────────────────
						 \Delta v_C⋅fₛ   for 
						C
2021-06-22 07:22:29,411
						and found 
						1.0⋅fₛ
2021-06-22 07:22:29,412
						recursesym: 
						[V_c, D, V_g, M, L, \Delta i_L, fₛ, C, \Delta v_C]
2021-06-22 07:22:29,412
						calling solver looking for 
						\Delta i_L
2021-06-22 07:22:29,412
									base case
2021-06-22 07:22:29,412
returning: delta_iL=set()
2021-06-22 07:22:29,412
						recursesym: 
						[V_c, D, V_g, M, L, \Delta i_L, fₛ, C, \Delta v_C]
2021-06-22 07:22:29,412
						calling solver looking for 
						\Delta v_C
2021-06-22 07:22:29,412
									base case
2021-06-22 07:22:29,412
returning: detla_vC=OrderedSet([0.125*\Delta i_L/(C*f_s)])
2021-06-22 07:22:29,415
						sub-ing in 
						0.125⋅\Delta i_L
						────────────────
						      C⋅fₛ       for 
						\Delta v_C
2021-06-22 07:22:29,415
						and found 
						1.0⋅fₛ
2021-06-22 07:22:29,416
end of function, recursesym: {V_c: set(), D: set(), V_g: set(), M: OrderedSet([V_c/V_g]), L: set(), \Delta i_L: set(), f_s: set(), C: OrderedSet([0.125*\Delta i_L/(\Delta v_C*f_s)]), \Delta v_C: OrderedSet([0.125*\Delta i_L/(C*f_s)])}
2021-06-22 07:22:29,416
returning: 
						OrderedSet([D*(-V_c + V_g)/(2*L*\Delta i_L), 0.125*\Delta i_L/(C*\Delta v_C)])
2021-06-22 07:22:29,416
					sub-ing in 
					D⋅(-V_c + V_g)
					──────────────
					2⋅L⋅\Delta i_L for 
					fₛ
2021-06-22 07:22:29,417
					and found 
					\Delta i_L
2021-06-22 07:22:29,434
					sub-ing in 
					0.125⋅\Delta i_L
					────────────────
					  C⋅\Delta v_C   for 
					fₛ
2021-06-22 07:22:29,435
					and found 
					4.0⋅C⋅D⋅\Delta v_C⋅(-V_c + V_g)
					───────────────────────────────
					          L⋅\Delta i_L         
2021-06-22 07:22:29,435
					solution to delta_iL is: 
					8.0⋅C⋅\Delta v_C⋅fₛ 
2021-06-22 07:22:29,435
					recursesym: 
					[V_c, D, V_g, M, L, \Delta i_L, fₛ, C, \Delta v_C]
2021-06-22 07:22:29,436
					calling solver looking for 
					C
2021-06-22 07:22:29,436
									base case
2021-06-22 07:22:29,436
returning: C=OrderedSet([0.125*\Delta i_L/(\Delta v_C*f_s)])
2021-06-22 07:22:29,439
					sub-ing in 
					0.125⋅\Delta i_L
					────────────────
					 \Delta v_C⋅fₛ   for 
					C
2021-06-22 07:22:29,439
					and found 
					1.0⋅\Delta i_L
2021-06-22 07:22:29,440
					recursesym: 
					[V_c, D, V_g, M, L, \Delta i_L, fₛ, C, \Delta v_C]
2021-06-22 07:22:29,440
					calling solver looking for 
					\Delta v_C
2021-06-22 07:22:29,440
									base case
2021-06-22 07:22:29,440
returning: detla_vC=OrderedSet([0.125*\Delta i_L/(C*f_s)])
2021-06-22 07:22:29,442
					sub-ing in 
					0.125⋅\Delta i_L
					────────────────
					      C⋅fₛ       for 
					\Delta v_C
2021-06-22 07:22:29,442
					and found 
					1.0⋅\Delta i_L
2021-06-22 07:22:29,443
					recursesym: 
					[V_c, D, V_g, M, L, \Delta i_L, fₛ, C, \Delta v_C]
2021-06-22 07:22:29,443
					calling solver looking for 
					fₛ
2021-06-22 07:22:29,443
									base case
2021-06-22 07:22:29,443
returning: f_s=OrderedSet([D*(-V_c + V_g)/(2*L*\Delta i_L), 0.125*\Delta i_L/(C*\Delta v_C)])
2021-06-22 07:22:29,453
					sub-ing in 
					D⋅(-V_c + V_g)
					──────────────
					2⋅L⋅\Delta i_L for 
					fₛ
2021-06-22 07:22:29,454
					and found 
					4.0⋅C⋅D⋅\Delta v_C⋅(-V_c + V_g)
					───────────────────────────────
					          L⋅\Delta i_L         
2021-06-22 07:22:29,456
					sub-ing in 
					0.125⋅\Delta i_L
					────────────────
					  C⋅\Delta v_C   for 
					fₛ
2021-06-22 07:22:29,456
					and found 
					1.0⋅\Delta i_L
2021-06-22 07:22:29,457
end of function, recursesym: {V_c: set(), D: set(), V_g: set(), M: OrderedSet([V_c/V_g]), L: set(), \Delta i_L: set(), f_s: OrderedSet([D*(-V_c + V_g)/(2*L*\Delta i_L), 0.125*\Delta i_L/(C*\Delta v_C)]), C: OrderedSet([0.125*\Delta i_L/(\Delta v_C*f_s)]), \Delta v_C: OrderedSet([0.125*\Delta i_L/(C*f_s)])}
2021-06-22 07:22:29,457
returning: 
					OrderedSet([D*(-V_c + V_g)/(2*L*f_s), 8.0*C*\Delta v_C*f_s])
2021-06-22 07:22:29,458
				sub-ing in 
				D⋅(-V_c + V_g)
				──────────────
				    2⋅L⋅fₛ     for 
				\Delta i_L
2021-06-22 07:22:29,459
				and found 
				L
2021-06-22 07:22:29,483
				sub-ing in 
				8.0⋅C⋅\Delta v_C⋅fₛ for 
				\Delta i_L
2021-06-22 07:22:29,483
				and found 
				0.0625⋅D⋅(-V_c + V_g)
				─────────────────────
				                  2  
				   C⋅\Delta v_C⋅fₛ   
2021-06-22 07:22:29,483
				recursesym: 
				[V_c, D, V_g, M, L, \Delta i_L, fₛ, C, \Delta v_C]
2021-06-22 07:22:29,484
				calling solver looking for 
				fₛ
2021-06-22 07:22:29,484
									base case
2021-06-22 07:22:29,484
returning: f_s=OrderedSet([D*(-V_c + V_g)/(2*L*\Delta i_L), 0.125*\Delta i_L/(C*\Delta v_C)])
2021-06-22 07:22:29,484
				sub-ing in 
				D⋅(-V_c + V_g)
				──────────────
				2⋅L⋅\Delta i_L for 
				fₛ
2021-06-22 07:22:29,485
				and found 
				L
2021-06-22 07:22:29,498
				sub-ing in 
				0.125⋅\Delta i_L
				────────────────
				  C⋅\Delta v_C   for 
				fₛ
2021-06-22 07:22:29,498
				and found 
				4.0⋅C⋅D⋅\Delta v_C⋅(-V_c + V_g)
				───────────────────────────────
				                    2          
				          \Delta i_L           
2021-06-22 07:22:29,499
end of function, recursesym: {V_c: set(), D: set(), V_g: set(), M: OrderedSet([V_c/V_g]), L: set(), \Delta i_L: OrderedSet([D*(-V_c + V_g)/(2*L*f_s), 8.0*C*\Delta v_C*f_s]), f_s: OrderedSet([D*(-V_c + V_g)/(2*L*\Delta i_L), 0.125*\Delta i_L/(C*\Delta v_C)]), C: OrderedSet([0.125*\Delta i_L/(\Delta v_C*f_s)]), \Delta v_C: OrderedSet([0.125*\Delta i_L/(C*f_s)])}
2021-06-22 07:22:29,500
returning: 
				OrderedSet([D*(-V_c + V_g)/(2*\Delta i_L*f_s), 0.0625*D*(-V_c + V_g)/(C*\Delta
				 v_C*f_s**2), 4.0*C*D*\Delta v_C*(-V_c + V_g)/\Delta i_L**2])
2021-06-22 07:22:29,501
		sub-ing in 
		 D⋅(-V_c + V_g)
		───────────────
		2⋅\Delta i_L⋅fₛ for 
		L
2021-06-22 07:22:29,501
		and found 
		V_g
2021-06-22 07:22:29,538
		sub-ing in 
		0.0625⋅D⋅(-V_c + V_g)
		─────────────────────
		                  2  
		   C⋅\Delta v_C⋅fₛ    for 
		L
2021-06-22 07:22:29,539
		and found 
		      0.125⋅\Delta i_L⋅(-V_c + V_g)
		V_c + ─────────────────────────────
		             C⋅\Delta v_C⋅fₛ       
2021-06-22 07:22:29,563
		sub-ing in 
		4.0⋅C⋅D⋅\Delta v_C⋅(-V_c + V_g)
		───────────────────────────────
		                    2          
		          \Delta i_L            for 
		L
2021-06-22 07:22:29,564
		and found 
		8.0⋅C⋅\Delta v_C⋅fₛ⋅(-V_c + V_g)      
		──────────────────────────────── + V_c
		           \Delta i_L                 
2021-06-22 07:22:29,564
		recursesym: 
		[V_c, D, V_g, M, L, \Delta i_L, fₛ, C, \Delta v_C]
2021-06-22 07:22:29,564
		calling solver looking for 
		V_c
2021-06-22 07:22:29,564
									base case
2021-06-22 07:22:29,565
returning: V_c=set()
2021-06-22 07:22:29,565
		recursesym: 
		[V_c, D, V_g, M, L, \Delta i_L, fₛ, C, \Delta v_C]
2021-06-22 07:22:29,565
		calling solver looking for 
		\Delta i_L
2021-06-22 07:22:29,565
									base case
2021-06-22 07:22:29,565
returning: delta_iL=OrderedSet([D*(-V_c + V_g)/(2*L*f_s), 8.0*C*\Delta v_C*f_s])
2021-06-22 07:22:29,566
		sub-ing in 
		D⋅(-V_c + V_g)
		──────────────
		    2⋅L⋅fₛ     for 
		\Delta i_L
2021-06-22 07:22:29,566
		and found 
		V_g
2021-06-22 07:22:29,588
		sub-ing in 
		8.0⋅C⋅\Delta v_C⋅fₛ for 
		\Delta i_L
2021-06-22 07:22:29,589
		and found 
		                      2      
		16.0⋅C⋅L⋅\Delta v_C⋅fₛ       
		─────────────────────── + V_c
		           D                 
2021-06-22 07:22:29,589
		recursesym: 
		[V_c, D, V_g, M, L, \Delta i_L, fₛ, C, \Delta v_C]
2021-06-22 07:22:29,589
		calling solver looking for 
		fₛ
2021-06-22 07:22:29,589
									base case
2021-06-22 07:22:29,590
returning: f_s=OrderedSet([D*(-V_c + V_g)/(2*L*\Delta i_L), 0.125*\Delta i_L/(C*\Delta v_C)])
2021-06-22 07:22:29,590
		sub-ing in 
		D⋅(-V_c + V_g)
		──────────────
		2⋅L⋅\Delta i_L for 
		fₛ
2021-06-22 07:22:29,590
		and found 
		V_g
2021-06-22 07:22:29,615
		sub-ing in 
		0.125⋅\Delta i_L
		────────────────
		  C⋅\Delta v_C   for 
		fₛ
2021-06-22 07:22:29,615
		and found 
		                       2
		      0.25⋅L⋅\Delta i_L 
		V_c + ──────────────────
		        C⋅D⋅\Delta v_C  
2021-06-22 07:22:29,617
end of function, recursesym: {V_c: set(), D: set(), V_g: set(), M: OrderedSet([V_c/V_g]), L: OrderedSet([D*(-V_c + V_g)/(2*\Delta i_L*f_s), 0.0625*D*(-V_c + V_g)/(C*\Delta v_C*f_s**2), 4.0*C*D*\Delta v_C*(-V_c + V_g)/\Delta i_L**2]), \Delta i_L: OrderedSet([D*(-V_c + V_g)/(2*L*f_s), 8.0*C*\Delta v_C*f_s]), f_s: OrderedSet([D*(-V_c + V_g)/(2*L*\Delta i_L), 0.125*\Delta i_L/(C*\Delta v_C)]), C: OrderedSet([0.125*\Delta i_L/(\Delta v_C*f_s)]), \Delta v_C: OrderedSet([0.125*\Delta i_L/(C*f_s)])}
2021-06-22 07:22:29,618
returning: 
		OrderedSet([V_c*(2*D - 1), V_c/M, V_c + 2*L*\Delta i_L*f_s/D, 16.0*C*L*\Delta 
		v_C*f_s**2/D + V_c, V_c + 0.25*L*\Delta i_L**2/(C*D*\Delta v_C)])
2021-06-22 07:22:29,626
	sub-ing in 
	V_c⋅(2⋅D - 1) for 
	V_g
2021-06-22 07:22:29,627
	and found 
	V_c⋅(2⋅D - 1) + V_c
	───────────────────
	       2⋅V_c       
2021-06-22 07:22:29,636
	sub-ing in 
	V_c
	───
	 M  for 
	V_g
2021-06-22 07:22:29,636
	and found 
	      V_c
	V_c + ───
	       M 
	─────────
	  2⋅V_c  
2021-06-22 07:22:29,649
	sub-ing in 
	      2⋅L⋅\Delta i_L⋅fₛ
	V_c + ─────────────────
	              D         for 
	V_g
2021-06-22 07:22:29,649
	and found 
	        2⋅L⋅\Delta i_L⋅fₛ
	2⋅V_c + ─────────────────
	                D        
	─────────────────────────
	          2⋅V_c          
2021-06-22 07:22:29,673
	sub-ing in 
	                      2      
	16.0⋅C⋅L⋅\Delta v_C⋅fₛ       
	─────────────────────── + V_c
	           D                  for 
	V_g
2021-06-22 07:22:29,674
	and found 
	                      2        
	16.0⋅C⋅L⋅\Delta v_C⋅fₛ         
	─────────────────────── + 2⋅V_c
	           D                   
	───────────────────────────────
	             2⋅V_c             
2021-06-22 07:22:29,697
	sub-ing in 
	                       2
	      0.25⋅L⋅\Delta i_L 
	V_c + ──────────────────
	        C⋅D⋅\Delta v_C   for 
	V_g
2021-06-22 07:22:29,698
	and found 
	                         2
	        0.25⋅L⋅\Delta i_L 
	2⋅V_c + ──────────────────
	          C⋅D⋅\Delta v_C  
	──────────────────────────
	          2⋅V_c           
2021-06-22 07:22:29,698
	solution to D is: 
	-2⋅L⋅\Delta i_L⋅fₛ 
	───────────────────
	     V_c - V_g      
2021-06-22 07:22:29,699
	recursesym: 
	[V_c, D, V_g, M, L, \Delta i_L, fₛ, C, \Delta v_C]
2021-06-22 07:22:29,699
	calling solver looking for 
	L
2021-06-22 07:22:29,699
									base case
2021-06-22 07:22:29,700
returning: L=OrderedSet([D*(-V_c + V_g)/(2*\Delta i_L*f_s), 0.0625*D*(-V_c + V_g)/(C*\Delta
 v_C*f_s**2), 4.0*C*D*\Delta v_C*(-V_c + V_g)/\Delta i_L**2])
2021-06-22 07:22:29,701
	sub-ing in 
	 D⋅(-V_c + V_g)
	───────────────
	2⋅\Delta i_L⋅fₛ for 
	L
2021-06-22 07:22:29,701
	and found 
	-D⋅(-V_c + V_g) 
	────────────────
	   V_c - V_g    
2021-06-22 07:22:29,712
	sub-ing in 
	0.0625⋅D⋅(-V_c + V_g)
	─────────────────────
	                  2  
	   C⋅\Delta v_C⋅fₛ    for 
	L
2021-06-22 07:22:29,712
	and found 
	-0.125⋅D⋅\Delta i_L⋅(-V_c + V_g) 
	─────────────────────────────────
	   C⋅\Delta v_C⋅fₛ⋅(V_c - V_g)   
2021-06-22 07:22:29,720
	sub-ing in 
	4.0⋅C⋅D⋅\Delta v_C⋅(-V_c + V_g)
	───────────────────────────────
	                    2          
	          \Delta i_L            for 
	L
2021-06-22 07:22:29,721
	and found 
	-8.0⋅C⋅D⋅\Delta v_C⋅fₛ⋅(-V_c + V_g) 
	────────────────────────────────────
	       \Delta i_L⋅(V_c - V_g)       
2021-06-22 07:22:29,721
	recursesym: 
	[V_c, D, V_g, M, L, \Delta i_L, fₛ, C, \Delta v_C]
2021-06-22 07:22:29,721
	calling solver looking for 
	V_c
2021-06-22 07:22:29,721
									base case
2021-06-22 07:22:29,721
returning: V_c=set()
2021-06-22 07:22:29,722
	recursesym: 
	[V_c, D, V_g, M, L, \Delta i_L, fₛ, C, \Delta v_C]
2021-06-22 07:22:29,722
	calling solver looking for 
	V_g
2021-06-22 07:22:29,722
									base case
2021-06-22 07:22:29,723
returning: V_g=OrderedSet([V_c*(2*D - 1), V_c/M, V_c + 2*L*\Delta i_L*f_s/D, 16.0*C*L*\Delta 
v_C*f_s**2/D + V_c, V_c + 0.25*L*\Delta i_L**2/(C*D*\Delta v_C)])
2021-06-22 07:22:29,735
	sub-ing in 
	V_c⋅(2⋅D - 1) for 
	V_g
2021-06-22 07:22:29,736
	and found 
	-2⋅L⋅\Delta i_L⋅fₛ  
	────────────────────
	-V_c⋅(2⋅D - 1) + V_c
2021-06-22 07:22:29,748
	sub-ing in 
	V_c
	───
	 M  for 
	V_g
2021-06-22 07:22:29,748
	and found 
	-2⋅L⋅\Delta i_L⋅fₛ 
	───────────────────
	           V_c     
	     V_c - ───     
	            M      
2021-06-22 07:22:29,749
	sub-ing in 
	      2⋅L⋅\Delta i_L⋅fₛ
	V_c + ─────────────────
	              D         for 
	V_g
2021-06-22 07:22:29,749
	and found 
	D
2021-06-22 07:22:29,757
	sub-ing in 
	                      2      
	16.0⋅C⋅L⋅\Delta v_C⋅fₛ       
	─────────────────────── + V_c
	           D                  for 
	V_g
2021-06-22 07:22:29,757
	and found 
	0.125⋅D⋅\Delta i_L
	──────────────────
	 C⋅\Delta v_C⋅fₛ  
2021-06-22 07:22:29,761
	sub-ing in 
	                       2
	      0.25⋅L⋅\Delta i_L 
	V_c + ──────────────────
	        C⋅D⋅\Delta v_C   for 
	V_g
2021-06-22 07:22:29,762
	and found 
	8.0⋅C⋅D⋅\Delta v_C⋅fₛ
	─────────────────────
	      \Delta i_L     
2021-06-22 07:22:29,762
	recursesym: 
	[V_c, D, V_g, M, L, \Delta i_L, fₛ, C, \Delta v_C]
2021-06-22 07:22:29,762
	calling solver looking for 
	\Delta i_L
2021-06-22 07:22:29,762
									base case
2021-06-22 07:22:29,762
returning: delta_iL=OrderedSet([D*(-V_c + V_g)/(2*L*f_s), 8.0*C*\Delta v_C*f_s])
2021-06-22 07:22:29,764
	sub-ing in 
	D⋅(-V_c + V_g)
	──────────────
	    2⋅L⋅fₛ     for 
	\Delta i_L
2021-06-22 07:22:29,764
	and found 
	-D⋅(-V_c + V_g) 
	────────────────
	   V_c - V_g    
2021-06-22 07:22:29,781
	sub-ing in 
	8.0⋅C⋅\Delta v_C⋅fₛ for 
	\Delta i_L
2021-06-22 07:22:29,781
	and found 
	                       2 
	-16.0⋅C⋅L⋅\Delta v_C⋅fₛ  
	─────────────────────────
	        V_c - V_g        
2021-06-22 07:22:29,782
	recursesym: 
	[V_c, D, V_g, M, L, \Delta i_L, fₛ, C, \Delta v_C]
2021-06-22 07:22:29,782
	calling solver looking for 
	fₛ
2021-06-22 07:22:29,782
									base case
2021-06-22 07:22:29,782
returning: f_s=OrderedSet([D*(-V_c + V_g)/(2*L*\Delta i_L), 0.125*\Delta i_L/(C*\Delta v_C)])
2021-06-22 07:22:29,783
	sub-ing in 
	D⋅(-V_c + V_g)
	──────────────
	2⋅L⋅\Delta i_L for 
	fₛ
2021-06-22 07:22:29,784
	and found 
	-D⋅(-V_c + V_g) 
	────────────────
	   V_c - V_g    
2021-06-22 07:22:29,800
	sub-ing in 
	0.125⋅\Delta i_L
	────────────────
	  C⋅\Delta v_C   for 
	fₛ
2021-06-22 07:22:29,800
	and found 
	                    2   
	  -0.25⋅L⋅\Delta i_L    
	────────────────────────
	C⋅\Delta v_C⋅(V_c - V_g)
2021-06-22 07:22:29,803
end of function, recursesym: {V_c: set(), D: set(), V_g: OrderedSet([V_c*(2*D - 1), V_c/M, V_c + 2*L*\Delta i_L*f_s/D, 16.0*C*L*\Delta v_C*f_s**2/D + V_c, V_c + 0.25*L*\Delta i_L**2/(C*D*\Delta v_C)]), M: OrderedSet([V_c/V_g]), L: OrderedSet([D*(-V_c + V_g)/(2*\Delta i_L*f_s), 0.0625*D*(-V_c + V_g)/(C*\Delta v_C*f_s**2), 4.0*C*D*\Delta v_C*(-V_c + V_g)/\Delta i_L**2]), \Delta i_L: OrderedSet([D*(-V_c + V_g)/(2*L*f_s), 8.0*C*\Delta v_C*f_s]), f_s: OrderedSet([D*(-V_c + V_g)/(2*L*\Delta i_L), 0.125*\Delta i_L/(C*\Delta v_C)]), C: OrderedSet([0.125*\Delta i_L/(\Delta v_C*f_s)]), \Delta v_C: OrderedSet([0.125*\Delta i_L/(C*f_s)])}
2021-06-22 07:22:29,804
returning: 
	OrderedSet([(V_c + V_g)/(2*V_c), -2*L*\Delta i_L*f_s/(V_c - V_g), (M + 1)/(2*M
	), -2*L*M*\Delta i_L*f_s/(V_c*(M - 1)), -16.0*C*L*\Delta v_C*f_s**2/(V_c - V_g
	), -0.25*L*\Delta i_L**2/(C*\Delta v_C*(V_c - V_g))])
2021-06-22 07:22:29,808
sub-ing in 
V_c + V_g
─────────
  2⋅V_c   for 
D
2021-06-22 07:22:29,809
and found 
     V_g      
──────────────
     V_c + V_g
-1 + ─────────
        V_c   
2021-06-22 07:22:29,834
sub-ing in 
-2⋅L⋅\Delta i_L⋅fₛ 
───────────────────
     V_c - V_g      for 
D
2021-06-22 07:22:29,835
and found 
          V_g          
───────────────────────
  4⋅L⋅\Delta i_L⋅fₛ    
- ───────────────── - 1
      V_c - V_g        
2021-06-22 07:22:29,840
sub-ing in 
M + 1
─────
 2⋅M  for 
D
2021-06-22 07:22:29,841
and found 
   V_g    
──────────
     M + 1
-1 + ─────
       M  
2021-06-22 07:22:29,872
sub-ing in 
-2⋅L⋅M⋅\Delta i_L⋅fₛ 
─────────────────────
     V_c⋅(M - 1)      for 
D
2021-06-22 07:22:29,873
and found 
           V_g           
─────────────────────────
  4⋅L⋅M⋅\Delta i_L⋅fₛ    
- ─────────────────── - 1
      V_c⋅(M - 1)        
2021-06-22 07:22:29,925
sub-ing in 
                       2 
-16.0⋅C⋅L⋅\Delta v_C⋅fₛ  
─────────────────────────
        V_c - V_g         for 
D
2021-06-22 07:22:29,927
and found 
             V_g             
─────────────────────────────
                        2    
  32.0⋅C⋅L⋅\Delta v_C⋅fₛ     
- ─────────────────────── - 1
         V_c - V_g           
2021-06-22 07:22:29,987
sub-ing in 
                    2   
  -0.25⋅L⋅\Delta i_L    
────────────────────────
C⋅\Delta v_C⋅(V_c - V_g) for 
D
2021-06-22 07:22:29,988
and found 
             V_g             
─────────────────────────────
                        2    
        0.5⋅L⋅\Delta i_L     
-1 - ────────────────────────
     C⋅\Delta v_C⋅(V_c - V_g)
2021-06-22 07:22:29,989
recursesym: 
[V_c, D, V_g, M, L, \Delta i_L, fₛ, C, \Delta v_C]
2021-06-22 07:22:29,989
calling solver looking for 
V_g
2021-06-22 07:22:29,989
									base case
2021-06-22 07:22:29,990
returning: V_g=OrderedSet([V_c*(2*D - 1), V_c/M, V_c + 2*L*\Delta i_L*f_s/D, 16.0*C*L*\Delta 
v_C*f_s**2/D + V_c, V_c + 0.25*L*\Delta i_L**2/(C*D*\Delta v_C)])
2021-06-22 07:22:29,990
sub-ing in 
V_c⋅(2⋅D - 1) for 
V_g
2021-06-22 07:22:29,990
and found 
V_c
2021-06-22 07:22:29,999
sub-ing in 
V_c
───
 M  for 
V_g
2021-06-22 07:22:29,999
and found 
    V_c    
───────────
M⋅(2⋅D - 1)
2021-06-22 07:22:30,017
sub-ing in 
      2⋅L⋅\Delta i_L⋅fₛ
V_c + ─────────────────
              D         for 
V_g
2021-06-22 07:22:30,018
and found 
      2⋅L⋅\Delta i_L⋅fₛ
V_c + ─────────────────
              D        
───────────────────────
        2⋅D - 1        
2021-06-22 07:22:30,059
sub-ing in 
                      2      
16.0⋅C⋅L⋅\Delta v_C⋅fₛ       
─────────────────────── + V_c
           D                  for 
V_g
2021-06-22 07:22:30,060
and found 
                      2      
16.0⋅C⋅L⋅\Delta v_C⋅fₛ       
─────────────────────── + V_c
           D                 
─────────────────────────────
           2⋅D - 1           
2021-06-22 07:22:30,101
sub-ing in 
                       2
      0.25⋅L⋅\Delta i_L 
V_c + ──────────────────
        C⋅D⋅\Delta v_C   for 
V_g
2021-06-22 07:22:30,102
and found 
                       2
      0.25⋅L⋅\Delta i_L 
V_c + ──────────────────
        C⋅D⋅\Delta v_C  
────────────────────────
        2⋅D - 1         
2021-06-22 07:22:30,102
solution to V_c is: 
M⋅V_g 
2021-06-22 07:22:30,102
recursesym: 
[V_c, D, V_g, M, L, \Delta i_L, fₛ, C, \Delta v_C]
2021-06-22 07:22:30,102
calling solver looking for 
M
2021-06-22 07:22:30,103
									base case
2021-06-22 07:22:30,103
returning: M=OrderedSet([V_c/V_g])
2021-06-22 07:22:30,103
sub-ing in 
V_c
───
V_g for 
M
2021-06-22 07:22:30,103
and found 
V_c
2021-06-22 07:22:30,103
recursesym: 
[V_c, D, V_g, M, L, \Delta i_L, fₛ, C, \Delta v_C]
2021-06-22 07:22:30,103
calling solver looking for 
V_g
2021-06-22 07:22:30,103
									base case
2021-06-22 07:22:30,105
returning: V_g=OrderedSet([V_c*(2*D - 1), V_c/M, V_c + 2*L*\Delta i_L*f_s/D, 16.0*C*L*\Delta 
v_C*f_s**2/D + V_c, V_c + 0.25*L*\Delta i_L**2/(C*D*\Delta v_C)])
2021-06-22 07:22:30,111
sub-ing in 
V_c⋅(2⋅D - 1) for 
V_g
2021-06-22 07:22:30,112
and found 
M⋅V_c⋅(2⋅D - 1)
2021-06-22 07:22:30,112
sub-ing in 
V_c
───
 M  for 
V_g
2021-06-22 07:22:30,112
and found 
V_c
2021-06-22 07:22:30,124
sub-ing in 
      2⋅L⋅\Delta i_L⋅fₛ
V_c + ─────────────────
              D         for 
V_g
2021-06-22 07:22:30,125
and found 
  ⎛      2⋅L⋅\Delta i_L⋅fₛ⎞
M⋅⎜V_c + ─────────────────⎟
  ⎝              D        ⎠
2021-06-22 07:22:30,148
sub-ing in 
                      2      
16.0⋅C⋅L⋅\Delta v_C⋅fₛ       
─────────────────────── + V_c
           D                  for 
V_g
2021-06-22 07:22:30,148
and found 
  ⎛                      2      ⎞
  ⎜16.0⋅C⋅L⋅\Delta v_C⋅fₛ       ⎟
M⋅⎜─────────────────────── + V_c⎟
  ⎝           D                 ⎠
2021-06-22 07:22:30,170
sub-ing in 
                       2
      0.25⋅L⋅\Delta i_L 
V_c + ──────────────────
        C⋅D⋅\Delta v_C   for 
V_g
2021-06-22 07:22:30,171
and found 
  ⎛                       2⎞
  ⎜      0.25⋅L⋅\Delta i_L ⎟
M⋅⎜V_c + ──────────────────⎟
  ⎝        C⋅D⋅\Delta v_C  ⎠
2021-06-22 07:22:30,171
solution to V_c is: 
R⋅i_R 
2021-06-22 07:22:30,171
recursesym: 
[V_c, D, V_g, M, L, \Delta i_L, fₛ, C, \Delta v_C]
2021-06-22 07:22:30,171
calling solver looking for 
R
2021-06-22 07:22:30,171
									adding R to [V_c, D, V_g, M, L, \Delta i_L, f_s, C, \Delta v_C]
2021-06-22 07:22:30,171
looking for 
R
2021-06-22 07:22:30,276
nonlinsolve returns: 
V_c
───
i_R
2021-06-22 07:22:30,277

D⋅(-V_c + V_g) + (1 - D)⋅(V_c + V_g) solved for 
R=
∅
2021-06-22 07:22:30,278

    V_c
M - ───
    V_g solved for 
R=
∅
2021-06-22 07:22:30,285

       V_c
-i_R + ───
        R  solved for 
R=
⎧V_c⎫      
⎨───⎬ \ {0}
⎩i_R⎭      
2021-06-22 07:22:30,288

i_L - i_R solved for 
R=
∅
2021-06-22 07:22:30,289

  D⋅(-V_c + V_g)               
- ────────────── + 2⋅\Delta i_L
       L⋅fₛ                     solved for 
R=
∅
2021-06-22 07:22:30,290

                 0.25⋅\Delta i_L
2⋅C⋅\Delta v_C - ───────────────
                        fₛ       solved for 
R=
∅
2021-06-22 07:22:30,290
									Done with 
R
2021-06-22 07:22:30,291
									so far R = 
									OrderedSet([V_c/i_R])
2021-06-22 07:22:30,291
									solution to R is: 
									V_c
									───
									i_R 
2021-06-22 07:22:30,291
									recursesym: 
									[V_c, D, V_g, M, L, \Delta i_L, fₛ, C, \Delta v_C, R]
2021-06-22 07:22:30,291
									calling solver looking for 
									V_c
2021-06-22 07:22:30,291
										base case
2021-06-22 07:22:30,291
returning: V_c=set()
2021-06-22 07:22:30,292
									recursesym: 
									[V_c, D, V_g, M, L, \Delta i_L, fₛ, C, \Delta v_C, R]
2021-06-22 07:22:30,292
									calling solver looking for 
									i_R
2021-06-22 07:22:30,292
										adding i_R to [V_c, D, V_g, M, L, \Delta i_L, f_s, C, \Delta v_C, R]
2021-06-22 07:22:30,292
looking for 
i_R
2021-06-22 07:22:30,351
nonlinsolve returns: 
i_L
2021-06-22 07:22:30,352

D⋅(-V_c + V_g) + (1 - D)⋅(V_c + V_g) solved for 
i_R=
∅
2021-06-22 07:22:30,352

    V_c
M - ───
    V_g solved for 
i_R=
∅
2021-06-22 07:22:30,354

       V_c
-i_R + ───
        R  solved for 
i_R=
⎧V_c⎫
⎨───⎬
⎩ R ⎭
2021-06-22 07:22:30,358

i_L - i_R solved for 
i_R=
{i_L}
2021-06-22 07:22:30,359

  D⋅(-V_c + V_g)               
- ────────────── + 2⋅\Delta i_L
       L⋅fₛ                     solved for 
i_R=
∅
2021-06-22 07:22:30,359

                 0.25⋅\Delta i_L
2⋅C⋅\Delta v_C - ───────────────
                        fₛ       solved for 
i_R=
∅
2021-06-22 07:22:30,359
										Done with 
i_R
2021-06-22 07:22:30,360
										so far i_R = 
										OrderedSet([V_c/R, i_L])
2021-06-22 07:22:30,360
										solution to i_R is: 
										V_c
										───
										 R  
2021-06-22 07:22:30,360
										recursesym: 
										[V_c, D, V_g, M, L, \Delta i_L, fₛ, C, \Delta v_C, R, i_R]
2021-06-22 07:22:30,360
										calling solver looking for 
										R
2021-06-22 07:22:30,360
											base case
2021-06-22 07:22:30,360
returning: R=set()
2021-06-22 07:22:30,361
										recursesym: 
										[V_c, D, V_g, M, L, \Delta i_L, fₛ, C, \Delta v_C, R, i_R]
2021-06-22 07:22:30,361
										calling solver looking for 
										V_c
2021-06-22 07:22:30,361
											base case
2021-06-22 07:22:30,361
returning: V_c=set()
2021-06-22 07:22:30,361
										solution to i_R is: 
										i_L 
2021-06-22 07:22:30,361
										recursesym: 
										[V_c, D, V_g, M, L, \Delta i_L, fₛ, C, \Delta v_C, R, i_R]
2021-06-22 07:22:30,361
										calling solver looking for 
										i_L
2021-06-22 07:22:30,361
											adding i_L to [V_c, D, V_g, M, L, \Delta i_L, f_s, C, \Delta v_C, R, i_R]
2021-06-22 07:22:30,361
looking for 
i_L
2021-06-22 07:22:30,418
nonlinsolve returns: 
i_R
2021-06-22 07:22:30,419

D⋅(-V_c + V_g) + (1 - D)⋅(V_c + V_g) solved for 
i_L=
∅
2021-06-22 07:22:30,419

    V_c
M - ───
    V_g solved for 
i_L=
∅
2021-06-22 07:22:30,420

       V_c
-i_R + ───
        R  solved for 
i_L=
∅
2021-06-22 07:22:30,421

i_L - i_R solved for 
i_L=
{i_R}
2021-06-22 07:22:30,422

  D⋅(-V_c + V_g)               
- ────────────── + 2⋅\Delta i_L
       L⋅fₛ                     solved for 
i_L=
∅
2021-06-22 07:22:30,423

                 0.25⋅\Delta i_L
2⋅C⋅\Delta v_C - ───────────────
                        fₛ       solved for 
i_L=
∅
2021-06-22 07:22:30,423
											Done with 
i_L
2021-06-22 07:22:30,423
											so far i_L = 
											OrderedSet([i_R])
2021-06-22 07:22:30,423
											solution to i_L is: 
											i_R 
2021-06-22 07:22:30,424
											recursesym: 
											[V_c, D, V_g, M, L, \Delta i_L, fₛ, C, \Delta v_C, R, i_R, i_L]
2021-06-22 07:22:30,424
											calling solver looking for 
											i_R
2021-06-22 07:22:30,424
												base case
2021-06-22 07:22:30,424
returning: i_R=set()
2021-06-22 07:22:30,428
end of function, recursesym: {V_c: set(), D: OrderedSet([(V_c + V_g)/(2*V_c), -2*L*\Delta i_L*f_s/(V_c - V_g), (M + 1)/(2*M), -2*L*M*\Delta i_L*f_s/(V_c*(M - 1)), -16.0*C*L*\Delta v_C*f_s**2/(V_c - V_g), -0.25*L*\Delta i_L**2/(C*\Delta v_C*(V_c - V_g))]), V_g: OrderedSet([V_c*(2*D - 1), V_c/M, V_c + 2*L*\Delta i_L*f_s/D, 16.0*C*L*\Delta v_C*f_s**2/D + V_c, V_c + 0.25*L*\Delta i_L**2/(C*D*\Delta v_C)]), M: OrderedSet([V_c/V_g]), L: OrderedSet([D*(-V_c + V_g)/(2*\Delta i_L*f_s), 0.0625*D*(-V_c + V_g)/(C*\Delta v_C*f_s**2), 4.0*C*D*\Delta v_C*(-V_c + V_g)/\Delta i_L**2]), \Delta i_L: OrderedSet([D*(-V_c + V_g)/(2*L*f_s), 8.0*C*\Delta v_C*f_s]), f_s: OrderedSet([D*(-V_c + V_g)/(2*L*\Delta i_L), 0.125*\Delta i_L/(C*\Delta v_C)]), C: OrderedSet([0.125*\Delta i_L/(\Delta v_C*f_s)]), \Delta v_C: OrderedSet([0.125*\Delta i_L/(C*f_s)]), R: set(), i_R: set(), i_L: set()}
2021-06-22 07:22:30,428
returning: 
											OrderedSet([i_R])
2021-06-22 07:22:30,428
										sub-ing in 
										i_R for 
										i_L
2021-06-22 07:22:30,428
										and found 
										i_R
2021-06-22 07:22:30,432
end of function, recursesym: {V_c: set(), D: OrderedSet([(V_c + V_g)/(2*V_c), -2*L*\Delta i_L*f_s/(V_c - V_g), (M + 1)/(2*M), -2*L*M*\Delta i_L*f_s/(V_c*(M - 1)), -16.0*C*L*\Delta v_C*f_s**2/(V_c - V_g), -0.25*L*\Delta i_L**2/(C*\Delta v_C*(V_c - V_g))]), V_g: OrderedSet([V_c*(2*D - 1), V_c/M, V_c + 2*L*\Delta i_L*f_s/D, 16.0*C*L*\Delta v_C*f_s**2/D + V_c, V_c + 0.25*L*\Delta i_L**2/(C*D*\Delta v_C)]), M: OrderedSet([V_c/V_g]), L: OrderedSet([D*(-V_c + V_g)/(2*\Delta i_L*f_s), 0.0625*D*(-V_c + V_g)/(C*\Delta v_C*f_s**2), 4.0*C*D*\Delta v_C*(-V_c + V_g)/\Delta i_L**2]), \Delta i_L: OrderedSet([D*(-V_c + V_g)/(2*L*f_s), 8.0*C*\Delta v_C*f_s]), f_s: OrderedSet([D*(-V_c + V_g)/(2*L*\Delta i_L), 0.125*\Delta i_L/(C*\Delta v_C)]), C: OrderedSet([0.125*\Delta i_L/(\Delta v_C*f_s)]), \Delta v_C: OrderedSet([0.125*\Delta i_L/(C*f_s)]), R: set(), i_R: set(), i_L: OrderedSet([i_R])}
2021-06-22 07:22:30,432
returning: 
										OrderedSet([V_c/R, i_L])
2021-06-22 07:22:30,433
									sub-ing in 
									V_c
									───
									 R  for 
									i_R
2021-06-22 07:22:30,433
									and found 
									R
2021-06-22 07:22:30,436
									sub-ing in 
									i_L for 
									i_R
2021-06-22 07:22:30,437
									and found 
									V_c
									───
									i_L
2021-06-22 07:22:30,441
end of function, recursesym: {V_c: set(), D: OrderedSet([(V_c + V_g)/(2*V_c), -2*L*\Delta i_L*f_s/(V_c - V_g), (M + 1)/(2*M), -2*L*M*\Delta i_L*f_s/(V_c*(M - 1)), -16.0*C*L*\Delta v_C*f_s**2/(V_c - V_g), -0.25*L*\Delta i_L**2/(C*\Delta v_C*(V_c - V_g))]), V_g: OrderedSet([V_c*(2*D - 1), V_c/M, V_c + 2*L*\Delta i_L*f_s/D, 16.0*C*L*\Delta v_C*f_s**2/D + V_c, V_c + 0.25*L*\Delta i_L**2/(C*D*\Delta v_C)]), M: OrderedSet([V_c/V_g]), L: OrderedSet([D*(-V_c + V_g)/(2*\Delta i_L*f_s), 0.0625*D*(-V_c + V_g)/(C*\Delta v_C*f_s**2), 4.0*C*D*\Delta v_C*(-V_c + V_g)/\Delta i_L**2]), \Delta i_L: OrderedSet([D*(-V_c + V_g)/(2*L*f_s), 8.0*C*\Delta v_C*f_s]), f_s: OrderedSet([D*(-V_c + V_g)/(2*L*\Delta i_L), 0.125*\Delta i_L/(C*\Delta v_C)]), C: OrderedSet([0.125*\Delta i_L/(\Delta v_C*f_s)]), \Delta v_C: OrderedSet([0.125*\Delta i_L/(C*f_s)]), R: set(), i_R: OrderedSet([V_c/R, i_L]), i_L: OrderedSet([i_R])}
2021-06-22 07:22:30,441
returning: 
									OrderedSet([V_c/i_R, V_c/i_L])
2021-06-22 07:22:30,441
sub-ing in 
V_c
───
i_R for 
R
2021-06-22 07:22:30,441
and found 
V_c
2021-06-22 07:22:30,446
sub-ing in 
V_c
───
i_L for 
R
2021-06-22 07:22:30,446
and found 
V_c⋅i_R
───────
  i_L  
2021-06-22 07:22:30,446
recursesym: 
[V_c, D, V_g, M, L, \Delta i_L, fₛ, C, \Delta v_C, R, i_R, i_L]
2021-06-22 07:22:30,446
calling solver looking for 
i_R
2021-06-22 07:22:30,446
												base case
2021-06-22 07:22:30,446
returning: i_R=OrderedSet([V_c/R, i_L])
2021-06-22 07:22:30,447
sub-ing in 
V_c
───
 R  for 
i_R
2021-06-22 07:22:30,447
and found 
V_c
2021-06-22 07:22:30,449
sub-ing in 
i_L for 
i_R
2021-06-22 07:22:30,449
and found 
R⋅i_L
2021-06-22 07:22:30,450
solution to V_c is: 
      2⋅L⋅\Delta i_L⋅fₛ
V_g - ─────────────────
              D         
2021-06-22 07:22:30,450
recursesym: 
[V_c, D, V_g, M, L, \Delta i_L, fₛ, C, \Delta v_C, R, i_R, i_L]
2021-06-22 07:22:30,450
calling solver looking for 
D
2021-06-22 07:22:30,450
												base case
2021-06-22 07:22:30,452
returning: D=OrderedSet([(V_c + V_g)/(2*V_c), -2*L*\Delta i_L*f_s/(V_c - V_g), (M + 1)/(2*M
), -2*L*M*\Delta i_L*f_s/(V_c*(M - 1)), -16.0*C*L*\Delta v_C*f_s**2/(V_c - V_g
), -0.25*L*\Delta i_L**2/(C*\Delta v_C*(V_c - V_g))])
2021-06-22 07:22:30,475
sub-ing in 
V_c + V_g
─────────
  2⋅V_c   for 
D
2021-06-22 07:22:30,476
and found 
  4⋅L⋅V_c⋅\Delta i_L⋅fₛ      
- ───────────────────── + V_g
        V_c + V_g            
2021-06-22 07:22:30,477
sub-ing in 
-2⋅L⋅\Delta i_L⋅fₛ 
───────────────────
     V_c - V_g      for 
D
2021-06-22 07:22:30,477
and found 
V_c
2021-06-22 07:22:30,498
sub-ing in 
M + 1
─────
 2⋅M  for 
D
2021-06-22 07:22:30,499
and found 
  4⋅L⋅M⋅\Delta i_L⋅fₛ      
- ─────────────────── + V_g
         M + 1             
2021-06-22 07:22:30,514
sub-ing in 
-2⋅L⋅M⋅\Delta i_L⋅fₛ 
─────────────────────
     V_c⋅(M - 1)      for 
D
2021-06-22 07:22:30,515
and found 
      V_c⋅(M - 1)
V_g + ───────────
           M     
2021-06-22 07:22:30,548
sub-ing in 
                       2 
-16.0⋅C⋅L⋅\Delta v_C⋅fₛ  
─────────────────────────
        V_c - V_g         for 
D
2021-06-22 07:22:30,549
and found 
      0.125⋅\Delta i_L⋅(V_c - V_g)
V_g + ────────────────────────────
            C⋅\Delta v_C⋅fₛ       
2021-06-22 07:22:30,576
sub-ing in 
                    2   
  -0.25⋅L⋅\Delta i_L    
────────────────────────
C⋅\Delta v_C⋅(V_c - V_g) for 
D
2021-06-22 07:22:30,577
and found 
8.0⋅C⋅\Delta v_C⋅fₛ⋅(V_c - V_g)      
─────────────────────────────── + V_g
           \Delta i_L                
2021-06-22 07:22:30,577
recursesym: 
[V_c, D, V_g, M, L, \Delta i_L, fₛ, C, \Delta v_C, R, i_R, i_L]
2021-06-22 07:22:30,577
calling solver looking for 
L
2021-06-22 07:22:30,577
												base case
2021-06-22 07:22:30,578
returning: L=OrderedSet([D*(-V_c + V_g)/(2*\Delta i_L*f_s), 0.0625*D*(-V_c + V_g)/(C*\Delta
 v_C*f_s**2), 4.0*C*D*\Delta v_C*(-V_c + V_g)/\Delta i_L**2])
2021-06-22 07:22:30,579
sub-ing in 
 D⋅(-V_c + V_g)
───────────────
2⋅\Delta i_L⋅fₛ for 
L
2021-06-22 07:22:30,579
and found 
V_c
2021-06-22 07:22:30,597
sub-ing in 
0.0625⋅D⋅(-V_c + V_g)
─────────────────────
                  2  
   C⋅\Delta v_C⋅fₛ    for 
L
2021-06-22 07:22:30,598
and found 
      0.125⋅\Delta i_L⋅(-V_c + V_g)
V_g - ─────────────────────────────
             C⋅\Delta v_C⋅fₛ       
2021-06-22 07:22:30,615
sub-ing in 
4.0⋅C⋅D⋅\Delta v_C⋅(-V_c + V_g)
───────────────────────────────
                    2          
          \Delta i_L            for 
L
2021-06-22 07:22:30,616
and found 
  8.0⋅C⋅\Delta v_C⋅fₛ⋅(-V_c + V_g)      
- ──────────────────────────────── + V_g
             \Delta i_L                 
2021-06-22 07:22:30,616
recursesym: 
[V_c, D, V_g, M, L, \Delta i_L, fₛ, C, \Delta v_C, R, i_R, i_L]
2021-06-22 07:22:30,616
calling solver looking for 
V_g
2021-06-22 07:22:30,616
												base case
2021-06-22 07:22:30,617
returning: V_g=OrderedSet([V_c*(2*D - 1), V_c/M, V_c + 2*L*\Delta i_L*f_s/D, 16.0*C*L*\Delta 
v_C*f_s**2/D + V_c, V_c + 0.25*L*\Delta i_L**2/(C*D*\Delta v_C)])
2021-06-22 07:22:30,638
sub-ing in 
V_c⋅(2⋅D - 1) for 
V_g
2021-06-22 07:22:30,639
and found 
                2⋅L⋅\Delta i_L⋅fₛ
V_c⋅(2⋅D - 1) - ─────────────────
                        D        
2021-06-22 07:22:30,651
sub-ing in 
V_c
───
 M  for 
V_g
2021-06-22 07:22:30,651
and found 
V_c   2⋅L⋅\Delta i_L⋅fₛ
─── - ─────────────────
 M            D        
2021-06-22 07:22:30,652
sub-ing in 
      2⋅L⋅\Delta i_L⋅fₛ
V_c + ─────────────────
              D         for 
V_g
2021-06-22 07:22:30,652
and found 
V_c
2021-06-22 07:22:30,680
sub-ing in 
                      2      
16.0⋅C⋅L⋅\Delta v_C⋅fₛ       
─────────────────────── + V_c
           D                  for 
V_g
2021-06-22 07:22:30,681
and found 
                      2                          
16.0⋅C⋅L⋅\Delta v_C⋅fₛ          2⋅L⋅\Delta i_L⋅fₛ
─────────────────────── + V_c - ─────────────────
           D                            D        
2021-06-22 07:22:30,716
sub-ing in 
                       2
      0.25⋅L⋅\Delta i_L 
V_c + ──────────────────
        C⋅D⋅\Delta v_C   for 
V_g
2021-06-22 07:22:30,717
and found 
                                           2
      2⋅L⋅\Delta i_L⋅fₛ   0.25⋅L⋅\Delta i_L 
V_c - ───────────────── + ──────────────────
              D             C⋅D⋅\Delta v_C  
2021-06-22 07:22:30,717
recursesym: 
[V_c, D, V_g, M, L, \Delta i_L, fₛ, C, \Delta v_C, R, i_R, i_L]
2021-06-22 07:22:30,717
calling solver looking for 
\Delta i_L
2021-06-22 07:22:30,717
												base case
2021-06-22 07:22:30,718
returning: delta_iL=OrderedSet([D*(-V_c + V_g)/(2*L*f_s), 8.0*C*\Delta v_C*f_s])
2021-06-22 07:22:30,719
sub-ing in 
D⋅(-V_c + V_g)
──────────────
    2⋅L⋅fₛ     for 
\Delta i_L
2021-06-22 07:22:30,719
and found 
V_c
2021-06-22 07:22:30,742
sub-ing in 
8.0⋅C⋅\Delta v_C⋅fₛ for 
\Delta i_L
2021-06-22 07:22:30,743
and found 
                        2      
  16.0⋅C⋅L⋅\Delta v_C⋅fₛ       
- ─────────────────────── + V_g
             D                 
2021-06-22 07:22:30,743
recursesym: 
[V_c, D, V_g, M, L, \Delta i_L, fₛ, C, \Delta v_C, R, i_R, i_L]
2021-06-22 07:22:30,743
calling solver looking for 
fₛ
2021-06-22 07:22:30,743
												base case
2021-06-22 07:22:30,743
returning: f_s=OrderedSet([D*(-V_c + V_g)/(2*L*\Delta i_L), 0.125*\Delta i_L/(C*\Delta v_C)])
2021-06-22 07:22:30,744
sub-ing in 
D⋅(-V_c + V_g)
──────────────
2⋅L⋅\Delta i_L for 
fₛ
2021-06-22 07:22:30,744
and found 
V_c
2021-06-22 07:22:30,764
sub-ing in 
0.125⋅\Delta i_L
────────────────
  C⋅\Delta v_C   for 
fₛ
2021-06-22 07:22:30,765
and found 
                       2
      0.25⋅L⋅\Delta i_L 
V_g - ──────────────────
        C⋅D⋅\Delta v_C  
2021-06-22 07:22:30,770
end of function, recursesym: {V_c: set(), D: OrderedSet([(V_c + V_g)/(2*V_c), -2*L*\Delta i_L*f_s/(V_c - V_g), (M + 1)/(2*M), -2*L*M*\Delta i_L*f_s/(V_c*(M - 1)), -16.0*C*L*\Delta v_C*f_s**2/(V_c - V_g), -0.25*L*\Delta i_L**2/(C*\Delta v_C*(V_c - V_g))]), V_g: OrderedSet([V_c*(2*D - 1), V_c/M, V_c + 2*L*\Delta i_L*f_s/D, 16.0*C*L*\Delta v_C*f_s**2/D + V_c, V_c + 0.25*L*\Delta i_L**2/(C*D*\Delta v_C)]), M: OrderedSet([V_c/V_g]), L: OrderedSet([D*(-V_c + V_g)/(2*\Delta i_L*f_s), 0.0625*D*(-V_c + V_g)/(C*\Delta v_C*f_s**2), 4.0*C*D*\Delta v_C*(-V_c + V_g)/\Delta i_L**2]), \Delta i_L: OrderedSet([D*(-V_c + V_g)/(2*L*f_s), 8.0*C*\Delta v_C*f_s]), f_s: OrderedSet([D*(-V_c + V_g)/(2*L*\Delta i_L), 0.125*\Delta i_L/(C*\Delta v_C)]), C: OrderedSet([0.125*\Delta i_L/(\Delta v_C*f_s)]), \Delta v_C: OrderedSet([0.125*\Delta i_L/(C*f_s)]), R: OrderedSet([V_c/i_R, V_c/i_L]), i_R: OrderedSet([V_c/R, i_L]), i_L: OrderedSet([i_R])}
2021-06-22 07:22:30,772
returning: 
OrderedSet([V_g/(2*D - 1), M*V_g, R*i_R, V_g - 2*L*\Delta i_L*f_s/D, R*i_L, (-
4*L*M*\Delta i_L*f_s + V_g*(M + 1))/(M + 1), -16.0*C*L*\Delta v_C*f_s**2/D + V
_g, V_g - 0.25*L*\Delta i_L**2/(C*D*\Delta v_C)])

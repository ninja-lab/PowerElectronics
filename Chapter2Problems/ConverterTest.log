2021-06-10 07:02:32,788
adding c to []
2021-06-10 07:02:32,789
looking for 
c
2021-06-10 07:02:32,835
nonlinsolve returns: 
-d - f
2021-06-10 07:02:32,838

a⋅b - c solved for 
c=
{a⋅b}
2021-06-10 07:02:32,842

c + d + f solved for 
c=
{-d - f}
2021-06-10 07:02:32,848

b + f - x solved for 
c=
∅
2021-06-10 07:02:32,848
Done with 
c
2021-06-10 07:02:32,849
so far c = 
OrderedSet([a*b, -d - f])
2021-06-10 07:02:32,849
solution to c is: 
a⋅b 
2021-06-10 07:02:32,849
recursesym: 
[c]
2021-06-10 07:02:32,849
calling solver looking for 
a
2021-06-10 07:02:32,849
	adding a to [c]
2021-06-10 07:02:32,849
looking for 
a
2021-06-10 07:02:32,871
nonlinsolve returns: 
c
─
b
2021-06-10 07:02:32,872

a⋅b - c solved for 
a=
⎧c⎫
⎨─⎬
⎩b⎭
2021-06-10 07:02:32,876

c + d + f solved for 
a=
∅
2021-06-10 07:02:32,877

b + f - x solved for 
a=
∅
2021-06-10 07:02:32,877
	Done with 
a
2021-06-10 07:02:32,877
	so far a = 
	OrderedSet([c/b])
2021-06-10 07:02:32,877
	solution to a is: 
	c
	─
	b 
2021-06-10 07:02:32,877
	recursesym: 
	[c, a]
2021-06-10 07:02:32,878
	calling solver looking for 
	b
2021-06-10 07:02:32,878
		adding b to [c, a]
2021-06-10 07:02:32,878
looking for 
b
2021-06-10 07:02:32,904
nonlinsolve returns: 
-f + x
2021-06-10 07:02:32,908

a⋅b - c solved for 
b=
⎧c⎫
⎨─⎬
⎩a⎭
2021-06-10 07:02:32,912

c + d + f solved for 
b=
∅
2021-06-10 07:02:32,914

b + f - x solved for 
b=
{-f + x}
2021-06-10 07:02:32,918
		Done with 
b
2021-06-10 07:02:32,918
		so far b = 
		OrderedSet([c/a, -f + x])
2021-06-10 07:02:32,918
		solution to b is: 
		c
		─
		a 
2021-06-10 07:02:32,918
		recursesym: 
		[c, a, b]
2021-06-10 07:02:32,918
		calling solver looking for 
		a
2021-06-10 07:02:32,918
			base case
2021-06-10 07:02:32,919
returning: a=set()
2021-06-10 07:02:32,919
		recursesym: 
		[c, a, b]
2021-06-10 07:02:32,919
		calling solver looking for 
		c
2021-06-10 07:02:32,919
			base case
2021-06-10 07:02:32,919
returning: c=set()
2021-06-10 07:02:32,919
		solution to b is: 
		-f + x 
2021-06-10 07:02:32,919
		recursesym: 
		[c, a, b]
2021-06-10 07:02:32,919
		calling solver looking for 
		f
2021-06-10 07:02:32,919
			adding f to [c, a, b]
2021-06-10 07:02:32,919
looking for 
f
2021-06-10 07:02:32,940
nonlinsolve returns: 
-c - d
2021-06-10 07:02:32,940

a⋅b - c solved for 
f=
∅
2021-06-10 07:02:32,942

c + d + f solved for 
f=
{-c - d}
2021-06-10 07:02:32,952

b + f - x solved for 
f=
{-b + x}
2021-06-10 07:02:32,956
			Done with 
f
2021-06-10 07:02:32,956
			so far f = 
			OrderedSet([-c - d, -b + x])
2021-06-10 07:02:32,957
			solution to f is: 
			-c - d 
2021-06-10 07:02:32,957
			recursesym: 
			[c, a, b, f]
2021-06-10 07:02:32,957
			calling solver looking for 
			c
2021-06-10 07:02:32,957
				base case
2021-06-10 07:02:32,957
returning: c=set()
2021-06-10 07:02:32,957
			recursesym: 
			[c, a, b, f]
2021-06-10 07:02:32,957
			calling solver looking for 
			d
2021-06-10 07:02:32,957
				adding d to [c, a, b, f]
2021-06-10 07:02:32,957
looking for 
d
2021-06-10 07:02:32,976
nonlinsolve returns: 
-c - f
2021-06-10 07:02:32,977

a⋅b - c solved for 
d=
∅
2021-06-10 07:02:32,978

c + d + f solved for 
d=
{-c - f}
2021-06-10 07:02:32,983

b + f - x solved for 
d=
∅
2021-06-10 07:02:32,983
				Done with 
d
2021-06-10 07:02:32,983
				so far d = 
				OrderedSet([-c - f])
2021-06-10 07:02:32,983
				solution to d is: 
				-c - f 
2021-06-10 07:02:32,983
				recursesym: 
				[c, a, b, f, d]
2021-06-10 07:02:32,983
				calling solver looking for 
				c
2021-06-10 07:02:32,984
					base case
2021-06-10 07:02:32,984
returning: c=set()
2021-06-10 07:02:32,984
				recursesym: 
				[c, a, b, f, d]
2021-06-10 07:02:32,984
				calling solver looking for 
				f
2021-06-10 07:02:32,984
					base case
2021-06-10 07:02:32,984
returning: f=set()
2021-06-10 07:02:32,984
end of function, recursesym: {c: set(), a: set(), b: set(), f: set(), d: set()}
2021-06-10 07:02:32,984
returning: 
				OrderedSet([-c - f])
2021-06-10 07:02:32,985
			sub-ing in 
			-c - f for 
			d
2021-06-10 07:02:32,985
			and found 
			f
2021-06-10 07:02:32,985
			solution to f is: 
			-b + x 
2021-06-10 07:02:32,985
			recursesym: 
			[c, a, b, f, d]
2021-06-10 07:02:32,985
			calling solver looking for 
			b
2021-06-10 07:02:32,985
					base case
2021-06-10 07:02:32,985
returning: b=set()
2021-06-10 07:02:32,986
			recursesym: 
			[c, a, b, f, d]
2021-06-10 07:02:32,986
			calling solver looking for 
			x
2021-06-10 07:02:32,986
					adding x to [c, a, b, f, d]
2021-06-10 07:02:32,986
looking for 
x
2021-06-10 07:02:33,009
nonlinsolve returns: 
b + f
2021-06-10 07:02:33,009

a⋅b - c solved for 
x=
∅
2021-06-10 07:02:33,010

c + d + f solved for 
x=
∅
2021-06-10 07:02:33,011

b + f - x solved for 
x=
{b + f}
2021-06-10 07:02:33,014
					Done with 
x
2021-06-10 07:02:33,014
					so far x = 
					OrderedSet([b + f])
2021-06-10 07:02:33,015
					solution to x is: 
					b + f 
2021-06-10 07:02:33,015
					recursesym: 
					[c, a, b, f, d, x]
2021-06-10 07:02:33,015
					calling solver looking for 
					b
2021-06-10 07:02:33,015
						base case
2021-06-10 07:02:33,015
returning: b=set()
2021-06-10 07:02:33,015
					recursesym: 
					[c, a, b, f, d, x]
2021-06-10 07:02:33,015
					calling solver looking for 
					f
2021-06-10 07:02:33,015
						base case
2021-06-10 07:02:33,015
returning: f=set()
2021-06-10 07:02:33,016
end of function, recursesym: {c: set(), a: set(), b: set(), f: set(), d: OrderedSet([-c - f]), x: set()}
2021-06-10 07:02:33,016
returning: 
					OrderedSet([b + f])
2021-06-10 07:02:33,016
			sub-ing in 
			b + f for 
			x
2021-06-10 07:02:33,016
			and found 
			f
2021-06-10 07:02:33,017
end of function, recursesym: {c: set(), a: set(), b: set(), f: set(), d: OrderedSet([-c - f]), x: OrderedSet([b + f])}
2021-06-10 07:02:33,017
returning: 
			OrderedSet([-c - d, -b + x])
2021-06-10 07:02:33,022
		sub-ing in 
		-c - d for 
		f
2021-06-10 07:02:33,022
		and found 
		c + d + x
2021-06-10 07:02:33,022
		sub-ing in 
		-b + x for 
		f
2021-06-10 07:02:33,023
		and found 
		b
2021-06-10 07:02:33,023
		recursesym: 
		[c, a, b, f, d, x]
2021-06-10 07:02:33,023
		calling solver looking for 
		x
2021-06-10 07:02:33,023
						base case
2021-06-10 07:02:33,023
returning: x=OrderedSet([b + f])
2021-06-10 07:02:33,023
		sub-ing in 
		b + f for 
		x
2021-06-10 07:02:33,023
		and found 
		b
2021-06-10 07:02:33,024
end of function, recursesym: {c: set(), a: set(), b: set(), f: OrderedSet([-c - d, -b + x]), d: OrderedSet([-c - f]), x: OrderedSet([b + f])}
2021-06-10 07:02:33,025
returning: 
		OrderedSet([c/a, -f + x, c + d + x])
2021-06-10 07:02:33,025
	sub-ing in 
	c
	─
	a for 
	b
2021-06-10 07:02:33,025
	and found 
	a
2021-06-10 07:02:33,036
	sub-ing in 
	-f + x for 
	b
2021-06-10 07:02:33,037
	and found 
	  c   
	──────
	-f + x
2021-06-10 07:02:33,044
	sub-ing in 
	c + d + x for 
	b
2021-06-10 07:02:33,045
	and found 
	    c    
	─────────
	c + d + x
2021-06-10 07:02:33,045
	recursesym: 
	[c, a, b, f, d, x]
2021-06-10 07:02:33,045
	calling solver looking for 
	c
2021-06-10 07:02:33,045
						base case
2021-06-10 07:02:33,045
returning: c=set()
2021-06-10 07:02:33,046
end of function, recursesym: {c: set(), a: set(), b: OrderedSet([c/a, -f + x, c + d + x]), f: OrderedSet([-c - d, -b + x]), d: OrderedSet([-c - f]), x: OrderedSet([b + f])}
2021-06-10 07:02:33,047
returning: 
	OrderedSet([c/b, c/(-f + x), c/(c + d + x)])
2021-06-10 07:02:33,047
sub-ing in 
c
─
b for 
a
2021-06-10 07:02:33,047
and found 
c
2021-06-10 07:02:33,056
sub-ing in 
  c   
──────
-f + x for 
a
2021-06-10 07:02:33,057
and found 
 b⋅c  
──────
-f + x
2021-06-10 07:02:33,064
sub-ing in 
    c    
─────────
c + d + x for 
a
2021-06-10 07:02:33,064
and found 
   b⋅c   
─────────
c + d + x
2021-06-10 07:02:33,064
recursesym: 
[c, a, b, f, d, x]
2021-06-10 07:02:33,064
calling solver looking for 
b
2021-06-10 07:02:33,064
						base case
2021-06-10 07:02:33,065
returning: b=OrderedSet([c/a, -f + x, c + d + x])
2021-06-10 07:02:33,065
sub-ing in 
c
─
a for 
b
2021-06-10 07:02:33,065
and found 
c
2021-06-10 07:02:33,072
sub-ing in 
-f + x for 
b
2021-06-10 07:02:33,073
and found 
a⋅(-f + x)
2021-06-10 07:02:33,079
sub-ing in 
c + d + x for 
b
2021-06-10 07:02:33,080
and found 
a⋅(c + d + x)
2021-06-10 07:02:33,080
solution to c is: 
-d - f 
2021-06-10 07:02:33,080
recursesym: 
[c, a, b, f, d, x]
2021-06-10 07:02:33,080
calling solver looking for 
d
2021-06-10 07:02:33,080
						base case
2021-06-10 07:02:33,080
returning: d=OrderedSet([-c - f])
2021-06-10 07:02:33,081
sub-ing in 
-c - f for 
d
2021-06-10 07:02:33,081
and found 
c
2021-06-10 07:02:33,081
recursesym: 
[c, a, b, f, d, x]
2021-06-10 07:02:33,081
calling solver looking for 
f
2021-06-10 07:02:33,081
						base case
2021-06-10 07:02:33,082
returning: f=OrderedSet([-c - d, -b + x])
2021-06-10 07:02:33,082
sub-ing in 
-c - d for 
f
2021-06-10 07:02:33,082
and found 
c
2021-06-10 07:02:33,088
sub-ing in 
-b + x for 
f
2021-06-10 07:02:33,089
and found 
b - d - x
2021-06-10 07:02:33,090
end of function, recursesym: {c: set(), a: OrderedSet([c/b, c/(-f + x), c/(c + d + x)]), b: OrderedSet([c/a, -f + x, c + d + x]), f: OrderedSet([-c - d, -b + x]), d: OrderedSet([-c - f]), x: OrderedSet([b + f])}
2021-06-10 07:02:33,091
returning: 
OrderedSet([a*b, -d - f, a*(-f + x), b - d - x])

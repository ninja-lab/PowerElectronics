2021-07-18 14:48:21,556
adding V_c to []
2021-07-18 14:48:21,556
looking for 
V_c
2021-07-18 14:48:21,610
nonlinsolve returns: 
M⋅V_g
2021-07-18 14:48:21,617

D⋅V_g + V_c⋅(1 - D) solved for 
V_c=
⎧D⋅V_g⎫
⎨─────⎬
⎩D - 1⎭
2021-07-18 14:48:21,627

    V_c
M - ───
    V_g solved for 
V_c=
{M⋅V_g}
2021-07-18 14:48:21,629
Done with 
V_c
2021-07-18 14:48:21,630
so far V_c = 
OrderedSet([D*V_g/(D - 1), M*V_g])
2021-07-18 14:48:21,630
solution to V_c is: 
D⋅V_g
─────
D - 1 
2021-07-18 14:48:21,630
recursesym: 
[V_c]
2021-07-18 14:48:21,630
calling solver looking for 
D
2021-07-18 14:48:21,630
	adding D to [V_c]
2021-07-18 14:48:21,630
looking for 
D
2021-07-18 14:48:21,678
nonlinsolve returns: 
   V_c   
─────────
V_c - V_g
2021-07-18 14:48:21,687

D⋅V_g + V_c⋅(1 - D) solved for 
D=
⎧   V_c   ⎫
⎨─────────⎬
⎩V_c - V_g⎭
2021-07-18 14:48:21,694

    V_c
M - ───
    V_g solved for 
D=
∅
2021-07-18 14:48:21,694
	Done with 
D
2021-07-18 14:48:21,694
	so far D = 
	OrderedSet([V_c/(V_c - V_g)])
2021-07-18 14:48:21,694
	solution to D is: 
	   V_c   
	─────────
	V_c - V_g 
2021-07-18 14:48:21,695
	recursesym: 
	[V_c, D]
2021-07-18 14:48:21,695
	calling solver looking for 
	V_c
2021-07-18 14:48:21,695
		base case
2021-07-18 14:48:21,695
returning: V_c=set()
2021-07-18 14:48:21,695
	recursesym: 
	[V_c, D]
2021-07-18 14:48:21,695
	calling solver looking for 
	V_g
2021-07-18 14:48:21,695
		adding V_g to [V_c, D]
2021-07-18 14:48:21,695
looking for 
V_g
2021-07-18 14:48:21,749
nonlinsolve returns: 
V_c
───
 M 
2021-07-18 14:48:21,754

D⋅V_g + V_c⋅(1 - D) solved for 
V_g=
⎧V_c⋅(D - 1)⎫
⎨───────────⎬
⎩     D     ⎭
2021-07-18 14:48:21,771

    V_c
M - ───
    V_g solved for 
V_g=
⎧V_c⎫      
⎨───⎬ \ {0}
⎩ M ⎭      
2021-07-18 14:48:21,774
		Done with 
V_g
2021-07-18 14:48:21,774
		so far V_g = 
		OrderedSet([V_c - V_c/D, V_c/M])
2021-07-18 14:48:21,775
		solution to V_g is: 
		      V_c
		V_c - ───
		       D  
2021-07-18 14:48:21,775
		recursesym: 
		[V_c, D, V_g]
2021-07-18 14:48:21,775
		calling solver looking for 
		D
2021-07-18 14:48:21,775
			base case
2021-07-18 14:48:21,775
returning: D=set()
2021-07-18 14:48:21,775
		recursesym: 
		[V_c, D, V_g]
2021-07-18 14:48:21,775
		calling solver looking for 
		V_c
2021-07-18 14:48:21,775
			base case
2021-07-18 14:48:21,775
returning: V_c=set()
2021-07-18 14:48:21,776
		solution to V_g is: 
		V_c
		───
		 M  
2021-07-18 14:48:21,776
		recursesym: 
		[V_c, D, V_g]
2021-07-18 14:48:21,776
		calling solver looking for 
		M
2021-07-18 14:48:21,776
			adding M to [V_c, D, V_g]
2021-07-18 14:48:21,776
looking for 
M
2021-07-18 14:48:21,803
nonlinsolve returns: 
V_c
───
V_g
2021-07-18 14:48:21,804

D⋅V_g + V_c⋅(1 - D) solved for 
M=
∅
2021-07-18 14:48:21,806

    V_c
M - ───
    V_g solved for 
M=
⎧V_c⎫
⎨───⎬
⎩V_g⎭
2021-07-18 14:48:21,808
			Done with 
M
2021-07-18 14:48:21,808
			so far M = 
			OrderedSet([V_c/V_g])
2021-07-18 14:48:21,809
			solution to M is: 
			V_c
			───
			V_g 
2021-07-18 14:48:21,809
			recursesym: 
			[V_c, D, V_g, M]
2021-07-18 14:48:21,809
			calling solver looking for 
			V_c
2021-07-18 14:48:21,809
				base case
2021-07-18 14:48:21,809
returning: V_c=set()
2021-07-18 14:48:21,809
			recursesym: 
			[V_c, D, V_g, M]
2021-07-18 14:48:21,809
			calling solver looking for 
			V_g
2021-07-18 14:48:21,809
				base case
2021-07-18 14:48:21,809
returning: V_g=set()
2021-07-18 14:48:21,809
end of function, recursesym: {V_c: set(), D: set(), V_g: set(), M: set()}
2021-07-18 14:48:21,810
returning: 
			OrderedSet([V_c/V_g])
2021-07-18 14:48:21,811
		sub-ing in 
		V_c
		───
		V_g for 
		M
2021-07-18 14:48:21,811
		and found 
		V_g
2021-07-18 14:48:21,811
		recursesym: 
		[V_c, D, V_g, M]
2021-07-18 14:48:21,811
		calling solver looking for 
		V_c
2021-07-18 14:48:21,811
				base case
2021-07-18 14:48:21,811
returning: V_c=set()
2021-07-18 14:48:21,811
end of function, recursesym: {V_c: set(), D: set(), V_g: set(), M: OrderedSet([V_c/V_g])}
2021-07-18 14:48:21,812
returning: 
		OrderedSet([V_c - V_c/D, V_c/M])
2021-07-18 14:48:21,813
	sub-ing in 
	      V_c
	V_c - ───
	       D  for 
	V_g
2021-07-18 14:48:21,813
	and found 
	D
2021-07-18 14:48:21,827
	sub-ing in 
	V_c
	───
	 M  for 
	V_g
2021-07-18 14:48:21,827
	and found 
	   V_c   
	─────────
	      V_c
	V_c - ───
	       M 
2021-07-18 14:48:21,828
end of function, recursesym: {V_c: set(), D: set(), V_g: OrderedSet([V_c - V_c/D, V_c/M]), M: OrderedSet([V_c/V_g])}
2021-07-18 14:48:21,828
returning: 
	OrderedSet([V_c/(V_c - V_g), M/(M - 1)])
2021-07-18 14:48:21,834
sub-ing in 
   V_c   
─────────
V_c - V_g for 
D
2021-07-18 14:48:21,835
and found 
          V_c⋅V_g          
───────────────────────────
            ⎛   V_c       ⎞
(V_c - V_g)⋅⎜───────── - 1⎟
            ⎝V_c - V_g    ⎠
2021-07-18 14:48:21,841
sub-ing in 
  M  
─────
M - 1 for 
D
2021-07-18 14:48:21,842
and found 
       M⋅V_g       
───────────────────
        ⎛  M      ⎞
(M - 1)⋅⎜───── - 1⎟
        ⎝M - 1    ⎠
2021-07-18 14:48:21,842
recursesym: 
[V_c, D, V_g, M]
2021-07-18 14:48:21,842
calling solver looking for 
V_g
2021-07-18 14:48:21,842
				base case
2021-07-18 14:48:21,842
returning: V_g=OrderedSet([V_c - V_c/D, V_c/M])
2021-07-18 14:48:21,847
sub-ing in 
      V_c
V_c - ───
       D  for 
V_g
2021-07-18 14:48:21,848
and found 
  ⎛      V_c⎞
D⋅⎜V_c - ───⎟
  ⎝       D ⎠
─────────────
    D - 1    
2021-07-18 14:48:21,857
sub-ing in 
V_c
───
 M  for 
V_g
2021-07-18 14:48:21,857
and found 
  D⋅V_c  
─────────
M⋅(D - 1)
2021-07-18 14:48:21,858
solution to V_c is: 
M⋅V_g 
2021-07-18 14:48:21,858
recursesym: 
[V_c, D, V_g, M]
2021-07-18 14:48:21,858
calling solver looking for 
M
2021-07-18 14:48:21,858
				base case
2021-07-18 14:48:21,858
returning: M=OrderedSet([V_c/V_g])
2021-07-18 14:48:21,859
sub-ing in 
V_c
───
V_g for 
M
2021-07-18 14:48:21,859
and found 
V_c
2021-07-18 14:48:21,859
recursesym: 
[V_c, D, V_g, M]
2021-07-18 14:48:21,859
calling solver looking for 
V_g
2021-07-18 14:48:21,859
				base case
2021-07-18 14:48:21,859
returning: V_g=OrderedSet([V_c - V_c/D, V_c/M])
2021-07-18 14:48:21,871
sub-ing in 
      V_c
V_c - ───
       D  for 
V_g
2021-07-18 14:48:21,871
and found 
  ⎛      V_c⎞
M⋅⎜V_c - ───⎟
  ⎝       D ⎠
2021-07-18 14:48:21,871
sub-ing in 
V_c
───
 M  for 
V_g
2021-07-18 14:48:21,871
and found 
V_c
2021-07-18 14:48:21,872
end of function, recursesym: {V_c: set(), D: OrderedSet([V_c/(V_c - V_g), M/(M - 1)]), V_g: OrderedSet([V_c - V_c/D, V_c/M]), M: OrderedSet([V_c/V_g])}
2021-07-18 14:48:21,872
returning: 
OrderedSet([D*V_g/(D - 1), M*V_g])
2021-07-18 14:48:21,879
adding M to []
2021-07-18 14:48:21,880
looking for 
M
2021-07-18 14:48:21,905
nonlinsolve returns: 
V_c
───
V_g
2021-07-18 14:48:21,906

D⋅V_g + V_c⋅(1 - D) solved for 
M=
∅
2021-07-18 14:48:21,907

    V_c
M - ───
    V_g solved for 
M=
⎧V_c⎫
⎨───⎬
⎩V_g⎭
2021-07-18 14:48:21,910
Done with 
M
2021-07-18 14:48:21,910
so far M = 
OrderedSet([V_c/V_g])
2021-07-18 14:48:21,910
solution to M is: 
V_c
───
V_g 
2021-07-18 14:48:21,910
recursesym: 
[M]
2021-07-18 14:48:21,910
calling solver looking for 
V_c
2021-07-18 14:48:21,910
	adding V_c to [M]
2021-07-18 14:48:21,911
looking for 
V_c
2021-07-18 14:48:21,929
nonlinsolve returns: 
M⋅V_g
2021-07-18 14:48:21,931

D⋅V_g + V_c⋅(1 - D) solved for 
V_c=
⎧D⋅V_g⎫
⎨─────⎬
⎩D - 1⎭
2021-07-18 14:48:21,938

    V_c
M - ───
    V_g solved for 
V_c=
{M⋅V_g}
2021-07-18 14:48:21,940
	Done with 
V_c
2021-07-18 14:48:21,941
	so far V_c = 
	OrderedSet([D*V_g/(D - 1), M*V_g])
2021-07-18 14:48:21,941
	solution to V_c is: 
	D⋅V_g
	─────
	D - 1 
2021-07-18 14:48:21,941
	recursesym: 
	[M, V_c]
2021-07-18 14:48:21,941
	calling solver looking for 
	D
2021-07-18 14:48:21,941
		adding D to [M, V_c]
2021-07-18 14:48:21,942
looking for 
D
2021-07-18 14:48:21,976
nonlinsolve returns: 
   V_c   
─────────
V_c - V_g
2021-07-18 14:48:21,981

D⋅V_g + V_c⋅(1 - D) solved for 
D=
⎧   V_c   ⎫
⎨─────────⎬
⎩V_c - V_g⎭
2021-07-18 14:48:21,985

    V_c
M - ───
    V_g solved for 
D=
∅
2021-07-18 14:48:21,985
		Done with 
D
2021-07-18 14:48:21,986
		so far D = 
		OrderedSet([V_c/(V_c - V_g)])
2021-07-18 14:48:21,986
		solution to D is: 
		   V_c   
		─────────
		V_c - V_g 
2021-07-18 14:48:21,986
		recursesym: 
		[M, V_c, D]
2021-07-18 14:48:21,986
		calling solver looking for 
		V_c
2021-07-18 14:48:21,986
			base case
2021-07-18 14:48:21,986
returning: V_c=set()
2021-07-18 14:48:21,987
		recursesym: 
		[M, V_c, D]
2021-07-18 14:48:21,987
		calling solver looking for 
		V_g
2021-07-18 14:48:21,987
			adding V_g to [M, V_c, D]
2021-07-18 14:48:21,987
looking for 
V_g
2021-07-18 14:48:22,032
nonlinsolve returns: 
V_c
───
 M 
2021-07-18 14:48:22,034

D⋅V_g + V_c⋅(1 - D) solved for 
V_g=
⎧V_c⋅(D - 1)⎫
⎨───────────⎬
⎩     D     ⎭
2021-07-18 14:48:22,043

    V_c
M - ───
    V_g solved for 
V_g=
⎧V_c⎫      
⎨───⎬ \ {0}
⎩ M ⎭      
2021-07-18 14:48:22,045
			Done with 
V_g
2021-07-18 14:48:22,046
			so far V_g = 
			OrderedSet([V_c - V_c/D, V_c/M])
2021-07-18 14:48:22,046
			solution to V_g is: 
			      V_c
			V_c - ───
			       D  
2021-07-18 14:48:22,046
			recursesym: 
			[M, V_c, D, V_g]
2021-07-18 14:48:22,046
			calling solver looking for 
			D
2021-07-18 14:48:22,046
				base case
2021-07-18 14:48:22,046
returning: D=set()
2021-07-18 14:48:22,047
			recursesym: 
			[M, V_c, D, V_g]
2021-07-18 14:48:22,047
			calling solver looking for 
			V_c
2021-07-18 14:48:22,047
				base case
2021-07-18 14:48:22,047
returning: V_c=set()
2021-07-18 14:48:22,047
			solution to V_g is: 
			V_c
			───
			 M  
2021-07-18 14:48:22,047
			recursesym: 
			[M, V_c, D, V_g]
2021-07-18 14:48:22,047
			calling solver looking for 
			M
2021-07-18 14:48:22,047
				base case
2021-07-18 14:48:22,047
returning: M=set()
2021-07-18 14:48:22,047
			recursesym: 
			[M, V_c, D, V_g]
2021-07-18 14:48:22,047
			calling solver looking for 
			V_c
2021-07-18 14:48:22,047
				base case
2021-07-18 14:48:22,047
returning: V_c=set()
2021-07-18 14:48:22,048
end of function, recursesym: {M: set(), V_c: set(), D: set(), V_g: set()}
2021-07-18 14:48:22,048
returning: 
			OrderedSet([V_c - V_c/D, V_c/M])
2021-07-18 14:48:22,048
		sub-ing in 
		      V_c
		V_c - ───
		       D  for 
		V_g
2021-07-18 14:48:22,048
		and found 
		D
2021-07-18 14:48:22,053
		sub-ing in 
		V_c
		───
		 M  for 
		V_g
2021-07-18 14:48:22,053
		and found 
		   V_c   
		─────────
		      V_c
		V_c - ───
		       M 
2021-07-18 14:48:22,054
end of function, recursesym: {M: set(), V_c: set(), D: set(), V_g: OrderedSet([V_c - V_c/D, V_c/M])}
2021-07-18 14:48:22,054
returning: 
		OrderedSet([V_c/(V_c - V_g), M/(M - 1)])
2021-07-18 14:48:22,056
	sub-ing in 
	   V_c   
	─────────
	V_c - V_g for 
	D
2021-07-18 14:48:22,057
	and found 
	          V_c⋅V_g          
	───────────────────────────
	            ⎛   V_c       ⎞
	(V_c - V_g)⋅⎜───────── - 1⎟
	            ⎝V_c - V_g    ⎠
2021-07-18 14:48:22,060
	sub-ing in 
	  M  
	─────
	M - 1 for 
	D
2021-07-18 14:48:22,060
	and found 
	       M⋅V_g       
	───────────────────
	        ⎛  M      ⎞
	(M - 1)⋅⎜───── - 1⎟
	        ⎝M - 1    ⎠
2021-07-18 14:48:22,061
	recursesym: 
	[M, V_c, D, V_g]
2021-07-18 14:48:22,061
	calling solver looking for 
	V_g
2021-07-18 14:48:22,061
				base case
2021-07-18 14:48:22,061
returning: V_g=OrderedSet([V_c - V_c/D, V_c/M])
2021-07-18 14:48:22,064
	sub-ing in 
	      V_c
	V_c - ───
	       D  for 
	V_g
2021-07-18 14:48:22,065
	and found 
	  ⎛      V_c⎞
	D⋅⎜V_c - ───⎟
	  ⎝       D ⎠
	─────────────
	    D - 1    
2021-07-18 14:48:22,071
	sub-ing in 
	V_c
	───
	 M  for 
	V_g
2021-07-18 14:48:22,071
	and found 
	  D⋅V_c  
	─────────
	M⋅(D - 1)
2021-07-18 14:48:22,071
	solution to V_c is: 
	M⋅V_g 
2021-07-18 14:48:22,071
	recursesym: 
	[M, V_c, D, V_g]
2021-07-18 14:48:22,072
	calling solver looking for 
	M
2021-07-18 14:48:22,072
				base case
2021-07-18 14:48:22,072
returning: M=set()
2021-07-18 14:48:22,072
	recursesym: 
	[M, V_c, D, V_g]
2021-07-18 14:48:22,072
	calling solver looking for 
	V_g
2021-07-18 14:48:22,072
				base case
2021-07-18 14:48:22,072
returning: V_g=OrderedSet([V_c - V_c/D, V_c/M])
2021-07-18 14:48:22,078
	sub-ing in 
	      V_c
	V_c - ───
	       D  for 
	V_g
2021-07-18 14:48:22,079
	and found 
	  ⎛      V_c⎞
	M⋅⎜V_c - ───⎟
	  ⎝       D ⎠
2021-07-18 14:48:22,079
	sub-ing in 
	V_c
	───
	 M  for 
	V_g
2021-07-18 14:48:22,079
	and found 
	V_c
2021-07-18 14:48:22,080
end of function, recursesym: {M: set(), V_c: set(), D: OrderedSet([V_c/(V_c - V_g), M/(M - 1)]), V_g: OrderedSet([V_c - V_c/D, V_c/M])}
2021-07-18 14:48:22,080
returning: 
	OrderedSet([D*V_g/(D - 1), M*V_g])
2021-07-18 14:48:22,086
sub-ing in 
D⋅V_g
─────
D - 1 for 
V_c
2021-07-18 14:48:22,086
and found 
  D  
─────
D - 1
2021-07-18 14:48:22,086
sub-ing in 
M⋅V_g for 
V_c
2021-07-18 14:48:22,087
and found 
M
2021-07-18 14:48:22,087
recursesym: 
[M, V_c, D, V_g]
2021-07-18 14:48:22,087
calling solver looking for 
V_g
2021-07-18 14:48:22,087
				base case
2021-07-18 14:48:22,087
returning: V_g=OrderedSet([V_c - V_c/D, V_c/M])
2021-07-18 14:48:22,096
sub-ing in 
      V_c
V_c - ───
       D  for 
V_g
2021-07-18 14:48:22,097
and found 
   V_c   
─────────
      V_c
V_c - ───
       D 
2021-07-18 14:48:22,097
sub-ing in 
V_c
───
 M  for 
V_g
2021-07-18 14:48:22,097
and found 
M
2021-07-18 14:48:22,098
end of function, recursesym: {M: set(), V_c: OrderedSet([D*V_g/(D - 1), M*V_g]), D: OrderedSet([V_c/(V_c - V_g), M/(M - 1)]), V_g: OrderedSet([V_c - V_c/D, V_c/M])}
2021-07-18 14:48:22,099
returning: 
OrderedSet([V_c/V_g, D/(D - 1)])
2021-07-18 14:48:22,130
adding i_L to []
2021-07-18 14:48:22,130
looking for 
i_L
2021-07-18 14:48:22,239
nonlinsolve returns: 
   V_c   
─────────
R⋅(D - 1)
2021-07-18 14:48:22,240

D⋅V_g + V_c⋅(1 - D) solved for 
i_L=
∅
2021-07-18 14:48:22,240

    V_c
M - ───
    V_g solved for 
i_L=
∅
2021-07-18 14:48:22,252

  D⋅V_c           ⎛       V_c⎞
- ───── + (1 - D)⋅⎜-i_L - ───⎟
    R             ⎝        R ⎠ solved for 
i_L=
⎧  D⋅V_c     V_c⎫
⎨───────── - ───⎬
⎩R⋅(D - 1)    R ⎭
2021-07-18 14:48:22,267

    V_c
R - ───
    i_R solved for 
i_L=
∅
2021-07-18 14:48:22,267
Done with 
i_L
2021-07-18 14:48:22,267
so far i_L = 
OrderedSet([V_c/(R*(D - 1))])
2021-07-18 14:48:22,267
solution to i_L is: 
   V_c   
─────────
R⋅(D - 1) 
2021-07-18 14:48:22,267
recursesym: 
[i_L]
2021-07-18 14:48:22,268
calling solver looking for 
D
2021-07-18 14:48:22,268
	adding D to [i_L]
2021-07-18 14:48:22,268
looking for 
D
2021-07-18 14:48:22,329
nonlinsolve returns: 
   V_c   
─────────
V_c - V_g
2021-07-18 14:48:22,336

D⋅V_g + V_c⋅(1 - D) solved for 
D=
⎧   V_c   ⎫
⎨─────────⎬
⎩V_c - V_g⎭
2021-07-18 14:48:22,341

    V_c
M - ───
    V_g solved for 
D=
∅
2021-07-18 14:48:22,361

  D⋅V_c           ⎛       V_c⎞
- ───── + (1 - D)⋅⎜-i_L - ───⎟
    R             ⎝        R ⎠ solved for 
D=
⎧R⋅i_L + V_c⎫
⎨───────────⎬
⎩   R⋅i_L   ⎭
2021-07-18 14:48:22,370

    V_c
R - ───
    i_R solved for 
D=
∅
2021-07-18 14:48:22,371
	Done with 
D
2021-07-18 14:48:22,371
	so far D = 
	OrderedSet([V_c/(V_c - V_g), 1 + V_c/(R*i_L)])
2021-07-18 14:48:22,371
	solution to D is: 
	   V_c   
	─────────
	V_c - V_g 
2021-07-18 14:48:22,372
	recursesym: 
	[i_L, D]
2021-07-18 14:48:22,372
	calling solver looking for 
	V_c
2021-07-18 14:48:22,372
		adding V_c to [i_L, D]
2021-07-18 14:48:22,372
looking for 
V_c
2021-07-18 14:48:22,417
nonlinsolve returns: 
M⋅V_g
2021-07-18 14:48:22,423

D⋅V_g + V_c⋅(1 - D) solved for 
V_c=
⎧D⋅V_g⎫
⎨─────⎬
⎩D - 1⎭
2021-07-18 14:48:22,430

    V_c
M - ───
    V_g solved for 
V_c=
{M⋅V_g}
2021-07-18 14:48:22,447

  D⋅V_c           ⎛       V_c⎞
- ───── + (1 - D)⋅⎜-i_L - ───⎟
    R             ⎝        R ⎠ solved for 
V_c=
{R⋅i_L⋅(D - 1)}
2021-07-18 14:48:22,455

    V_c
R - ───
    i_R solved for 
V_c=
{R⋅i_R}
2021-07-18 14:48:22,457
		Done with 
V_c
2021-07-18 14:48:22,458
		so far V_c = 
		OrderedSet([D*V_g/(D - 1), M*V_g, R*i_L*(D - 1), R*i_R])
2021-07-18 14:48:22,458
		solution to V_c is: 
		D⋅V_g
		─────
		D - 1 
2021-07-18 14:48:22,458
		recursesym: 
		[i_L, D, V_c]
2021-07-18 14:48:22,458
		calling solver looking for 
		D
2021-07-18 14:48:22,458
			base case
2021-07-18 14:48:22,458
returning: D=set()
2021-07-18 14:48:22,458
		recursesym: 
		[i_L, D, V_c]
2021-07-18 14:48:22,458
		calling solver looking for 
		V_g
2021-07-18 14:48:22,459
			adding V_g to [i_L, D, V_c]
2021-07-18 14:48:22,459
looking for 
V_g
2021-07-18 14:48:22,527
nonlinsolve returns: 
V_c
───
 M 
2021-07-18 14:48:22,531

D⋅V_g + V_c⋅(1 - D) solved for 
V_g=
⎧V_c⋅(D - 1)⎫
⎨───────────⎬
⎩     D     ⎭
2021-07-18 14:48:22,552

    V_c
M - ───
    V_g solved for 
V_g=
⎧V_c⎫      
⎨───⎬ \ {0}
⎩ M ⎭      
2021-07-18 14:48:22,558

  D⋅V_c           ⎛       V_c⎞
- ───── + (1 - D)⋅⎜-i_L - ───⎟
    R             ⎝        R ⎠ solved for 
V_g=
∅
2021-07-18 14:48:22,558

    V_c
R - ───
    i_R solved for 
V_g=
∅
2021-07-18 14:48:22,558
			Done with 
V_g
2021-07-18 14:48:22,559
			so far V_g = 
			OrderedSet([V_c - V_c/D, V_c/M])
2021-07-18 14:48:22,559
			solution to V_g is: 
			      V_c
			V_c - ───
			       D  
2021-07-18 14:48:22,559
			recursesym: 
			[i_L, D, V_c, V_g]
2021-07-18 14:48:22,559
			calling solver looking for 
			D
2021-07-18 14:48:22,559
				base case
2021-07-18 14:48:22,559
returning: D=set()
2021-07-18 14:48:22,559
			recursesym: 
			[i_L, D, V_c, V_g]
2021-07-18 14:48:22,560
			calling solver looking for 
			V_c
2021-07-18 14:48:22,560
				base case
2021-07-18 14:48:22,560
returning: V_c=set()
2021-07-18 14:48:22,560
			solution to V_g is: 
			V_c
			───
			 M  
2021-07-18 14:48:22,560
			recursesym: 
			[i_L, D, V_c, V_g]
2021-07-18 14:48:22,560
			calling solver looking for 
			M
2021-07-18 14:48:22,560
				adding M to [i_L, D, V_c, V_g]
2021-07-18 14:48:22,560
looking for 
M
2021-07-18 14:48:22,607
nonlinsolve returns: 
V_c
───
V_g
2021-07-18 14:48:22,607

D⋅V_g + V_c⋅(1 - D) solved for 
M=
∅
2021-07-18 14:48:22,609

    V_c
M - ───
    V_g solved for 
M=
⎧V_c⎫
⎨───⎬
⎩V_g⎭
2021-07-18 14:48:22,612

  D⋅V_c           ⎛       V_c⎞
- ───── + (1 - D)⋅⎜-i_L - ───⎟
    R             ⎝        R ⎠ solved for 
M=
∅
2021-07-18 14:48:22,613

    V_c
R - ───
    i_R solved for 
M=
∅
2021-07-18 14:48:22,613
				Done with 
M
2021-07-18 14:48:22,613
				so far M = 
				OrderedSet([V_c/V_g])
2021-07-18 14:48:22,613
				solution to M is: 
				V_c
				───
				V_g 
2021-07-18 14:48:22,613
				recursesym: 
				[i_L, D, V_c, V_g, M]
2021-07-18 14:48:22,613
				calling solver looking for 
				V_c
2021-07-18 14:48:22,613
					base case
2021-07-18 14:48:22,614
returning: V_c=set()
2021-07-18 14:48:22,614
				recursesym: 
				[i_L, D, V_c, V_g, M]
2021-07-18 14:48:22,614
				calling solver looking for 
				V_g
2021-07-18 14:48:22,614
					base case
2021-07-18 14:48:22,614
returning: V_g=set()
2021-07-18 14:48:22,614
end of function, recursesym: {i_L: set(), D: set(), V_c: set(), V_g: set(), M: set()}
2021-07-18 14:48:22,614
returning: 
				OrderedSet([V_c/V_g])
2021-07-18 14:48:22,614
			sub-ing in 
			V_c
			───
			V_g for 
			M
2021-07-18 14:48:22,614
			and found 
			V_g
2021-07-18 14:48:22,615
			recursesym: 
			[i_L, D, V_c, V_g, M]
2021-07-18 14:48:22,615
			calling solver looking for 
			V_c
2021-07-18 14:48:22,615
					base case
2021-07-18 14:48:22,615
returning: V_c=set()
2021-07-18 14:48:22,615
end of function, recursesym: {i_L: set(), D: set(), V_c: set(), V_g: set(), M: OrderedSet([V_c/V_g])}
2021-07-18 14:48:22,615
returning: 
			OrderedSet([V_c - V_c/D, V_c/M])
2021-07-18 14:48:22,619
		sub-ing in 
		      V_c
		V_c - ───
		       D  for 
		V_g
2021-07-18 14:48:22,620
		and found 
		  ⎛      V_c⎞
		D⋅⎜V_c - ───⎟
		  ⎝       D ⎠
		─────────────
		    D - 1    
2021-07-18 14:48:22,627
		sub-ing in 
		V_c
		───
		 M  for 
		V_g
2021-07-18 14:48:22,628
		and found 
		  D⋅V_c  
		─────────
		M⋅(D - 1)
2021-07-18 14:48:22,628
		solution to V_c is: 
		M⋅V_g 
2021-07-18 14:48:22,628
		recursesym: 
		[i_L, D, V_c, V_g, M]
2021-07-18 14:48:22,628
		calling solver looking for 
		M
2021-07-18 14:48:22,628
					base case
2021-07-18 14:48:22,628
returning: M=OrderedSet([V_c/V_g])
2021-07-18 14:48:22,629
		sub-ing in 
		V_c
		───
		V_g for 
		M
2021-07-18 14:48:22,629
		and found 
		V_c
2021-07-18 14:48:22,629
		recursesym: 
		[i_L, D, V_c, V_g, M]
2021-07-18 14:48:22,629
		calling solver looking for 
		V_g
2021-07-18 14:48:22,629
					base case
2021-07-18 14:48:22,629
returning: V_g=OrderedSet([V_c - V_c/D, V_c/M])
2021-07-18 14:48:22,639
		sub-ing in 
		      V_c
		V_c - ───
		       D  for 
		V_g
2021-07-18 14:48:22,639
		and found 
		  ⎛      V_c⎞
		M⋅⎜V_c - ───⎟
		  ⎝       D ⎠
2021-07-18 14:48:22,639
		sub-ing in 
		V_c
		───
		 M  for 
		V_g
2021-07-18 14:48:22,639
		and found 
		V_c
2021-07-18 14:48:22,640
		solution to V_c is: 
		R⋅i_L⋅(D - 1) 
2021-07-18 14:48:22,640
		recursesym: 
		[i_L, D, V_c, V_g, M]
2021-07-18 14:48:22,640
		calling solver looking for 
		D
2021-07-18 14:48:22,640
					base case
2021-07-18 14:48:22,640
returning: D=set()
2021-07-18 14:48:22,640
		recursesym: 
		[i_L, D, V_c, V_g, M]
2021-07-18 14:48:22,641
		calling solver looking for 
		R
2021-07-18 14:48:22,641
					adding R to [i_L, D, V_c, V_g, M]
2021-07-18 14:48:22,641
looking for 
R
2021-07-18 14:48:22,710
nonlinsolve returns: 
V_c
───
i_R
2021-07-18 14:48:22,710

D⋅V_g + V_c⋅(1 - D) solved for 
R=
∅
2021-07-18 14:48:22,711

    V_c
M - ───
    V_g solved for 
R=
∅
2021-07-18 14:48:22,728

  D⋅V_c           ⎛       V_c⎞
- ───── + (1 - D)⋅⎜-i_L - ───⎟
    R             ⎝        R ⎠ solved for 
R=
⎧D⋅V_c      ⎫      
⎪───── - V_c⎪      
⎨D - 1      ⎬      
⎪───────────⎪ \ {0}
⎩    i_L    ⎭      
2021-07-18 14:48:22,739

    V_c
R - ───
    i_R solved for 
R=
⎧V_c⎫
⎨───⎬
⎩i_R⎭
2021-07-18 14:48:22,741
					Done with 
R
2021-07-18 14:48:22,741
					so far R = 
					OrderedSet([V_c/(i_L*(D - 1)), V_c/i_R])
2021-07-18 14:48:22,742
					solution to R is: 
					    V_c    
					───────────
					i_L⋅(D - 1) 
2021-07-18 14:48:22,742
					recursesym: 
					[i_L, D, V_c, V_g, M, R]
2021-07-18 14:48:22,742
					calling solver looking for 
					D
2021-07-18 14:48:22,742
						base case
2021-07-18 14:48:22,742
returning: D=set()
2021-07-18 14:48:22,742
					recursesym: 
					[i_L, D, V_c, V_g, M, R]
2021-07-18 14:48:22,742
					calling solver looking for 
					V_c
2021-07-18 14:48:22,742
						base case
2021-07-18 14:48:22,742
returning: V_c=set()
2021-07-18 14:48:22,743
					recursesym: 
					[i_L, D, V_c, V_g, M, R]
2021-07-18 14:48:22,743
					calling solver looking for 
					i_L
2021-07-18 14:48:22,743
						base case
2021-07-18 14:48:22,743
returning: i_L=set()
2021-07-18 14:48:22,743
					solution to R is: 
					V_c
					───
					i_R 
2021-07-18 14:48:22,743
					recursesym: 
					[i_L, D, V_c, V_g, M, R]
2021-07-18 14:48:22,743
					calling solver looking for 
					V_c
2021-07-18 14:48:22,743
						base case
2021-07-18 14:48:22,743
returning: V_c=set()
2021-07-18 14:48:22,744
					recursesym: 
					[i_L, D, V_c, V_g, M, R]
2021-07-18 14:48:22,744
					calling solver looking for 
					i_R
2021-07-18 14:48:22,744
						adding i_R to [i_L, D, V_c, V_g, M, R]
2021-07-18 14:48:22,744
looking for 
i_R
2021-07-18 14:48:22,794
nonlinsolve returns: 
V_c
───
 R 
2021-07-18 14:48:22,795

D⋅V_g + V_c⋅(1 - D) solved for 
i_R=
∅
2021-07-18 14:48:22,795

    V_c
M - ───
    V_g solved for 
i_R=
∅
2021-07-18 14:48:22,796

  D⋅V_c           ⎛       V_c⎞
- ───── + (1 - D)⋅⎜-i_L - ───⎟
    R             ⎝        R ⎠ solved for 
i_R=
∅
2021-07-18 14:48:22,803

    V_c
R - ───
    i_R solved for 
i_R=
⎧V_c⎫      
⎨───⎬ \ {0}
⎩ R ⎭      
2021-07-18 14:48:22,805
						Done with 
i_R
2021-07-18 14:48:22,805
						so far i_R = 
						OrderedSet([V_c/R])
2021-07-18 14:48:22,805
						solution to i_R is: 
						V_c
						───
						 R  
2021-07-18 14:48:22,806
						recursesym: 
						[i_L, D, V_c, V_g, M, R, i_R]
2021-07-18 14:48:22,806
						calling solver looking for 
						R
2021-07-18 14:48:22,806
							base case
2021-07-18 14:48:22,806
returning: R=set()
2021-07-18 14:48:22,806
						recursesym: 
						[i_L, D, V_c, V_g, M, R, i_R]
2021-07-18 14:48:22,806
						calling solver looking for 
						V_c
2021-07-18 14:48:22,806
							base case
2021-07-18 14:48:22,806
returning: V_c=set()
2021-07-18 14:48:22,807
end of function, recursesym: {i_L: set(), D: set(), V_c: set(), V_g: OrderedSet([V_c - V_c/D, V_c/M]), M: OrderedSet([V_c/V_g]), R: set(), i_R: set()}
2021-07-18 14:48:22,807
returning: 
						OrderedSet([V_c/R])
2021-07-18 14:48:22,807
					sub-ing in 
					V_c
					───
					 R  for 
					i_R
2021-07-18 14:48:22,807
					and found 
					R
2021-07-18 14:48:22,808
end of function, recursesym: {i_L: set(), D: set(), V_c: set(), V_g: OrderedSet([V_c - V_c/D, V_c/M]), M: OrderedSet([V_c/V_g]), R: set(), i_R: OrderedSet([V_c/R])}
2021-07-18 14:48:22,808
returning: 
					OrderedSet([V_c/(i_L*(D - 1)), V_c/i_R])
2021-07-18 14:48:22,809
		sub-ing in 
		    V_c    
		───────────
		i_L⋅(D - 1) for 
		R
2021-07-18 14:48:22,809
		and found 
		V_c
2021-07-18 14:48:22,818
		sub-ing in 
		V_c
		───
		i_R for 
		R
2021-07-18 14:48:22,819
		and found 
		V_c⋅i_L⋅(D - 1)
		───────────────
		      i_R      
2021-07-18 14:48:22,819
		recursesym: 
		[i_L, D, V_c, V_g, M, R, i_R]
2021-07-18 14:48:22,819
		calling solver looking for 
		i_L
2021-07-18 14:48:22,819
							base case
2021-07-18 14:48:22,819
returning: i_L=set()
2021-07-18 14:48:22,819
		solution to V_c is: 
		R⋅i_R 
2021-07-18 14:48:22,820
		recursesym: 
		[i_L, D, V_c, V_g, M, R, i_R]
2021-07-18 14:48:22,820
		calling solver looking for 
		R
2021-07-18 14:48:22,820
							base case
2021-07-18 14:48:22,820
returning: R=OrderedSet([V_c/(i_L*(D - 1)), V_c/i_R])
2021-07-18 14:48:22,828
		sub-ing in 
		    V_c    
		───────────
		i_L⋅(D - 1) for 
		R
2021-07-18 14:48:22,829
		and found 
		  V_c⋅i_R  
		───────────
		i_L⋅(D - 1)
2021-07-18 14:48:22,829
		sub-ing in 
		V_c
		───
		i_R for 
		R
2021-07-18 14:48:22,829
		and found 
		V_c
2021-07-18 14:48:22,829
		recursesym: 
		[i_L, D, V_c, V_g, M, R, i_R]
2021-07-18 14:48:22,829
		calling solver looking for 
		i_R
2021-07-18 14:48:22,829
							base case
2021-07-18 14:48:22,829
returning: i_R=OrderedSet([V_c/R])
2021-07-18 14:48:22,830
		sub-ing in 
		V_c
		───
		 R  for 
		i_R
2021-07-18 14:48:22,830
		and found 
		V_c
2021-07-18 14:48:22,830
end of function, recursesym: {i_L: set(), D: set(), V_c: set(), V_g: OrderedSet([V_c - V_c/D, V_c/M]), M: OrderedSet([V_c/V_g]), R: OrderedSet([V_c/(i_L*(D - 1)), V_c/i_R]), i_R: OrderedSet([V_c/R])}
2021-07-18 14:48:22,831
returning: 
		OrderedSet([D*V_g/(D - 1), M*V_g, R*i_L*(D - 1), R*i_R])
2021-07-18 14:48:22,842
	sub-ing in 
	D⋅V_g
	─────
	D - 1 for 
	V_c
2021-07-18 14:48:22,843
	and found 
	        D⋅V_g        
	─────────────────────
	        ⎛D⋅V_g      ⎞
	(D - 1)⋅⎜───── - V_g⎟
	        ⎝D - 1      ⎠
2021-07-18 14:48:22,851
	sub-ing in 
	M⋅V_g for 
	V_c
2021-07-18 14:48:22,852
	and found 
	   M⋅V_g   
	───────────
	M⋅V_g - V_g
2021-07-18 14:48:22,875
	sub-ing in 
	R⋅i_L⋅(D - 1) for 
	V_c
2021-07-18 14:48:22,876
	and found 
	   R⋅i_L⋅(D - 1)   
	───────────────────
	R⋅i_L⋅(D - 1) - V_g
2021-07-18 14:48:22,886
	sub-ing in 
	R⋅i_R for 
	V_c
2021-07-18 14:48:22,886
	and found 
	   R⋅i_R   
	───────────
	R⋅i_R - V_g
2021-07-18 14:48:22,887
	recursesym: 
	[i_L, D, V_c, V_g, M, R, i_R]
2021-07-18 14:48:22,887
	calling solver looking for 
	V_g
2021-07-18 14:48:22,887
							base case
2021-07-18 14:48:22,887
returning: V_g=OrderedSet([V_c - V_c/D, V_c/M])
2021-07-18 14:48:22,888
	sub-ing in 
	      V_c
	V_c - ───
	       D  for 
	V_g
2021-07-18 14:48:22,888
	and found 
	D
2021-07-18 14:48:22,894
	sub-ing in 
	V_c
	───
	 M  for 
	V_g
2021-07-18 14:48:22,894
	and found 
	   V_c   
	─────────
	      V_c
	V_c - ───
	       M 
2021-07-18 14:48:22,895
	solution to D is: 
	     V_c 
	1 + ─────
	    R⋅i_L 
2021-07-18 14:48:22,895
	recursesym: 
	[i_L, D, V_c, V_g, M, R, i_R]
2021-07-18 14:48:22,895
	calling solver looking for 
	R
2021-07-18 14:48:22,895
							base case
2021-07-18 14:48:22,895
returning: R=OrderedSet([V_c/(i_L*(D - 1)), V_c/i_R])
2021-07-18 14:48:22,897
	sub-ing in 
	    V_c    
	───────────
	i_L⋅(D - 1) for 
	R
2021-07-18 14:48:22,897
	and found 
	D
2021-07-18 14:48:22,904
	sub-ing in 
	V_c
	───
	i_R for 
	R
2021-07-18 14:48:22,904
	and found 
	    i_R
	1 + ───
	    i_L
2021-07-18 14:48:22,905
	recursesym: 
	[i_L, D, V_c, V_g, M, R, i_R]
2021-07-18 14:48:22,905
	calling solver looking for 
	V_c
2021-07-18 14:48:22,905
							base case
2021-07-18 14:48:22,905
returning: V_c=OrderedSet([D*V_g/(D - 1), M*V_g, R*i_L*(D - 1), R*i_R])
2021-07-18 14:48:22,928
	sub-ing in 
	D⋅V_g
	─────
	D - 1 for 
	V_c
2021-07-18 14:48:22,928
	and found 
	    D⋅V_g        
	───────────── + 1
	R⋅i_L⋅(D - 1)    
2021-07-18 14:48:22,940
	sub-ing in 
	M⋅V_g for 
	V_c
2021-07-18 14:48:22,940
	and found 
	M⋅V_g    
	───── + 1
	R⋅i_L    
2021-07-18 14:48:22,941
	sub-ing in 
	R⋅i_L⋅(D - 1) for 
	V_c
2021-07-18 14:48:22,941
	and found 
	D
2021-07-18 14:48:22,945
	sub-ing in 
	R⋅i_R for 
	V_c
2021-07-18 14:48:22,945
	and found 
	    i_R
	1 + ───
	    i_L
2021-07-18 14:48:22,945
	recursesym: 
	[i_L, D, V_c, V_g, M, R, i_R]
2021-07-18 14:48:22,945
	calling solver looking for 
	i_L
2021-07-18 14:48:22,945
							base case
2021-07-18 14:48:22,946
returning: i_L=set()
2021-07-18 14:48:22,947
end of function, recursesym: {i_L: set(), D: set(), V_c: OrderedSet([D*V_g/(D - 1), M*V_g, R*i_L*(D - 1), R*i_R]), V_g: OrderedSet([V_c - V_c/D, V_c/M]), M: OrderedSet([V_c/V_g]), R: OrderedSet([V_c/(i_L*(D - 1)), V_c/i_R]), i_R: OrderedSet([V_c/R])}
2021-07-18 14:48:22,948
returning: 
	OrderedSet([V_c/(V_c - V_g), 1 + V_c/(R*i_L), M/(M - 1), R*i_R/(R*i_R - V_g), 
	(i_L + i_R)/i_L, M*V_g/(R*i_L) + 1])
2021-07-18 14:48:22,962
sub-ing in 
   V_c   
─────────
V_c - V_g for 
D
2021-07-18 14:48:22,962
and found 
       V_c       
─────────────────
  ⎛   V_c       ⎞
R⋅⎜───────── - 1⎟
  ⎝V_c - V_g    ⎠
2021-07-18 14:48:22,963
sub-ing in 
     V_c 
1 + ─────
    R⋅i_L for 
D
2021-07-18 14:48:22,963
and found 
i_L
2021-07-18 14:48:22,972
sub-ing in 
  M  
─────
M - 1 for 
D
2021-07-18 14:48:22,973
and found 
     V_c     
─────────────
  ⎛  M      ⎞
R⋅⎜───── - 1⎟
  ⎝M - 1    ⎠
2021-07-18 14:48:22,989
sub-ing in 
   R⋅i_R   
───────────
R⋅i_R - V_g for 
D
2021-07-18 14:48:22,990
and found 
        V_c        
───────────────────
  ⎛   R⋅i_R       ⎞
R⋅⎜─────────── - 1⎟
  ⎝R⋅i_R - V_g    ⎠
2021-07-18 14:48:23,002
sub-ing in 
i_L + i_R
─────────
   i_L    for 
D
2021-07-18 14:48:23,003
and found 
       V_c        
──────────────────
  ⎛     i_L + i_R⎞
R⋅⎜-1 + ─────────⎟
  ⎝        i_L   ⎠
2021-07-18 14:48:23,010
sub-ing in 
M⋅V_g    
───── + 1
R⋅i_L     for 
D
2021-07-18 14:48:23,010
and found 
V_c⋅i_L
───────
 M⋅V_g 
2021-07-18 14:48:23,011
recursesym: 
[i_L, D, V_c, V_g, M, R, i_R]
2021-07-18 14:48:23,011
calling solver looking for 
R
2021-07-18 14:48:23,011
							base case
2021-07-18 14:48:23,011
returning: R=OrderedSet([V_c/(i_L*(D - 1)), V_c/i_R])
2021-07-18 14:48:23,012
sub-ing in 
    V_c    
───────────
i_L⋅(D - 1) for 
R
2021-07-18 14:48:23,012
and found 
i_L
2021-07-18 14:48:23,017
sub-ing in 
V_c
───
i_R for 
R
2021-07-18 14:48:23,017
and found 
 i_R 
─────
D - 1
2021-07-18 14:48:23,017
recursesym: 
[i_L, D, V_c, V_g, M, R, i_R]
2021-07-18 14:48:23,017
calling solver looking for 
V_c
2021-07-18 14:48:23,017
							base case
2021-07-18 14:48:23,018
returning: V_c=OrderedSet([D*V_g/(D - 1), M*V_g, R*i_L*(D - 1), R*i_R])
2021-07-18 14:48:23,041
sub-ing in 
D⋅V_g
─────
D - 1 for 
V_c
2021-07-18 14:48:23,042
and found 
  D⋅V_g   
──────────
         2
R⋅(D - 1) 
2021-07-18 14:48:23,051
sub-ing in 
M⋅V_g for 
V_c
2021-07-18 14:48:23,051
and found 
  M⋅V_g  
─────────
R⋅(D - 1)
2021-07-18 14:48:23,052
sub-ing in 
R⋅i_L⋅(D - 1) for 
V_c
2021-07-18 14:48:23,052
and found 
i_L
2021-07-18 14:48:23,056
sub-ing in 
R⋅i_R for 
V_c
2021-07-18 14:48:23,056
and found 
 i_R 
─────
D - 1
2021-07-18 14:48:23,058
end of function, recursesym: {i_L: set(), D: OrderedSet([V_c/(V_c - V_g), 1 + V_c/(R*i_L), M/(M - 1), R*i_R/(R*i_R - V_g), (i_L + i_R)/i_L, M*V_g/(R*i_L) + 1]), V_c: OrderedSet([D*V_g/(D - 1), M*V_g, R*i_L*(D - 1), R*i_R]), V_g: OrderedSet([V_c - V_c/D, V_c/M]), M: OrderedSet([V_c/V_g]), R: OrderedSet([V_c/(i_L*(D - 1)), V_c/i_R]), i_R: OrderedSet([V_c/R])}
2021-07-18 14:48:23,059
returning: 
OrderedSet([V_c/(R*(D - 1)), V_c*(V_c - V_g)/(R*V_g), V_c*(M - 1)/R, V_c*i_R/V
_g - V_c/R, i_R/(D - 1), D*V_g/(R*(D - 1)**2)])
2021-07-18 14:48:23,214
adding D to []
2021-07-18 14:48:23,214
looking for 
D
2021-07-18 14:48:23,318
nonlinsolve returns: 
   V_c   
─────────
V_c - V_g
2021-07-18 14:48:23,327

D⋅V_g + V_c⋅(1 - D) solved for 
D=
⎧   V_c   ⎫
⎨─────────⎬
⎩V_c - V_g⎭
2021-07-18 14:48:23,335

    V_c
M - ───
    V_g solved for 
D=
∅
2021-07-18 14:48:23,350

  D⋅V_c           ⎛       V_c⎞
- ───── + (1 - D)⋅⎜-i_L - ───⎟
    R             ⎝        R ⎠ solved for 
D=
⎧R⋅i_L + V_c⎫
⎨───────────⎬
⎩   R⋅i_L   ⎭
2021-07-18 14:48:23,361

    V_c
R - ───
    i_R solved for 
D=
∅
2021-07-18 14:48:23,362
Done with 
D
2021-07-18 14:48:23,362
so far D = 
OrderedSet([V_c/(V_c - V_g), 1 + V_c/(R*i_L)])
2021-07-18 14:48:23,363
solution to D is: 
   V_c   
─────────
V_c - V_g 
2021-07-18 14:48:23,363
recursesym: 
[D]
2021-07-18 14:48:23,363
calling solver looking for 
V_c
2021-07-18 14:48:23,363
	adding V_c to [D]
2021-07-18 14:48:23,363
looking for 
V_c
2021-07-18 14:48:23,410
nonlinsolve returns: 
M⋅V_g
2021-07-18 14:48:23,414

D⋅V_g + V_c⋅(1 - D) solved for 
V_c=
⎧D⋅V_g⎫
⎨─────⎬
⎩D - 1⎭
2021-07-18 14:48:23,421

    V_c
M - ───
    V_g solved for 
V_c=
{M⋅V_g}
2021-07-18 14:48:23,433

  D⋅V_c           ⎛       V_c⎞
- ───── + (1 - D)⋅⎜-i_L - ───⎟
    R             ⎝        R ⎠ solved for 
V_c=
{R⋅i_L⋅(D - 1)}
2021-07-18 14:48:23,440

    V_c
R - ───
    i_R solved for 
V_c=
{R⋅i_R}
2021-07-18 14:48:23,442
	Done with 
V_c
2021-07-18 14:48:23,442
	so far V_c = 
	OrderedSet([D*V_g/(D - 1), M*V_g, R*i_L*(D - 1), R*i_R])
2021-07-18 14:48:23,443
	solution to V_c is: 
	D⋅V_g
	─────
	D - 1 
2021-07-18 14:48:23,443
	recursesym: 
	[D, V_c]
2021-07-18 14:48:23,443
	calling solver looking for 
	D
2021-07-18 14:48:23,443
		base case
2021-07-18 14:48:23,443
returning: D=set()
2021-07-18 14:48:23,443
	recursesym: 
	[D, V_c]
2021-07-18 14:48:23,444
	calling solver looking for 
	V_g
2021-07-18 14:48:23,444
		adding V_g to [D, V_c]
2021-07-18 14:48:23,444
looking for 
V_g
2021-07-18 14:48:23,516
nonlinsolve returns: 
V_c
───
 M 
2021-07-18 14:48:23,519

D⋅V_g + V_c⋅(1 - D) solved for 
V_g=
⎧V_c⋅(D - 1)⎫
⎨───────────⎬
⎩     D     ⎭
2021-07-18 14:48:23,532

    V_c
M - ───
    V_g solved for 
V_g=
⎧V_c⎫      
⎨───⎬ \ {0}
⎩ M ⎭      
2021-07-18 14:48:23,536

  D⋅V_c           ⎛       V_c⎞
- ───── + (1 - D)⋅⎜-i_L - ───⎟
    R             ⎝        R ⎠ solved for 
V_g=
∅
2021-07-18 14:48:23,537

    V_c
R - ───
    i_R solved for 
V_g=
∅
2021-07-18 14:48:23,537
		Done with 
V_g
2021-07-18 14:48:23,537
		so far V_g = 
		OrderedSet([V_c - V_c/D, V_c/M])
2021-07-18 14:48:23,538
		solution to V_g is: 
		      V_c
		V_c - ───
		       D  
2021-07-18 14:48:23,538
		recursesym: 
		[D, V_c, V_g]
2021-07-18 14:48:23,538
		calling solver looking for 
		D
2021-07-18 14:48:23,538
			base case
2021-07-18 14:48:23,538
returning: D=set()
2021-07-18 14:48:23,538
		recursesym: 
		[D, V_c, V_g]
2021-07-18 14:48:23,538
		calling solver looking for 
		V_c
2021-07-18 14:48:23,538
			base case
2021-07-18 14:48:23,538
returning: V_c=set()
2021-07-18 14:48:23,538
		solution to V_g is: 
		V_c
		───
		 M  
2021-07-18 14:48:23,539
		recursesym: 
		[D, V_c, V_g]
2021-07-18 14:48:23,539
		calling solver looking for 
		M
2021-07-18 14:48:23,539
			adding M to [D, V_c, V_g]
2021-07-18 14:48:23,539
looking for 
M
2021-07-18 14:48:23,581
nonlinsolve returns: 
V_c
───
V_g
2021-07-18 14:48:23,582

D⋅V_g + V_c⋅(1 - D) solved for 
M=
∅
2021-07-18 14:48:23,583

    V_c
M - ───
    V_g solved for 
M=
⎧V_c⎫
⎨───⎬
⎩V_g⎭
2021-07-18 14:48:23,587

  D⋅V_c           ⎛       V_c⎞
- ───── + (1 - D)⋅⎜-i_L - ───⎟
    R             ⎝        R ⎠ solved for 
M=
∅
2021-07-18 14:48:23,587

    V_c
R - ───
    i_R solved for 
M=
∅
2021-07-18 14:48:23,587
			Done with 
M
2021-07-18 14:48:23,587
			so far M = 
			OrderedSet([V_c/V_g])
2021-07-18 14:48:23,588
			solution to M is: 
			V_c
			───
			V_g 
2021-07-18 14:48:23,588
			recursesym: 
			[D, V_c, V_g, M]
2021-07-18 14:48:23,588
			calling solver looking for 
			V_c
2021-07-18 14:48:23,588
				base case
2021-07-18 14:48:23,588
returning: V_c=set()
2021-07-18 14:48:23,588
			recursesym: 
			[D, V_c, V_g, M]
2021-07-18 14:48:23,588
			calling solver looking for 
			V_g
2021-07-18 14:48:23,588
				base case
2021-07-18 14:48:23,588
returning: V_g=set()
2021-07-18 14:48:23,588
end of function, recursesym: {D: set(), V_c: set(), V_g: set(), M: set()}
2021-07-18 14:48:23,588
returning: 
			OrderedSet([V_c/V_g])
2021-07-18 14:48:23,589
		sub-ing in 
		V_c
		───
		V_g for 
		M
2021-07-18 14:48:23,589
		and found 
		V_g
2021-07-18 14:48:23,589
		recursesym: 
		[D, V_c, V_g, M]
2021-07-18 14:48:23,589
		calling solver looking for 
		V_c
2021-07-18 14:48:23,589
				base case
2021-07-18 14:48:23,589
returning: V_c=set()
2021-07-18 14:48:23,589
end of function, recursesym: {D: set(), V_c: set(), V_g: set(), M: OrderedSet([V_c/V_g])}
2021-07-18 14:48:23,589
returning: 
		OrderedSet([V_c - V_c/D, V_c/M])
2021-07-18 14:48:23,594
	sub-ing in 
	      V_c
	V_c - ───
	       D  for 
	V_g
2021-07-18 14:48:23,594
	and found 
	  ⎛      V_c⎞
	D⋅⎜V_c - ───⎟
	  ⎝       D ⎠
	─────────────
	    D - 1    
2021-07-18 14:48:23,601
	sub-ing in 
	V_c
	───
	 M  for 
	V_g
2021-07-18 14:48:23,602
	and found 
	  D⋅V_c  
	─────────
	M⋅(D - 1)
2021-07-18 14:48:23,602
	solution to V_c is: 
	M⋅V_g 
2021-07-18 14:48:23,602
	recursesym: 
	[D, V_c, V_g, M]
2021-07-18 14:48:23,602
	calling solver looking for 
	M
2021-07-18 14:48:23,602
				base case
2021-07-18 14:48:23,602
returning: M=OrderedSet([V_c/V_g])
2021-07-18 14:48:23,602
	sub-ing in 
	V_c
	───
	V_g for 
	M
2021-07-18 14:48:23,603
	and found 
	V_c
2021-07-18 14:48:23,603
	recursesym: 
	[D, V_c, V_g, M]
2021-07-18 14:48:23,603
	calling solver looking for 
	V_g
2021-07-18 14:48:23,603
				base case
2021-07-18 14:48:23,603
returning: V_g=OrderedSet([V_c - V_c/D, V_c/M])
2021-07-18 14:48:23,612
	sub-ing in 
	      V_c
	V_c - ───
	       D  for 
	V_g
2021-07-18 14:48:23,613
	and found 
	  ⎛      V_c⎞
	M⋅⎜V_c - ───⎟
	  ⎝       D ⎠
2021-07-18 14:48:23,613
	sub-ing in 
	V_c
	───
	 M  for 
	V_g
2021-07-18 14:48:23,613
	and found 
	V_c
2021-07-18 14:48:23,613
	solution to V_c is: 
	R⋅i_L⋅(D - 1) 
2021-07-18 14:48:23,613
	recursesym: 
	[D, V_c, V_g, M]
2021-07-18 14:48:23,614
	calling solver looking for 
	D
2021-07-18 14:48:23,614
				base case
2021-07-18 14:48:23,614
returning: D=set()
2021-07-18 14:48:23,614
	recursesym: 
	[D, V_c, V_g, M]
2021-07-18 14:48:23,614
	calling solver looking for 
	R
2021-07-18 14:48:23,614
				adding R to [D, V_c, V_g, M]
2021-07-18 14:48:23,614
looking for 
R
2021-07-18 14:48:23,680
nonlinsolve returns: 
V_c
───
i_R
2021-07-18 14:48:23,680

D⋅V_g + V_c⋅(1 - D) solved for 
R=
∅
2021-07-18 14:48:23,681

    V_c
M - ───
    V_g solved for 
R=
∅
2021-07-18 14:48:23,695

  D⋅V_c           ⎛       V_c⎞
- ───── + (1 - D)⋅⎜-i_L - ───⎟
    R             ⎝        R ⎠ solved for 
R=
⎧D⋅V_c      ⎫      
⎪───── - V_c⎪      
⎨D - 1      ⎬      
⎪───────────⎪ \ {0}
⎩    i_L    ⎭      
2021-07-18 14:48:23,705

    V_c
R - ───
    i_R solved for 
R=
⎧V_c⎫
⎨───⎬
⎩i_R⎭
2021-07-18 14:48:23,707
				Done with 
R
2021-07-18 14:48:23,708
				so far R = 
				OrderedSet([V_c/(i_L*(D - 1)), V_c/i_R])
2021-07-18 14:48:23,708
				solution to R is: 
				    V_c    
				───────────
				i_L⋅(D - 1) 
2021-07-18 14:48:23,708
				recursesym: 
				[D, V_c, V_g, M, R]
2021-07-18 14:48:23,708
				calling solver looking for 
				D
2021-07-18 14:48:23,709
					base case
2021-07-18 14:48:23,709
returning: D=set()
2021-07-18 14:48:23,709
				recursesym: 
				[D, V_c, V_g, M, R]
2021-07-18 14:48:23,709
				calling solver looking for 
				V_c
2021-07-18 14:48:23,709
					base case
2021-07-18 14:48:23,709
returning: V_c=set()
2021-07-18 14:48:23,709
				recursesym: 
				[D, V_c, V_g, M, R]
2021-07-18 14:48:23,709
				calling solver looking for 
				i_L
2021-07-18 14:48:23,709
					adding i_L to [D, V_c, V_g, M, R]
2021-07-18 14:48:23,709
looking for 
i_L
2021-07-18 14:48:23,767
nonlinsolve returns: 
   V_c   
─────────
R⋅(D - 1)
2021-07-18 14:48:23,768

D⋅V_g + V_c⋅(1 - D) solved for 
i_L=
∅
2021-07-18 14:48:23,768

    V_c
M - ───
    V_g solved for 
i_L=
∅
2021-07-18 14:48:23,775

  D⋅V_c           ⎛       V_c⎞
- ───── + (1 - D)⋅⎜-i_L - ───⎟
    R             ⎝        R ⎠ solved for 
i_L=
⎧  D⋅V_c     V_c⎫
⎨───────── - ───⎬
⎩R⋅(D - 1)    R ⎭
2021-07-18 14:48:23,787

    V_c
R - ───
    i_R solved for 
i_L=
∅
2021-07-18 14:48:23,787
					Done with 
i_L
2021-07-18 14:48:23,787
					so far i_L = 
					OrderedSet([V_c/(R*(D - 1))])
2021-07-18 14:48:23,787
					solution to i_L is: 
					   V_c   
					─────────
					R⋅(D - 1) 
2021-07-18 14:48:23,788
					recursesym: 
					[D, V_c, V_g, M, R, i_L]
2021-07-18 14:48:23,788
					calling solver looking for 
					D
2021-07-18 14:48:23,788
						base case
2021-07-18 14:48:23,788
returning: D=set()
2021-07-18 14:48:23,788
					recursesym: 
					[D, V_c, V_g, M, R, i_L]
2021-07-18 14:48:23,788
					calling solver looking for 
					R
2021-07-18 14:48:23,788
						base case
2021-07-18 14:48:23,788
returning: R=set()
2021-07-18 14:48:23,789
					recursesym: 
					[D, V_c, V_g, M, R, i_L]
2021-07-18 14:48:23,789
					calling solver looking for 
					V_c
2021-07-18 14:48:23,789
						base case
2021-07-18 14:48:23,789
returning: V_c=set()
2021-07-18 14:48:23,789
end of function, recursesym: {D: set(), V_c: set(), V_g: OrderedSet([V_c - V_c/D, V_c/M]), M: OrderedSet([V_c/V_g]), R: set(), i_L: set()}
2021-07-18 14:48:23,789
returning: 
					OrderedSet([V_c/(R*(D - 1))])
2021-07-18 14:48:23,790
				sub-ing in 
				   V_c   
				─────────
				R⋅(D - 1) for 
				i_L
2021-07-18 14:48:23,790
				and found 
				R
2021-07-18 14:48:23,791
				solution to R is: 
				V_c
				───
				i_R 
2021-07-18 14:48:23,791
				recursesym: 
				[D, V_c, V_g, M, R, i_L]
2021-07-18 14:48:23,791
				calling solver looking for 
				V_c
2021-07-18 14:48:23,791
						base case
2021-07-18 14:48:23,791
returning: V_c=set()
2021-07-18 14:48:23,791
				recursesym: 
				[D, V_c, V_g, M, R, i_L]
2021-07-18 14:48:23,791
				calling solver looking for 
				i_R
2021-07-18 14:48:23,791
						adding i_R to [D, V_c, V_g, M, R, i_L]
2021-07-18 14:48:23,791
looking for 
i_R
2021-07-18 14:48:23,842
nonlinsolve returns: 
V_c
───
 R 
2021-07-18 14:48:23,842

D⋅V_g + V_c⋅(1 - D) solved for 
i_R=
∅
2021-07-18 14:48:23,843

    V_c
M - ───
    V_g solved for 
i_R=
∅
2021-07-18 14:48:23,844

  D⋅V_c           ⎛       V_c⎞
- ───── + (1 - D)⋅⎜-i_L - ───⎟
    R             ⎝        R ⎠ solved for 
i_R=
∅
2021-07-18 14:48:23,849

    V_c
R - ───
    i_R solved for 
i_R=
⎧V_c⎫      
⎨───⎬ \ {0}
⎩ R ⎭      
2021-07-18 14:48:23,852
						Done with 
i_R
2021-07-18 14:48:23,852
						so far i_R = 
						OrderedSet([V_c/R])
2021-07-18 14:48:23,852
						solution to i_R is: 
						V_c
						───
						 R  
2021-07-18 14:48:23,852
						recursesym: 
						[D, V_c, V_g, M, R, i_L, i_R]
2021-07-18 14:48:23,852
						calling solver looking for 
						R
2021-07-18 14:48:23,852
							base case
2021-07-18 14:48:23,852
returning: R=set()
2021-07-18 14:48:23,853
						recursesym: 
						[D, V_c, V_g, M, R, i_L, i_R]
2021-07-18 14:48:23,853
						calling solver looking for 
						V_c
2021-07-18 14:48:23,853
							base case
2021-07-18 14:48:23,853
returning: V_c=set()
2021-07-18 14:48:23,853
end of function, recursesym: {D: set(), V_c: set(), V_g: OrderedSet([V_c - V_c/D, V_c/M]), M: OrderedSet([V_c/V_g]), R: set(), i_L: OrderedSet([V_c/(R*(D - 1))]), i_R: set()}
2021-07-18 14:48:23,853
returning: 
						OrderedSet([V_c/R])
2021-07-18 14:48:23,854
				sub-ing in 
				V_c
				───
				 R  for 
				i_R
2021-07-18 14:48:23,854
				and found 
				R
2021-07-18 14:48:23,854
end of function, recursesym: {D: set(), V_c: set(), V_g: OrderedSet([V_c - V_c/D, V_c/M]), M: OrderedSet([V_c/V_g]), R: set(), i_L: OrderedSet([V_c/(R*(D - 1))]), i_R: OrderedSet([V_c/R])}
2021-07-18 14:48:23,855
returning: 
				OrderedSet([V_c/(i_L*(D - 1)), V_c/i_R])
2021-07-18 14:48:23,855
	sub-ing in 
	    V_c    
	───────────
	i_L⋅(D - 1) for 
	R
2021-07-18 14:48:23,855
	and found 
	V_c
2021-07-18 14:48:23,863
	sub-ing in 
	V_c
	───
	i_R for 
	R
2021-07-18 14:48:23,863
	and found 
	V_c⋅i_L⋅(D - 1)
	───────────────
	      i_R      
2021-07-18 14:48:23,863
	recursesym: 
	[D, V_c, V_g, M, R, i_L, i_R]
2021-07-18 14:48:23,863
	calling solver looking for 
	i_L
2021-07-18 14:48:23,863
							base case
2021-07-18 14:48:23,864
returning: i_L=OrderedSet([V_c/(R*(D - 1))])
2021-07-18 14:48:23,864
	sub-ing in 
	   V_c   
	─────────
	R⋅(D - 1) for 
	i_L
2021-07-18 14:48:23,864
	and found 
	V_c
2021-07-18 14:48:23,865
	solution to V_c is: 
	R⋅i_R 
2021-07-18 14:48:23,865
	recursesym: 
	[D, V_c, V_g, M, R, i_L, i_R]
2021-07-18 14:48:23,865
	calling solver looking for 
	R
2021-07-18 14:48:23,865
							base case
2021-07-18 14:48:23,865
returning: R=OrderedSet([V_c/(i_L*(D - 1)), V_c/i_R])
2021-07-18 14:48:23,873
	sub-ing in 
	    V_c    
	───────────
	i_L⋅(D - 1) for 
	R
2021-07-18 14:48:23,873
	and found 
	  V_c⋅i_R  
	───────────
	i_L⋅(D - 1)
2021-07-18 14:48:23,873
	sub-ing in 
	V_c
	───
	i_R for 
	R
2021-07-18 14:48:23,873
	and found 
	V_c
2021-07-18 14:48:23,874
	recursesym: 
	[D, V_c, V_g, M, R, i_L, i_R]
2021-07-18 14:48:23,874
	calling solver looking for 
	i_R
2021-07-18 14:48:23,874
							base case
2021-07-18 14:48:23,874
returning: i_R=OrderedSet([V_c/R])
2021-07-18 14:48:23,874
	sub-ing in 
	V_c
	───
	 R  for 
	i_R
2021-07-18 14:48:23,874
	and found 
	V_c
2021-07-18 14:48:23,875
end of function, recursesym: {D: set(), V_c: set(), V_g: OrderedSet([V_c - V_c/D, V_c/M]), M: OrderedSet([V_c/V_g]), R: OrderedSet([V_c/(i_L*(D - 1)), V_c/i_R]), i_L: OrderedSet([V_c/(R*(D - 1))]), i_R: OrderedSet([V_c/R])}
2021-07-18 14:48:23,875
returning: 
	OrderedSet([D*V_g/(D - 1), M*V_g, R*i_L*(D - 1), R*i_R])
2021-07-18 14:48:23,882
sub-ing in 
D⋅V_g
─────
D - 1 for 
V_c
2021-07-18 14:48:23,882
and found 
        D⋅V_g        
─────────────────────
        ⎛D⋅V_g      ⎞
(D - 1)⋅⎜───── - V_g⎟
        ⎝D - 1      ⎠
2021-07-18 14:48:23,889
sub-ing in 
M⋅V_g for 
V_c
2021-07-18 14:48:23,889
and found 
   M⋅V_g   
───────────
M⋅V_g - V_g
2021-07-18 14:48:23,905
sub-ing in 
R⋅i_L⋅(D - 1) for 
V_c
2021-07-18 14:48:23,905
and found 
   R⋅i_L⋅(D - 1)   
───────────────────
R⋅i_L⋅(D - 1) - V_g
2021-07-18 14:48:23,913
sub-ing in 
R⋅i_R for 
V_c
2021-07-18 14:48:23,913
and found 
   R⋅i_R   
───────────
R⋅i_R - V_g
2021-07-18 14:48:23,913
recursesym: 
[D, V_c, V_g, M, R, i_L, i_R]
2021-07-18 14:48:23,913
calling solver looking for 
V_g
2021-07-18 14:48:23,913
							base case
2021-07-18 14:48:23,914
returning: V_g=OrderedSet([V_c - V_c/D, V_c/M])
2021-07-18 14:48:23,914
sub-ing in 
      V_c
V_c - ───
       D  for 
V_g
2021-07-18 14:48:23,914
and found 
D
2021-07-18 14:48:23,921
sub-ing in 
V_c
───
 M  for 
V_g
2021-07-18 14:48:23,921
and found 
   V_c   
─────────
      V_c
V_c - ───
       M 
2021-07-18 14:48:23,922
solution to D is: 
     V_c 
1 + ─────
    R⋅i_L 
2021-07-18 14:48:23,922
recursesym: 
[D, V_c, V_g, M, R, i_L, i_R]
2021-07-18 14:48:23,922
calling solver looking for 
R
2021-07-18 14:48:23,922
							base case
2021-07-18 14:48:23,922
returning: R=OrderedSet([V_c/(i_L*(D - 1)), V_c/i_R])
2021-07-18 14:48:23,923
sub-ing in 
    V_c    
───────────
i_L⋅(D - 1) for 
R
2021-07-18 14:48:23,923
and found 
D
2021-07-18 14:48:23,928
sub-ing in 
V_c
───
i_R for 
R
2021-07-18 14:48:23,928
and found 
    i_R
1 + ───
    i_L
2021-07-18 14:48:23,928
recursesym: 
[D, V_c, V_g, M, R, i_L, i_R]
2021-07-18 14:48:23,928
calling solver looking for 
V_c
2021-07-18 14:48:23,928
							base case
2021-07-18 14:48:23,929
returning: V_c=OrderedSet([D*V_g/(D - 1), M*V_g, R*i_L*(D - 1), R*i_R])
2021-07-18 14:48:23,947
sub-ing in 
D⋅V_g
─────
D - 1 for 
V_c
2021-07-18 14:48:23,948
and found 
    D⋅V_g        
───────────── + 1
R⋅i_L⋅(D - 1)    
2021-07-18 14:48:23,957
sub-ing in 
M⋅V_g for 
V_c
2021-07-18 14:48:23,958
and found 
M⋅V_g    
───── + 1
R⋅i_L    
2021-07-18 14:48:23,958
sub-ing in 
R⋅i_L⋅(D - 1) for 
V_c
2021-07-18 14:48:23,958
and found 
D
2021-07-18 14:48:23,962
sub-ing in 
R⋅i_R for 
V_c
2021-07-18 14:48:23,962
and found 
    i_R
1 + ───
    i_L
2021-07-18 14:48:23,962
recursesym: 
[D, V_c, V_g, M, R, i_L, i_R]
2021-07-18 14:48:23,962
calling solver looking for 
i_L
2021-07-18 14:48:23,962
							base case
2021-07-18 14:48:23,963
returning: i_L=OrderedSet([V_c/(R*(D - 1))])
2021-07-18 14:48:23,963
sub-ing in 
   V_c   
─────────
R⋅(D - 1) for 
i_L
2021-07-18 14:48:23,963
and found 
D
2021-07-18 14:48:23,965
end of function, recursesym: {D: set(), V_c: OrderedSet([D*V_g/(D - 1), M*V_g, R*i_L*(D - 1), R*i_R]), V_g: OrderedSet([V_c - V_c/D, V_c/M]), M: OrderedSet([V_c/V_g]), R: OrderedSet([V_c/(i_L*(D - 1)), V_c/i_R]), i_L: OrderedSet([V_c/(R*(D - 1))]), i_R: OrderedSet([V_c/R])}
2021-07-18 14:48:23,966
returning: 
OrderedSet([V_c/(V_c - V_g), 1 + V_c/(R*i_L), M/(M - 1), R*i_R/(R*i_R - V_g), 
(i_L + i_R)/i_L, M*V_g/(R*i_L) + 1])
2021-07-18 14:48:23,990
adding i_L to []
2021-07-18 14:48:23,990
looking for 
i_L
2021-07-18 14:48:24,054
nonlinsolve returns: 
   V_c   
─────────
R⋅(D - 1)
2021-07-18 14:48:24,055

D⋅V_g + V_c⋅(1 - D) solved for 
i_L=
∅
2021-07-18 14:48:24,056

    V_c
M - ───
    V_g solved for 
i_L=
∅
2021-07-18 14:48:24,059

  D⋅V_c           ⎛       V_c⎞
- ───── + (1 - D)⋅⎜-i_L - ───⎟
    R             ⎝        R ⎠ solved for 
i_L=
⎧  D⋅V_c     V_c⎫
⎨───────── - ───⎬
⎩R⋅(D - 1)    R ⎭
2021-07-18 14:48:24,067

    V_c
R - ───
    i_R solved for 
i_L=
∅
2021-07-18 14:48:24,067
Done with 
i_L
2021-07-18 14:48:24,068
so far i_L = 
OrderedSet([V_c/(R*(D - 1))])
2021-07-18 14:48:24,068
solution to i_L is: 
   V_c   
─────────
R⋅(D - 1) 
2021-07-18 14:48:24,068
recursesym: 
[i_L]
2021-07-18 14:48:24,068
calling solver looking for 
D
2021-07-18 14:48:24,068
	adding D to [i_L]
2021-07-18 14:48:24,068
looking for 
D
2021-07-18 14:48:24,132
nonlinsolve returns: 
   V_c   
─────────
V_c - V_g
2021-07-18 14:48:24,139

D⋅V_g + V_c⋅(1 - D) solved for 
D=
⎧   V_c   ⎫
⎨─────────⎬
⎩V_c - V_g⎭
2021-07-18 14:48:24,145

    V_c
M - ───
    V_g solved for 
D=
∅
2021-07-18 14:48:24,156

  D⋅V_c           ⎛       V_c⎞
- ───── + (1 - D)⋅⎜-i_L - ───⎟
    R             ⎝        R ⎠ solved for 
D=
⎧R⋅i_L + V_c⎫
⎨───────────⎬
⎩   R⋅i_L   ⎭
2021-07-18 14:48:24,164

    V_c
R - ───
    i_R solved for 
D=
∅
2021-07-18 14:48:24,164
	Done with 
D
2021-07-18 14:48:24,164
	so far D = 
	OrderedSet([V_c/(V_c - V_g), 1 + V_c/(R*i_L)])
2021-07-18 14:48:24,165
	solution to D is: 
	   V_c   
	─────────
	V_c - V_g 
2021-07-18 14:48:24,165
	recursesym: 
	[i_L, D]
2021-07-18 14:48:24,165
	calling solver looking for 
	V_c
2021-07-18 14:48:24,165
		adding V_c to [i_L, D]
2021-07-18 14:48:24,165
looking for 
V_c
2021-07-18 14:48:24,208
nonlinsolve returns: 
M⋅V_g
2021-07-18 14:48:24,212

D⋅V_g + V_c⋅(1 - D) solved for 
V_c=
⎧D⋅V_g⎫
⎨─────⎬
⎩D - 1⎭
2021-07-18 14:48:24,218

    V_c
M - ───
    V_g solved for 
V_c=
{M⋅V_g}
2021-07-18 14:48:24,230

  D⋅V_c           ⎛       V_c⎞
- ───── + (1 - D)⋅⎜-i_L - ───⎟
    R             ⎝        R ⎠ solved for 
V_c=
{R⋅i_L⋅(D - 1)}
2021-07-18 14:48:24,238

    V_c
R - ───
    i_R solved for 
V_c=
{R⋅i_R}
2021-07-18 14:48:24,240
		Done with 
V_c
2021-07-18 14:48:24,240
		so far V_c = 
		OrderedSet([D*V_g/(D - 1), M*V_g, R*i_L*(D - 1), R*i_R])
2021-07-18 14:48:24,241
		solution to V_c is: 
		D⋅V_g
		─────
		D - 1 
2021-07-18 14:48:24,241
		recursesym: 
		[i_L, D, V_c]
2021-07-18 14:48:24,241
		calling solver looking for 
		D
2021-07-18 14:48:24,241
			base case
2021-07-18 14:48:24,241
returning: D=set()
2021-07-18 14:48:24,241
		recursesym: 
		[i_L, D, V_c]
2021-07-18 14:48:24,241
		calling solver looking for 
		V_g
2021-07-18 14:48:24,241
			adding V_g to [i_L, D, V_c]
2021-07-18 14:48:24,241
looking for 
V_g
2021-07-18 14:48:24,313
nonlinsolve returns: 
V_c
───
 M 
2021-07-18 14:48:24,316

D⋅V_g + V_c⋅(1 - D) solved for 
V_g=
⎧V_c⋅(D - 1)⎫
⎨───────────⎬
⎩     D     ⎭
2021-07-18 14:48:24,330

    V_c
M - ───
    V_g solved for 
V_g=
⎧V_c⎫      
⎨───⎬ \ {0}
⎩ M ⎭      
2021-07-18 14:48:24,333

  D⋅V_c           ⎛       V_c⎞
- ───── + (1 - D)⋅⎜-i_L - ───⎟
    R             ⎝        R ⎠ solved for 
V_g=
∅
2021-07-18 14:48:24,334

    V_c
R - ───
    i_R solved for 
V_g=
∅
2021-07-18 14:48:24,334
			Done with 
V_g
2021-07-18 14:48:24,334
			so far V_g = 
			OrderedSet([V_c - V_c/D, V_c/M])
2021-07-18 14:48:24,335
			solution to V_g is: 
			      V_c
			V_c - ───
			       D  
2021-07-18 14:48:24,335
			recursesym: 
			[i_L, D, V_c, V_g]
2021-07-18 14:48:24,335
			calling solver looking for 
			D
2021-07-18 14:48:24,335
				base case
2021-07-18 14:48:24,335
returning: D=set()
2021-07-18 14:48:24,335
			recursesym: 
			[i_L, D, V_c, V_g]
2021-07-18 14:48:24,335
			calling solver looking for 
			V_c
2021-07-18 14:48:24,335
				base case
2021-07-18 14:48:24,335
returning: V_c=set()
2021-07-18 14:48:24,335
			solution to V_g is: 
			V_c
			───
			 M  
2021-07-18 14:48:24,336
			recursesym: 
			[i_L, D, V_c, V_g]
2021-07-18 14:48:24,336
			calling solver looking for 
			M
2021-07-18 14:48:24,336
				adding M to [i_L, D, V_c, V_g]
2021-07-18 14:48:24,336
looking for 
M
2021-07-18 14:48:24,379
nonlinsolve returns: 
V_c
───
V_g
2021-07-18 14:48:24,379

D⋅V_g + V_c⋅(1 - D) solved for 
M=
∅
2021-07-18 14:48:24,381

    V_c
M - ───
    V_g solved for 
M=
⎧V_c⎫
⎨───⎬
⎩V_g⎭
2021-07-18 14:48:24,384

  D⋅V_c           ⎛       V_c⎞
- ───── + (1 - D)⋅⎜-i_L - ───⎟
    R             ⎝        R ⎠ solved for 
M=
∅
2021-07-18 14:48:24,385

    V_c
R - ───
    i_R solved for 
M=
∅
2021-07-18 14:48:24,385
				Done with 
M
2021-07-18 14:48:24,385
				so far M = 
				OrderedSet([V_c/V_g])
2021-07-18 14:48:24,385
				solution to M is: 
				V_c
				───
				V_g 
2021-07-18 14:48:24,385
				recursesym: 
				[i_L, D, V_c, V_g, M]
2021-07-18 14:48:24,385
				calling solver looking for 
				V_c
2021-07-18 14:48:24,385
					base case
2021-07-18 14:48:24,386
returning: V_c=set()
2021-07-18 14:48:24,386
				recursesym: 
				[i_L, D, V_c, V_g, M]
2021-07-18 14:48:24,386
				calling solver looking for 
				V_g
2021-07-18 14:48:24,386
					base case
2021-07-18 14:48:24,386
returning: V_g=set()
2021-07-18 14:48:24,386
end of function, recursesym: {i_L: set(), D: set(), V_c: set(), V_g: set(), M: set()}
2021-07-18 14:48:24,386
returning: 
				OrderedSet([V_c/V_g])
2021-07-18 14:48:24,386
			sub-ing in 
			V_c
			───
			V_g for 
			M
2021-07-18 14:48:24,386
			and found 
			V_g
2021-07-18 14:48:24,387
			recursesym: 
			[i_L, D, V_c, V_g, M]
2021-07-18 14:48:24,387
			calling solver looking for 
			V_c
2021-07-18 14:48:24,387
					base case
2021-07-18 14:48:24,387
returning: V_c=set()
2021-07-18 14:48:24,387
end of function, recursesym: {i_L: set(), D: set(), V_c: set(), V_g: set(), M: OrderedSet([V_c/V_g])}
2021-07-18 14:48:24,387
returning: 
			OrderedSet([V_c - V_c/D, V_c/M])
2021-07-18 14:48:24,393
		sub-ing in 
		      V_c
		V_c - ───
		       D  for 
		V_g
2021-07-18 14:48:24,394
		and found 
		  ⎛      V_c⎞
		D⋅⎜V_c - ───⎟
		  ⎝       D ⎠
		─────────────
		    D - 1    
2021-07-18 14:48:24,401
		sub-ing in 
		V_c
		───
		 M  for 
		V_g
2021-07-18 14:48:24,401
		and found 
		  D⋅V_c  
		─────────
		M⋅(D - 1)
2021-07-18 14:48:24,401
		solution to V_c is: 
		M⋅V_g 
2021-07-18 14:48:24,401
		recursesym: 
		[i_L, D, V_c, V_g, M]
2021-07-18 14:48:24,401
		calling solver looking for 
		M
2021-07-18 14:48:24,402
					base case
2021-07-18 14:48:24,402
returning: M=OrderedSet([V_c/V_g])
2021-07-18 14:48:24,402
		sub-ing in 
		V_c
		───
		V_g for 
		M
2021-07-18 14:48:24,402
		and found 
		V_c
2021-07-18 14:48:24,402
		recursesym: 
		[i_L, D, V_c, V_g, M]
2021-07-18 14:48:24,402
		calling solver looking for 
		V_g
2021-07-18 14:48:24,402
					base case
2021-07-18 14:48:24,403
returning: V_g=OrderedSet([V_c - V_c/D, V_c/M])
2021-07-18 14:48:24,412
		sub-ing in 
		      V_c
		V_c - ───
		       D  for 
		V_g
2021-07-18 14:48:24,412
		and found 
		  ⎛      V_c⎞
		M⋅⎜V_c - ───⎟
		  ⎝       D ⎠
2021-07-18 14:48:24,412
		sub-ing in 
		V_c
		───
		 M  for 
		V_g
2021-07-18 14:48:24,412
		and found 
		V_c
2021-07-18 14:48:24,413
		solution to V_c is: 
		R⋅i_L⋅(D - 1) 
2021-07-18 14:48:24,413
		recursesym: 
		[i_L, D, V_c, V_g, M]
2021-07-18 14:48:24,413
		calling solver looking for 
		D
2021-07-18 14:48:24,413
					base case
2021-07-18 14:48:24,413
returning: D=set()
2021-07-18 14:48:24,413
		recursesym: 
		[i_L, D, V_c, V_g, M]
2021-07-18 14:48:24,413
		calling solver looking for 
		R
2021-07-18 14:48:24,413
					adding R to [i_L, D, V_c, V_g, M]
2021-07-18 14:48:24,413
looking for 
R
2021-07-18 14:48:24,479
nonlinsolve returns: 
V_c
───
i_R
2021-07-18 14:48:24,479

D⋅V_g + V_c⋅(1 - D) solved for 
R=
∅
2021-07-18 14:48:24,480

    V_c
M - ───
    V_g solved for 
R=
∅
2021-07-18 14:48:24,494

  D⋅V_c           ⎛       V_c⎞
- ───── + (1 - D)⋅⎜-i_L - ───⎟
    R             ⎝        R ⎠ solved for 
R=
⎧D⋅V_c      ⎫      
⎪───── - V_c⎪      
⎨D - 1      ⎬      
⎪───────────⎪ \ {0}
⎩    i_L    ⎭      
2021-07-18 14:48:24,504

    V_c
R - ───
    i_R solved for 
R=
⎧V_c⎫
⎨───⎬
⎩i_R⎭
2021-07-18 14:48:24,506
					Done with 
R
2021-07-18 14:48:24,506
					so far R = 
					OrderedSet([V_c/(i_L*(D - 1)), V_c/i_R])
2021-07-18 14:48:24,507
					solution to R is: 
					    V_c    
					───────────
					i_L⋅(D - 1) 
2021-07-18 14:48:24,507
					recursesym: 
					[i_L, D, V_c, V_g, M, R]
2021-07-18 14:48:24,507
					calling solver looking for 
					D
2021-07-18 14:48:24,507
						base case
2021-07-18 14:48:24,507
returning: D=set()
2021-07-18 14:48:24,507
					recursesym: 
					[i_L, D, V_c, V_g, M, R]
2021-07-18 14:48:24,508
					calling solver looking for 
					V_c
2021-07-18 14:48:24,508
						base case
2021-07-18 14:48:24,508
returning: V_c=set()
2021-07-18 14:48:24,508
					recursesym: 
					[i_L, D, V_c, V_g, M, R]
2021-07-18 14:48:24,508
					calling solver looking for 
					i_L
2021-07-18 14:48:24,508
						base case
2021-07-18 14:48:24,508
returning: i_L=set()
2021-07-18 14:48:24,508
					solution to R is: 
					V_c
					───
					i_R 
2021-07-18 14:48:24,508
					recursesym: 
					[i_L, D, V_c, V_g, M, R]
2021-07-18 14:48:24,509
					calling solver looking for 
					V_c
2021-07-18 14:48:24,509
						base case
2021-07-18 14:48:24,509
returning: V_c=set()
2021-07-18 14:48:24,509
					recursesym: 
					[i_L, D, V_c, V_g, M, R]
2021-07-18 14:48:24,509
					calling solver looking for 
					i_R
2021-07-18 14:48:24,509
						adding i_R to [i_L, D, V_c, V_g, M, R]
2021-07-18 14:48:24,509
looking for 
i_R
2021-07-18 14:48:24,600
nonlinsolve returns: 
V_c
───
 R 
2021-07-18 14:48:24,601

D⋅V_g + V_c⋅(1 - D) solved for 
i_R=
∅
2021-07-18 14:48:24,602

    V_c
M - ───
    V_g solved for 
i_R=
∅
2021-07-18 14:48:24,604

  D⋅V_c           ⎛       V_c⎞
- ───── + (1 - D)⋅⎜-i_L - ───⎟
    R             ⎝        R ⎠ solved for 
i_R=
∅
2021-07-18 14:48:24,611

    V_c
R - ───
    i_R solved for 
i_R=
⎧V_c⎫      
⎨───⎬ \ {0}
⎩ R ⎭      
2021-07-18 14:48:24,614
						Done with 
i_R
2021-07-18 14:48:24,615
						so far i_R = 
						OrderedSet([V_c/R])
2021-07-18 14:48:24,615
						solution to i_R is: 
						V_c
						───
						 R  
2021-07-18 14:48:24,615
						recursesym: 
						[i_L, D, V_c, V_g, M, R, i_R]
2021-07-18 14:48:24,615
						calling solver looking for 
						R
2021-07-18 14:48:24,615
							base case
2021-07-18 14:48:24,615
returning: R=set()
2021-07-18 14:48:24,616
						recursesym: 
						[i_L, D, V_c, V_g, M, R, i_R]
2021-07-18 14:48:24,616
						calling solver looking for 
						V_c
2021-07-18 14:48:24,616
							base case
2021-07-18 14:48:24,616
returning: V_c=set()
2021-07-18 14:48:24,616
end of function, recursesym: {i_L: set(), D: set(), V_c: set(), V_g: OrderedSet([V_c - V_c/D, V_c/M]), M: OrderedSet([V_c/V_g]), R: set(), i_R: set()}
2021-07-18 14:48:24,617
returning: 
						OrderedSet([V_c/R])
2021-07-18 14:48:24,617
					sub-ing in 
					V_c
					───
					 R  for 
					i_R
2021-07-18 14:48:24,617
					and found 
					R
2021-07-18 14:48:24,617
end of function, recursesym: {i_L: set(), D: set(), V_c: set(), V_g: OrderedSet([V_c - V_c/D, V_c/M]), M: OrderedSet([V_c/V_g]), R: set(), i_R: OrderedSet([V_c/R])}
2021-07-18 14:48:24,618
returning: 
					OrderedSet([V_c/(i_L*(D - 1)), V_c/i_R])
2021-07-18 14:48:24,618
		sub-ing in 
		    V_c    
		───────────
		i_L⋅(D - 1) for 
		R
2021-07-18 14:48:24,618
		and found 
		V_c
2021-07-18 14:48:24,628
		sub-ing in 
		V_c
		───
		i_R for 
		R
2021-07-18 14:48:24,629
		and found 
		V_c⋅i_L⋅(D - 1)
		───────────────
		      i_R      
2021-07-18 14:48:24,629
		recursesym: 
		[i_L, D, V_c, V_g, M, R, i_R]
2021-07-18 14:48:24,629
		calling solver looking for 
		i_L
2021-07-18 14:48:24,629
							base case
2021-07-18 14:48:24,629
returning: i_L=set()
2021-07-18 14:48:24,630
		solution to V_c is: 
		R⋅i_R 
2021-07-18 14:48:24,630
		recursesym: 
		[i_L, D, V_c, V_g, M, R, i_R]
2021-07-18 14:48:24,630
		calling solver looking for 
		R
2021-07-18 14:48:24,630
							base case
2021-07-18 14:48:24,631
returning: R=OrderedSet([V_c/(i_L*(D - 1)), V_c/i_R])
2021-07-18 14:48:24,640
		sub-ing in 
		    V_c    
		───────────
		i_L⋅(D - 1) for 
		R
2021-07-18 14:48:24,640
		and found 
		  V_c⋅i_R  
		───────────
		i_L⋅(D - 1)
2021-07-18 14:48:24,640
		sub-ing in 
		V_c
		───
		i_R for 
		R
2021-07-18 14:48:24,640
		and found 
		V_c
2021-07-18 14:48:24,641
		recursesym: 
		[i_L, D, V_c, V_g, M, R, i_R]
2021-07-18 14:48:24,641
		calling solver looking for 
		i_R
2021-07-18 14:48:24,641
							base case
2021-07-18 14:48:24,641
returning: i_R=OrderedSet([V_c/R])
2021-07-18 14:48:24,641
		sub-ing in 
		V_c
		───
		 R  for 
		i_R
2021-07-18 14:48:24,641
		and found 
		V_c
2021-07-18 14:48:24,642
end of function, recursesym: {i_L: set(), D: set(), V_c: set(), V_g: OrderedSet([V_c - V_c/D, V_c/M]), M: OrderedSet([V_c/V_g]), R: OrderedSet([V_c/(i_L*(D - 1)), V_c/i_R]), i_R: OrderedSet([V_c/R])}
2021-07-18 14:48:24,643
returning: 
		OrderedSet([D*V_g/(D - 1), M*V_g, R*i_L*(D - 1), R*i_R])
2021-07-18 14:48:24,649
	sub-ing in 
	D⋅V_g
	─────
	D - 1 for 
	V_c
2021-07-18 14:48:24,650
	and found 
	        D⋅V_g        
	─────────────────────
	        ⎛D⋅V_g      ⎞
	(D - 1)⋅⎜───── - V_g⎟
	        ⎝D - 1      ⎠
2021-07-18 14:48:24,656
	sub-ing in 
	M⋅V_g for 
	V_c
2021-07-18 14:48:24,657
	and found 
	   M⋅V_g   
	───────────
	M⋅V_g - V_g
2021-07-18 14:48:24,672
	sub-ing in 
	R⋅i_L⋅(D - 1) for 
	V_c
2021-07-18 14:48:24,672
	and found 
	   R⋅i_L⋅(D - 1)   
	───────────────────
	R⋅i_L⋅(D - 1) - V_g
2021-07-18 14:48:24,679
	sub-ing in 
	R⋅i_R for 
	V_c
2021-07-18 14:48:24,680
	and found 
	   R⋅i_R   
	───────────
	R⋅i_R - V_g
2021-07-18 14:48:24,680
	recursesym: 
	[i_L, D, V_c, V_g, M, R, i_R]
2021-07-18 14:48:24,680
	calling solver looking for 
	V_g
2021-07-18 14:48:24,680
							base case
2021-07-18 14:48:24,681
returning: V_g=OrderedSet([V_c - V_c/D, V_c/M])
2021-07-18 14:48:24,681
	sub-ing in 
	      V_c
	V_c - ───
	       D  for 
	V_g
2021-07-18 14:48:24,681
	and found 
	D
2021-07-18 14:48:24,687
	sub-ing in 
	V_c
	───
	 M  for 
	V_g
2021-07-18 14:48:24,687
	and found 
	   V_c   
	─────────
	      V_c
	V_c - ───
	       M 
2021-07-18 14:48:24,688
	solution to D is: 
	     V_c 
	1 + ─────
	    R⋅i_L 
2021-07-18 14:48:24,688
	recursesym: 
	[i_L, D, V_c, V_g, M, R, i_R]
2021-07-18 14:48:24,688
	calling solver looking for 
	R
2021-07-18 14:48:24,688
							base case
2021-07-18 14:48:24,688
returning: R=OrderedSet([V_c/(i_L*(D - 1)), V_c/i_R])
2021-07-18 14:48:24,689
	sub-ing in 
	    V_c    
	───────────
	i_L⋅(D - 1) for 
	R
2021-07-18 14:48:24,689
	and found 
	D
2021-07-18 14:48:24,694
	sub-ing in 
	V_c
	───
	i_R for 
	R
2021-07-18 14:48:24,694
	and found 
	    i_R
	1 + ───
	    i_L
2021-07-18 14:48:24,694
	recursesym: 
	[i_L, D, V_c, V_g, M, R, i_R]
2021-07-18 14:48:24,695
	calling solver looking for 
	V_c
2021-07-18 14:48:24,695
							base case
2021-07-18 14:48:24,695
returning: V_c=OrderedSet([D*V_g/(D - 1), M*V_g, R*i_L*(D - 1), R*i_R])
2021-07-18 14:48:24,714
	sub-ing in 
	D⋅V_g
	─────
	D - 1 for 
	V_c
2021-07-18 14:48:24,714
	and found 
	    D⋅V_g        
	───────────── + 1
	R⋅i_L⋅(D - 1)    
2021-07-18 14:48:24,723
	sub-ing in 
	M⋅V_g for 
	V_c
2021-07-18 14:48:24,724
	and found 
	M⋅V_g    
	───── + 1
	R⋅i_L    
2021-07-18 14:48:24,724
	sub-ing in 
	R⋅i_L⋅(D - 1) for 
	V_c
2021-07-18 14:48:24,724
	and found 
	D
2021-07-18 14:48:24,728
	sub-ing in 
	R⋅i_R for 
	V_c
2021-07-18 14:48:24,728
	and found 
	    i_R
	1 + ───
	    i_L
2021-07-18 14:48:24,729
	recursesym: 
	[i_L, D, V_c, V_g, M, R, i_R]
2021-07-18 14:48:24,729
	calling solver looking for 
	i_L
2021-07-18 14:48:24,729
							base case
2021-07-18 14:48:24,729
returning: i_L=set()
2021-07-18 14:48:24,730
end of function, recursesym: {i_L: set(), D: set(), V_c: OrderedSet([D*V_g/(D - 1), M*V_g, R*i_L*(D - 1), R*i_R]), V_g: OrderedSet([V_c - V_c/D, V_c/M]), M: OrderedSet([V_c/V_g]), R: OrderedSet([V_c/(i_L*(D - 1)), V_c/i_R]), i_R: OrderedSet([V_c/R])}
2021-07-18 14:48:24,731
returning: 
	OrderedSet([V_c/(V_c - V_g), 1 + V_c/(R*i_L), M/(M - 1), R*i_R/(R*i_R - V_g), 
	(i_L + i_R)/i_L, M*V_g/(R*i_L) + 1])
2021-07-18 14:48:24,742
sub-ing in 
   V_c   
─────────
V_c - V_g for 
D
2021-07-18 14:48:24,742
and found 
       V_c       
─────────────────
  ⎛   V_c       ⎞
R⋅⎜───────── - 1⎟
  ⎝V_c - V_g    ⎠
2021-07-18 14:48:24,743
sub-ing in 
     V_c 
1 + ─────
    R⋅i_L for 
D
2021-07-18 14:48:24,743
and found 
i_L
2021-07-18 14:48:24,750
sub-ing in 
  M  
─────
M - 1 for 
D
2021-07-18 14:48:24,750
and found 
     V_c     
─────────────
  ⎛  M      ⎞
R⋅⎜───── - 1⎟
  ⎝M - 1    ⎠
2021-07-18 14:48:24,762
sub-ing in 
   R⋅i_R   
───────────
R⋅i_R - V_g for 
D
2021-07-18 14:48:24,763
and found 
        V_c        
───────────────────
  ⎛   R⋅i_R       ⎞
R⋅⎜─────────── - 1⎟
  ⎝R⋅i_R - V_g    ⎠
2021-07-18 14:48:24,770
sub-ing in 
i_L + i_R
─────────
   i_L    for 
D
2021-07-18 14:48:24,771
and found 
       V_c        
──────────────────
  ⎛     i_L + i_R⎞
R⋅⎜-1 + ─────────⎟
  ⎝        i_L   ⎠
2021-07-18 14:48:24,776
sub-ing in 
M⋅V_g    
───── + 1
R⋅i_L     for 
D
2021-07-18 14:48:24,776
and found 
V_c⋅i_L
───────
 M⋅V_g 
2021-07-18 14:48:24,776
recursesym: 
[i_L, D, V_c, V_g, M, R, i_R]
2021-07-18 14:48:24,777
calling solver looking for 
R
2021-07-18 14:48:24,777
							base case
2021-07-18 14:48:24,777
returning: R=OrderedSet([V_c/(i_L*(D - 1)), V_c/i_R])
2021-07-18 14:48:24,777
sub-ing in 
    V_c    
───────────
i_L⋅(D - 1) for 
R
2021-07-18 14:48:24,777
and found 
i_L
2021-07-18 14:48:24,781
sub-ing in 
V_c
───
i_R for 
R
2021-07-18 14:48:24,782
and found 
 i_R 
─────
D - 1
2021-07-18 14:48:24,782
recursesym: 
[i_L, D, V_c, V_g, M, R, i_R]
2021-07-18 14:48:24,782
calling solver looking for 
V_c
2021-07-18 14:48:24,782
							base case
2021-07-18 14:48:24,782
returning: V_c=OrderedSet([D*V_g/(D - 1), M*V_g, R*i_L*(D - 1), R*i_R])
2021-07-18 14:48:24,791
sub-ing in 
D⋅V_g
─────
D - 1 for 
V_c
2021-07-18 14:48:24,792
and found 
  D⋅V_g   
──────────
         2
R⋅(D - 1) 
2021-07-18 14:48:24,799
sub-ing in 
M⋅V_g for 
V_c
2021-07-18 14:48:24,799
and found 
  M⋅V_g  
─────────
R⋅(D - 1)
2021-07-18 14:48:24,799
sub-ing in 
R⋅i_L⋅(D - 1) for 
V_c
2021-07-18 14:48:24,799
and found 
i_L
2021-07-18 14:48:24,803
sub-ing in 
R⋅i_R for 
V_c
2021-07-18 14:48:24,804
and found 
 i_R 
─────
D - 1
2021-07-18 14:48:24,806
end of function, recursesym: {i_L: set(), D: OrderedSet([V_c/(V_c - V_g), 1 + V_c/(R*i_L), M/(M - 1), R*i_R/(R*i_R - V_g), (i_L + i_R)/i_L, M*V_g/(R*i_L) + 1]), V_c: OrderedSet([D*V_g/(D - 1), M*V_g, R*i_L*(D - 1), R*i_R]), V_g: OrderedSet([V_c - V_c/D, V_c/M]), M: OrderedSet([V_c/V_g]), R: OrderedSet([V_c/(i_L*(D - 1)), V_c/i_R]), i_R: OrderedSet([V_c/R])}
2021-07-18 14:48:24,807
returning: 
OrderedSet([V_c/(R*(D - 1)), V_c*(V_c - V_g)/(R*V_g), V_c*(M - 1)/R, V_c*i_R/V
_g - V_c/R, i_R/(D - 1), D*V_g/(R*(D - 1)**2)])
2021-07-18 14:48:24,862
adding L to []
2021-07-18 14:48:24,862
looking for 
L
2021-07-18 14:48:25,069
nonlinsolve returns: 
     D⋅V_g     
───────────────
2⋅\Delta i_L⋅fₛ
2021-07-18 14:48:25,070

D⋅V_g + V_c⋅(1 - D) solved for 
L=
∅
2021-07-18 14:48:25,070

    V_c
M - ───
    V_g solved for 
L=
∅
2021-07-18 14:48:25,072

  D⋅V_c           ⎛       V_c⎞
- ───── + (1 - D)⋅⎜-i_L - ───⎟
    R             ⎝        R ⎠ solved for 
L=
∅
2021-07-18 14:48:25,074

    V_c
R - ───
    i_R solved for 
L=
∅
2021-07-18 14:48:25,086

  D⋅V_g               
- ───── + 2⋅\Delta i_L
   L⋅fₛ                solved for 
L=
⎧     D⋅V_g     ⎫      
⎨───────────────⎬ \ {0}
⎩2⋅\Delta i_L⋅fₛ⎭      
2021-07-18 14:48:25,092

               D⋅V_c 
2⋅\Delta v_C - ──────
               C⋅R⋅fₛ solved for 
L=
∅
2021-07-18 14:48:25,093

\Delta i_L - 0.1⋅i_L solved for 
L=
∅
2021-07-18 14:48:25,094

-0.1⋅V_c + \Delta v_C solved for 
L=
∅
2021-07-18 14:48:25,098

         V_c   
i_L - ─────────
      R⋅(D - 1) solved for 
L=
∅
2021-07-18 14:48:25,099
Done with 
L
2021-07-18 14:48:25,099
so far L = 
OrderedSet([D*V_g/(2*\Delta i_L*f_s)])
2021-07-18 14:48:25,099
solution to L is: 
     D⋅V_g     
───────────────
2⋅\Delta i_L⋅fₛ 
2021-07-18 14:48:25,099
recursesym: 
[L]
2021-07-18 14:48:25,099
calling solver looking for 
D
2021-07-18 14:48:25,099
	adding D to [L]
2021-07-18 14:48:25,099
looking for 
D
2021-07-18 14:48:25,346
nonlinsolve returns: 
   V_c   
─────────
V_c - V_g
2021-07-18 14:48:25,353

D⋅V_g + V_c⋅(1 - D) solved for 
D=
⎧   V_c   ⎫
⎨─────────⎬
⎩V_c - V_g⎭
2021-07-18 14:48:25,358

    V_c
M - ───
    V_g solved for 
D=
∅
2021-07-18 14:48:25,369

  D⋅V_c           ⎛       V_c⎞
- ───── + (1 - D)⋅⎜-i_L - ───⎟
    R             ⎝        R ⎠ solved for 
D=
⎧R⋅i_L + V_c⎫
⎨───────────⎬
⎩   R⋅i_L   ⎭
2021-07-18 14:48:25,378

    V_c
R - ───
    i_R solved for 
D=
∅
2021-07-18 14:48:25,382

  D⋅V_g               
- ───── + 2⋅\Delta i_L
   L⋅fₛ                solved for 
D=
⎧2⋅L⋅\Delta i_L⋅fₛ⎫
⎨─────────────────⎬
⎩       V_g       ⎭
2021-07-18 14:48:25,393

               D⋅V_c 
2⋅\Delta v_C - ──────
               C⋅R⋅fₛ solved for 
D=
⎧2⋅C⋅R⋅\Delta v_C⋅fₛ⎫
⎨───────────────────⎬
⎩        V_c        ⎭
2021-07-18 14:48:25,399

\Delta i_L - 0.1⋅i_L solved for 
D=
∅
2021-07-18 14:48:25,400

-0.1⋅V_c + \Delta v_C solved for 
D=
∅
2021-07-18 14:48:25,414

         V_c   
i_L - ─────────
      R⋅(D - 1) solved for 
D=
⎧     V_c ⎫      
⎨1 + ─────⎬ \ {1}
⎩    R⋅i_L⎭      
2021-07-18 14:48:25,420
	Done with 
D
2021-07-18 14:48:25,421
	so far D = 
	OrderedSet([V_c/(V_c - V_g), 1 + V_c/(R*i_L), 2*L*\Delta i_L*f_s/V_g, 2*C*R*\D
	elta v_C*f_s/V_c])
2021-07-18 14:48:25,421
	solution to D is: 
	   V_c   
	─────────
	V_c - V_g 
2021-07-18 14:48:25,422
	recursesym: 
	[L, D]
2021-07-18 14:48:25,422
	calling solver looking for 
	V_c
2021-07-18 14:48:25,422
		adding V_c to [L, D]
2021-07-18 14:48:25,422
looking for 
V_c
2021-07-18 14:48:25,559
nonlinsolve returns: 
10.0⋅\Delta v_C
2021-07-18 14:48:25,563

D⋅V_g + V_c⋅(1 - D) solved for 
V_c=
⎧D⋅V_g⎫
⎨─────⎬
⎩D - 1⎭
2021-07-18 14:48:25,571

    V_c
M - ───
    V_g solved for 
V_c=
{M⋅V_g}
2021-07-18 14:48:25,583

  D⋅V_c           ⎛       V_c⎞
- ───── + (1 - D)⋅⎜-i_L - ───⎟
    R             ⎝        R ⎠ solved for 
V_c=
{R⋅i_L⋅(D - 1)}
2021-07-18 14:48:25,590

    V_c
R - ───
    i_R solved for 
V_c=
{R⋅i_R}
2021-07-18 14:48:25,593

  D⋅V_g               
- ───── + 2⋅\Delta i_L
   L⋅fₛ                solved for 
V_c=
∅
2021-07-18 14:48:25,597

               D⋅V_c 
2⋅\Delta v_C - ──────
               C⋅R⋅fₛ solved for 
V_c=
⎧2⋅C⋅R⋅\Delta v_C⋅fₛ⎫
⎨───────────────────⎬
⎩         D         ⎭
2021-07-18 14:48:25,603

\Delta i_L - 0.1⋅i_L solved for 
V_c=
∅
2021-07-18 14:48:25,605

-0.1⋅V_c + \Delta v_C solved for 
V_c=
{10.0⋅\Delta v_C}
2021-07-18 14:48:25,612

         V_c   
i_L - ─────────
      R⋅(D - 1) solved for 
V_c=
{R⋅i_L⋅(D - 1)}
2021-07-18 14:48:25,617
		Done with 
V_c
2021-07-18 14:48:25,617
		so far V_c = 
		OrderedSet([D*V_g/(D - 1), M*V_g, R*i_L*(D - 1), R*i_R, 2*C*R*\Delta v_C*f_s/D
		, 10.0*\Delta v_C])
2021-07-18 14:48:25,618
		solution to V_c is: 
		D⋅V_g
		─────
		D - 1 
2021-07-18 14:48:25,618
		recursesym: 
		[L, D, V_c]
2021-07-18 14:48:25,618
		calling solver looking for 
		D
2021-07-18 14:48:25,618
			base case
2021-07-18 14:48:25,618
returning: D=set()
2021-07-18 14:48:25,618
		recursesym: 
		[L, D, V_c]
2021-07-18 14:48:25,618
		calling solver looking for 
		V_g
2021-07-18 14:48:25,618
			adding V_g to [L, D, V_c]
2021-07-18 14:48:25,618
looking for 
V_g
2021-07-18 14:48:25,755
nonlinsolve returns: 
V_c
───
 M 
2021-07-18 14:48:25,759

D⋅V_g + V_c⋅(1 - D) solved for 
V_g=
⎧V_c⋅(D - 1)⎫
⎨───────────⎬
⎩     D     ⎭
2021-07-18 14:48:25,772

    V_c
M - ───
    V_g solved for 
V_g=
⎧V_c⎫      
⎨───⎬ \ {0}
⎩ M ⎭      
2021-07-18 14:48:25,776

  D⋅V_c           ⎛       V_c⎞
- ───── + (1 - D)⋅⎜-i_L - ───⎟
    R             ⎝        R ⎠ solved for 
V_g=
∅
2021-07-18 14:48:25,777

    V_c
R - ───
    i_R solved for 
V_g=
∅
2021-07-18 14:48:25,781

  D⋅V_g               
- ───── + 2⋅\Delta i_L
   L⋅fₛ                solved for 
V_g=
⎧2⋅L⋅\Delta i_L⋅fₛ⎫
⎨─────────────────⎬
⎩        D        ⎭
2021-07-18 14:48:25,787

               D⋅V_c 
2⋅\Delta v_C - ──────
               C⋅R⋅fₛ solved for 
V_g=
∅
2021-07-18 14:48:25,787

\Delta i_L - 0.1⋅i_L solved for 
V_g=
∅
2021-07-18 14:48:25,788

-0.1⋅V_c + \Delta v_C solved for 
V_g=
∅
2021-07-18 14:48:25,789

         V_c   
i_L - ─────────
      R⋅(D - 1) solved for 
V_g=
∅
2021-07-18 14:48:25,789
			Done with 
V_g
2021-07-18 14:48:25,790
			so far V_g = 
			OrderedSet([V_c - V_c/D, V_c/M, 2*L*\Delta i_L*f_s/D])
2021-07-18 14:48:25,790
			solution to V_g is: 
			      V_c
			V_c - ───
			       D  
2021-07-18 14:48:25,790
			recursesym: 
			[L, D, V_c, V_g]
2021-07-18 14:48:25,790
			calling solver looking for 
			D
2021-07-18 14:48:25,790
				base case
2021-07-18 14:48:25,790
returning: D=set()
2021-07-18 14:48:25,791
			recursesym: 
			[L, D, V_c, V_g]
2021-07-18 14:48:25,791
			calling solver looking for 
			V_c
2021-07-18 14:48:25,791
				base case
2021-07-18 14:48:25,791
returning: V_c=set()
2021-07-18 14:48:25,791
			solution to V_g is: 
			V_c
			───
			 M  
2021-07-18 14:48:25,791
			recursesym: 
			[L, D, V_c, V_g]
2021-07-18 14:48:25,791
			calling solver looking for 
			M
2021-07-18 14:48:25,791
				adding M to [L, D, V_c, V_g]
2021-07-18 14:48:25,791
looking for 
M
2021-07-18 14:48:25,901
nonlinsolve returns: 
V_c
───
V_g
2021-07-18 14:48:25,902

D⋅V_g + V_c⋅(1 - D) solved for 
M=
∅
2021-07-18 14:48:25,904

    V_c
M - ───
    V_g solved for 
M=
⎧V_c⎫
⎨───⎬
⎩V_g⎭
2021-07-18 14:48:25,910

  D⋅V_c           ⎛       V_c⎞
- ───── + (1 - D)⋅⎜-i_L - ───⎟
    R             ⎝        R ⎠ solved for 
M=
∅
2021-07-18 14:48:25,910

    V_c
R - ───
    i_R solved for 
M=
∅
2021-07-18 14:48:25,911

  D⋅V_g               
- ───── + 2⋅\Delta i_L
   L⋅fₛ                solved for 
M=
∅
2021-07-18 14:48:25,912

               D⋅V_c 
2⋅\Delta v_C - ──────
               C⋅R⋅fₛ solved for 
M=
∅
2021-07-18 14:48:25,913

\Delta i_L - 0.1⋅i_L solved for 
M=
∅
2021-07-18 14:48:25,914

-0.1⋅V_c + \Delta v_C solved for 
M=
∅
2021-07-18 14:48:25,915

         V_c   
i_L - ─────────
      R⋅(D - 1) solved for 
M=
∅
2021-07-18 14:48:25,915
				Done with 
M
2021-07-18 14:48:25,915
				so far M = 
				OrderedSet([V_c/V_g])
2021-07-18 14:48:25,915
				solution to M is: 
				V_c
				───
				V_g 
2021-07-18 14:48:25,916
				recursesym: 
				[L, D, V_c, V_g, M]
2021-07-18 14:48:25,916
				calling solver looking for 
				V_c
2021-07-18 14:48:25,916
					base case
2021-07-18 14:48:25,916
returning: V_c=set()
2021-07-18 14:48:25,916
				recursesym: 
				[L, D, V_c, V_g, M]
2021-07-18 14:48:25,916
				calling solver looking for 
				V_g
2021-07-18 14:48:25,916
					base case
2021-07-18 14:48:25,916
returning: V_g=set()
2021-07-18 14:48:25,916
end of function, recursesym: {L: set(), D: set(), V_c: set(), V_g: set(), M: set()}
2021-07-18 14:48:25,916
returning: 
				OrderedSet([V_c/V_g])
2021-07-18 14:48:25,917
			sub-ing in 
			V_c
			───
			V_g for 
			M
2021-07-18 14:48:25,917
			and found 
			V_g
2021-07-18 14:48:25,917
			recursesym: 
			[L, D, V_c, V_g, M]
2021-07-18 14:48:25,917
			calling solver looking for 
			V_c
2021-07-18 14:48:25,917
					base case
2021-07-18 14:48:25,917
returning: V_c=set()
2021-07-18 14:48:25,918
			solution to V_g is: 
			2⋅L⋅\Delta i_L⋅fₛ
			─────────────────
			        D         
2021-07-18 14:48:25,918
			recursesym: 
			[L, D, V_c, V_g, M]
2021-07-18 14:48:25,918
			calling solver looking for 
			D
2021-07-18 14:48:25,918
					base case
2021-07-18 14:48:25,918
returning: D=set()
2021-07-18 14:48:25,918
			recursesym: 
			[L, D, V_c, V_g, M]
2021-07-18 14:48:25,918
			calling solver looking for 
			L
2021-07-18 14:48:25,918
					base case
2021-07-18 14:48:25,918
returning: L=set()
2021-07-18 14:48:25,919
			recursesym: 
			[L, D, V_c, V_g, M]
2021-07-18 14:48:25,919
			calling solver looking for 
			\Delta i_L
2021-07-18 14:48:25,919
					adding delta_iL to [L, D, V_c, V_g, M]
2021-07-18 14:48:25,919
looking for 
\Delta i_L
2021-07-18 14:48:26,031
nonlinsolve returns: 
0.1⋅i_L
2021-07-18 14:48:26,032

D⋅V_g + V_c⋅(1 - D) solved for 
\Delta i_L=
∅
2021-07-18 14:48:26,032

    V_c
M - ───
    V_g solved for 
\Delta i_L=
∅
2021-07-18 14:48:26,033

  D⋅V_c           ⎛       V_c⎞
- ───── + (1 - D)⋅⎜-i_L - ───⎟
    R             ⎝        R ⎠ solved for 
\Delta i_L=
∅
2021-07-18 14:48:26,034

    V_c
R - ───
    i_R solved for 
\Delta i_L=
∅
2021-07-18 14:48:26,038

  D⋅V_g               
- ───── + 2⋅\Delta i_L
   L⋅fₛ                solved for 
\Delta i_L=
⎧D⋅V_g ⎫
⎨──────⎬
⎩2⋅L⋅fₛ⎭
2021-07-18 14:48:26,045

               D⋅V_c 
2⋅\Delta v_C - ──────
               C⋅R⋅fₛ solved for 
\Delta i_L=
∅
2021-07-18 14:48:26,046

\Delta i_L - 0.1⋅i_L solved for 
\Delta i_L=
{0.1⋅i_L}
2021-07-18 14:48:26,050

-0.1⋅V_c + \Delta v_C solved for 
\Delta i_L=
∅
2021-07-18 14:48:26,051

         V_c   
i_L - ─────────
      R⋅(D - 1) solved for 
\Delta i_L=
∅
2021-07-18 14:48:26,051
					Done with 
\Delta i_L
2021-07-18 14:48:26,051
					so far delta_iL = 
					OrderedSet([D*V_g/(2*L*f_s), 0.1*i_L])
2021-07-18 14:48:26,051
					solution to delta_iL is: 
					D⋅V_g 
					──────
					2⋅L⋅fₛ 
2021-07-18 14:48:26,051
					recursesym: 
					[L, D, V_c, V_g, M, \Delta i_L]
2021-07-18 14:48:26,051
					calling solver looking for 
					D
2021-07-18 14:48:26,052
						base case
2021-07-18 14:48:26,052
returning: D=set()
2021-07-18 14:48:26,052
					recursesym: 
					[L, D, V_c, V_g, M, \Delta i_L]
2021-07-18 14:48:26,052
					calling solver looking for 
					L
2021-07-18 14:48:26,052
						base case
2021-07-18 14:48:26,052
returning: L=set()
2021-07-18 14:48:26,052
					recursesym: 
					[L, D, V_c, V_g, M, \Delta i_L]
2021-07-18 14:48:26,052
					calling solver looking for 
					V_g
2021-07-18 14:48:26,052
						base case
2021-07-18 14:48:26,052
returning: V_g=set()
2021-07-18 14:48:26,053
					recursesym: 
					[L, D, V_c, V_g, M, \Delta i_L]
2021-07-18 14:48:26,053
					calling solver looking for 
					fₛ
2021-07-18 14:48:26,053
						adding f_s to [L, D, V_c, V_g, M, \Delta i_L]
2021-07-18 14:48:26,053
looking for 
fₛ
2021-07-18 14:48:26,206
nonlinsolve returns: 
    D⋅V_g     
──────────────
2⋅L⋅\Delta i_L
2021-07-18 14:48:26,207

D⋅V_g + V_c⋅(1 - D) solved for 
fₛ=
∅
2021-07-18 14:48:26,208

    V_c
M - ───
    V_g solved for 
fₛ=
∅
2021-07-18 14:48:26,209

  D⋅V_c           ⎛       V_c⎞
- ───── + (1 - D)⋅⎜-i_L - ───⎟
    R             ⎝        R ⎠ solved for 
fₛ=
∅
2021-07-18 14:48:26,209

    V_c
R - ───
    i_R solved for 
fₛ=
∅
2021-07-18 14:48:26,218

  D⋅V_g               
- ───── + 2⋅\Delta i_L
   L⋅fₛ                solved for 
fₛ=
⎧    D⋅V_g     ⎫      
⎨──────────────⎬ \ {0}
⎩2⋅L⋅\Delta i_L⎭      
2021-07-18 14:48:26,236

               D⋅V_c 
2⋅\Delta v_C - ──────
               C⋅R⋅fₛ solved for 
fₛ=
⎧     D⋅V_c      ⎫      
⎨────────────────⎬ \ {0}
⎩2⋅C⋅R⋅\Delta v_C⎭      
2021-07-18 14:48:26,244

\Delta i_L - 0.1⋅i_L solved for 
fₛ=
∅
2021-07-18 14:48:26,245

-0.1⋅V_c + \Delta v_C solved for 
fₛ=
∅
2021-07-18 14:48:26,246

         V_c   
i_L - ─────────
      R⋅(D - 1) solved for 
fₛ=
∅
2021-07-18 14:48:26,246
						Done with 
fₛ
2021-07-18 14:48:26,246
						so far f_s = 
						OrderedSet([D*V_g/(2*L*\Delta i_L), D*V_c/(2*C*R*\Delta v_C)])
2021-07-18 14:48:26,246
						solution to f_s is: 
						    D⋅V_g     
						──────────────
						2⋅L⋅\Delta i_L 
2021-07-18 14:48:26,247
						recursesym: 
						[L, D, V_c, V_g, M, \Delta i_L, fₛ]
2021-07-18 14:48:26,247
						calling solver looking for 
						D
2021-07-18 14:48:26,247
							base case
2021-07-18 14:48:26,247
returning: D=set()
2021-07-18 14:48:26,247
						recursesym: 
						[L, D, V_c, V_g, M, \Delta i_L, fₛ]
2021-07-18 14:48:26,247
						calling solver looking for 
						L
2021-07-18 14:48:26,247
							base case
2021-07-18 14:48:26,247
returning: L=set()
2021-07-18 14:48:26,247
						recursesym: 
						[L, D, V_c, V_g, M, \Delta i_L, fₛ]
2021-07-18 14:48:26,247
						calling solver looking for 
						V_g
2021-07-18 14:48:26,247
							base case
2021-07-18 14:48:26,248
returning: V_g=set()
2021-07-18 14:48:26,248
						recursesym: 
						[L, D, V_c, V_g, M, \Delta i_L, fₛ]
2021-07-18 14:48:26,248
						calling solver looking for 
						\Delta i_L
2021-07-18 14:48:26,248
							base case
2021-07-18 14:48:26,248
returning: delta_iL=set()
2021-07-18 14:48:26,248
						solution to f_s is: 
						     D⋅V_c      
						────────────────
						2⋅C⋅R⋅\Delta v_C 
2021-07-18 14:48:26,249
						recursesym: 
						[L, D, V_c, V_g, M, \Delta i_L, fₛ]
2021-07-18 14:48:26,249
						calling solver looking for 
						C
2021-07-18 14:48:26,249
							adding C to [L, D, V_c, V_g, M, \Delta i_L, f_s]
2021-07-18 14:48:26,249
looking for 
C
2021-07-18 14:48:26,382
nonlinsolve returns: 
      D⋅V_c      
─────────────────
2⋅R⋅\Delta v_C⋅fₛ
2021-07-18 14:48:26,383

D⋅V_g + V_c⋅(1 - D) solved for 
C=
∅
2021-07-18 14:48:26,383

    V_c
M - ───
    V_g solved for 
C=
∅
2021-07-18 14:48:26,384

  D⋅V_c           ⎛       V_c⎞
- ───── + (1 - D)⋅⎜-i_L - ───⎟
    R             ⎝        R ⎠ solved for 
C=
∅
2021-07-18 14:48:26,385

    V_c
R - ───
    i_R solved for 
C=
∅
2021-07-18 14:48:26,386

  D⋅V_g               
- ───── + 2⋅\Delta i_L
   L⋅fₛ                solved for 
C=
∅
2021-07-18 14:48:26,396

               D⋅V_c 
2⋅\Delta v_C - ──────
               C⋅R⋅fₛ solved for 
C=
⎧      D⋅V_c      ⎫      
⎨─────────────────⎬ \ {0}
⎩2⋅R⋅\Delta v_C⋅fₛ⎭      
2021-07-18 14:48:26,401

\Delta i_L - 0.1⋅i_L solved for 
C=
∅
2021-07-18 14:48:26,402

-0.1⋅V_c + \Delta v_C solved for 
C=
∅
2021-07-18 14:48:26,403

         V_c   
i_L - ─────────
      R⋅(D - 1) solved for 
C=
∅
2021-07-18 14:48:26,403
							Done with 
C
2021-07-18 14:48:26,403
							so far C = 
							OrderedSet([D*V_c/(2*R*\Delta v_C*f_s)])
2021-07-18 14:48:26,403
							solution to C is: 
							      D⋅V_c      
							─────────────────
							2⋅R⋅\Delta v_C⋅fₛ 
2021-07-18 14:48:26,404
							recursesym: 
							[L, D, V_c, V_g, M, \Delta i_L, fₛ, C]
2021-07-18 14:48:26,404
							calling solver looking for 
							D
2021-07-18 14:48:26,404
								base case
2021-07-18 14:48:26,404
returning: D=set()
2021-07-18 14:48:26,404
							recursesym: 
							[L, D, V_c, V_g, M, \Delta i_L, fₛ, C]
2021-07-18 14:48:26,404
							calling solver looking for 
							R
2021-07-18 14:48:26,404
								adding R to [L, D, V_c, V_g, M, \Delta i_L, f_s, C]
2021-07-18 14:48:26,404
looking for 
R
2021-07-18 14:48:26,596
nonlinsolve returns: 
V_c
───
i_R
2021-07-18 14:48:26,597

D⋅V_g + V_c⋅(1 - D) solved for 
R=
∅
2021-07-18 14:48:26,598

    V_c
M - ───
    V_g solved for 
R=
∅
2021-07-18 14:48:26,619

  D⋅V_c           ⎛       V_c⎞
- ───── + (1 - D)⋅⎜-i_L - ───⎟
    R             ⎝        R ⎠ solved for 
R=
⎧D⋅V_c      ⎫      
⎪───── - V_c⎪      
⎨D - 1      ⎬      
⎪───────────⎪ \ {0}
⎩    i_L    ⎭      
2021-07-18 14:48:26,635

    V_c
R - ───
    i_R solved for 
R=
⎧V_c⎫
⎨───⎬
⎩i_R⎭
2021-07-18 14:48:26,639

  D⋅V_g               
- ───── + 2⋅\Delta i_L
   L⋅fₛ                solved for 
R=
∅
2021-07-18 14:48:26,657

               D⋅V_c 
2⋅\Delta v_C - ──────
               C⋅R⋅fₛ solved for 
R=
⎧      D⋅V_c      ⎫      
⎨─────────────────⎬ \ {0}
⎩2⋅C⋅\Delta v_C⋅fₛ⎭      
2021-07-18 14:48:26,667

\Delta i_L - 0.1⋅i_L solved for 
R=
∅
2021-07-18 14:48:26,668

-0.1⋅V_c + \Delta v_C solved for 
R=
∅
2021-07-18 14:48:26,688

         V_c   
i_L - ─────────
      R⋅(D - 1) solved for 
R=
⎧    V_c    ⎫      
⎨───────────⎬ \ {0}
⎩i_L⋅(D - 1)⎭      
2021-07-18 14:48:26,696
								Done with 
R
2021-07-18 14:48:26,696
								so far R = 
								OrderedSet([V_c/(i_L*(D - 1)), V_c/i_R, D*V_c/(2*C*\Delta v_C*f_s)])
2021-07-18 14:48:26,697
								solution to R is: 
								    V_c    
								───────────
								i_L⋅(D - 1) 
2021-07-18 14:48:26,697
								recursesym: 
								[L, D, V_c, V_g, M, \Delta i_L, fₛ, C, R]
2021-07-18 14:48:26,697
								calling solver looking for 
								D
2021-07-18 14:48:26,697
									base case
2021-07-18 14:48:26,697
returning: D=set()
2021-07-18 14:48:26,698
								recursesym: 
								[L, D, V_c, V_g, M, \Delta i_L, fₛ, C, R]
2021-07-18 14:48:26,698
								calling solver looking for 
								V_c
2021-07-18 14:48:26,698
									base case
2021-07-18 14:48:26,698
returning: V_c=set()
2021-07-18 14:48:26,698
								recursesym: 
								[L, D, V_c, V_g, M, \Delta i_L, fₛ, C, R]
2021-07-18 14:48:26,698
								calling solver looking for 
								i_L
2021-07-18 14:48:26,699
									adding i_L to [L, D, V_c, V_g, M, \Delta i_L, f_s, C, R]
2021-07-18 14:48:26,699
looking for 
i_L
2021-07-18 14:48:26,855
nonlinsolve returns: 
10.0⋅\Delta i_L
2021-07-18 14:48:26,856

D⋅V_g + V_c⋅(1 - D) solved for 
i_L=
∅
2021-07-18 14:48:26,857

    V_c
M - ───
    V_g solved for 
i_L=
∅
2021-07-18 14:48:26,864

  D⋅V_c           ⎛       V_c⎞
- ───── + (1 - D)⋅⎜-i_L - ───⎟
    R             ⎝        R ⎠ solved for 
i_L=
⎧  D⋅V_c     V_c⎫
⎨───────── - ───⎬
⎩R⋅(D - 1)    R ⎭
2021-07-18 14:48:26,876

    V_c
R - ───
    i_R solved for 
i_L=
∅
2021-07-18 14:48:26,877

  D⋅V_g               
- ───── + 2⋅\Delta i_L
   L⋅fₛ                solved for 
i_L=
∅
2021-07-18 14:48:26,878

               D⋅V_c 
2⋅\Delta v_C - ──────
               C⋅R⋅fₛ solved for 
i_L=
∅
2021-07-18 14:48:26,880

\Delta i_L - 0.1⋅i_L solved for 
i_L=
{10.0⋅\Delta i_L}
2021-07-18 14:48:26,883

-0.1⋅V_c + \Delta v_C solved for 
i_L=
∅
2021-07-18 14:48:26,887

         V_c   
i_L - ─────────
      R⋅(D - 1) solved for 
i_L=
⎧   V_c   ⎫
⎨─────────⎬
⎩R⋅(D - 1)⎭
2021-07-18 14:48:26,892
									Done with 
i_L
2021-07-18 14:48:26,893
									so far i_L = 
									OrderedSet([V_c/(R*(D - 1)), 10.0*\Delta i_L])
2021-07-18 14:48:26,893
									solution to i_L is: 
									   V_c   
									─────────
									R⋅(D - 1) 
2021-07-18 14:48:26,893
									recursesym: 
									[L, D, V_c, V_g, M, \Delta i_L, fₛ, C, R, i_L]
2021-07-18 14:48:26,894
									calling solver looking for 
									D
2021-07-18 14:48:26,894
										base case
2021-07-18 14:48:26,894
returning: D=set()
2021-07-18 14:48:26,894
									recursesym: 
									[L, D, V_c, V_g, M, \Delta i_L, fₛ, C, R, i_L]
2021-07-18 14:48:26,894
									calling solver looking for 
									R
2021-07-18 14:48:26,894
										base case
2021-07-18 14:48:26,894
returning: R=set()
2021-07-18 14:48:26,894
									recursesym: 
									[L, D, V_c, V_g, M, \Delta i_L, fₛ, C, R, i_L]
2021-07-18 14:48:26,894
									calling solver looking for 
									V_c
2021-07-18 14:48:26,894
										base case
2021-07-18 14:48:26,894
returning: V_c=set()
2021-07-18 14:48:26,895
									solution to i_L is: 
									10.0⋅\Delta i_L 
2021-07-18 14:48:26,895
									recursesym: 
									[L, D, V_c, V_g, M, \Delta i_L, fₛ, C, R, i_L]
2021-07-18 14:48:26,895
									calling solver looking for 
									\Delta i_L
2021-07-18 14:48:26,895
										base case
2021-07-18 14:48:26,895
returning: delta_iL=set()
2021-07-18 14:48:26,895
end of function, recursesym: {L: set(), D: set(), V_c: set(), V_g: set(), M: OrderedSet([V_c/V_g]), \Delta i_L: set(), f_s: set(), C: set(), R: set(), i_L: set()}
2021-07-18 14:48:26,896
returning: 
									OrderedSet([V_c/(R*(D - 1)), 10.0*\Delta i_L])
2021-07-18 14:48:26,896
								sub-ing in 
								   V_c   
								─────────
								R⋅(D - 1) for 
								i_L
2021-07-18 14:48:26,896
								and found 
								R
2021-07-18 14:48:26,911
								sub-ing in 
								10.0⋅\Delta i_L for 
								i_L
2021-07-18 14:48:26,911
								and found 
								     0.1⋅V_c      
								──────────────────
								\Delta i_L⋅(D - 1)
2021-07-18 14:48:26,911
								solution to R is: 
								V_c
								───
								i_R 
2021-07-18 14:48:26,912
								recursesym: 
								[L, D, V_c, V_g, M, \Delta i_L, fₛ, C, R, i_L]
2021-07-18 14:48:26,912
								calling solver looking for 
								V_c
2021-07-18 14:48:26,912
										base case
2021-07-18 14:48:26,912
returning: V_c=set()
2021-07-18 14:48:26,912
								recursesym: 
								[L, D, V_c, V_g, M, \Delta i_L, fₛ, C, R, i_L]
2021-07-18 14:48:26,912
								calling solver looking for 
								i_R
2021-07-18 14:48:26,912
										adding i_R to [L, D, V_c, V_g, M, \Delta i_L, f_s, C, R, i_L]
2021-07-18 14:48:26,912
looking for 
i_R
2021-07-18 14:48:27,020
nonlinsolve returns: 
V_c
───
 R 
2021-07-18 14:48:27,021

D⋅V_g + V_c⋅(1 - D) solved for 
i_R=
∅
2021-07-18 14:48:27,021

    V_c
M - ───
    V_g solved for 
i_R=
∅
2021-07-18 14:48:27,023

  D⋅V_c           ⎛       V_c⎞
- ───── + (1 - D)⋅⎜-i_L - ───⎟
    R             ⎝        R ⎠ solved for 
i_R=
∅
2021-07-18 14:48:27,029

    V_c
R - ───
    i_R solved for 
i_R=
⎧V_c⎫      
⎨───⎬ \ {0}
⎩ R ⎭      
2021-07-18 14:48:27,033

  D⋅V_g               
- ───── + 2⋅\Delta i_L
   L⋅fₛ                solved for 
i_R=
∅
2021-07-18 14:48:27,033

               D⋅V_c 
2⋅\Delta v_C - ──────
               C⋅R⋅fₛ solved for 
i_R=
∅
2021-07-18 14:48:27,034

\Delta i_L - 0.1⋅i_L solved for 
i_R=
∅
2021-07-18 14:48:27,035

-0.1⋅V_c + \Delta v_C solved for 
i_R=
∅
2021-07-18 14:48:27,035

         V_c   
i_L - ─────────
      R⋅(D - 1) solved for 
i_R=
∅
2021-07-18 14:48:27,035
										Done with 
i_R
2021-07-18 14:48:27,036
										so far i_R = 
										OrderedSet([V_c/R])
2021-07-18 14:48:27,036
										solution to i_R is: 
										V_c
										───
										 R  
2021-07-18 14:48:27,036
										recursesym: 
										[L, D, V_c, V_g, M, \Delta i_L, fₛ, C, R, i_L, i_R]
2021-07-18 14:48:27,036
										calling solver looking for 
										R
2021-07-18 14:48:27,036
											base case
2021-07-18 14:48:27,036
returning: R=set()
2021-07-18 14:48:27,037
										recursesym: 
										[L, D, V_c, V_g, M, \Delta i_L, fₛ, C, R, i_L, i_R]
2021-07-18 14:48:27,037
										calling solver looking for 
										V_c
2021-07-18 14:48:27,037
											base case
2021-07-18 14:48:27,037
returning: V_c=set()
2021-07-18 14:48:27,037
end of function, recursesym: {L: set(), D: set(), V_c: set(), V_g: set(), M: OrderedSet([V_c/V_g]), \Delta i_L: set(), f_s: set(), C: set(), R: set(), i_L: OrderedSet([V_c/(R*(D - 1)), 10.0*\Delta i_L]), i_R: set()}
2021-07-18 14:48:27,037
returning: 
										OrderedSet([V_c/R])
2021-07-18 14:48:27,037
								sub-ing in 
								V_c
								───
								 R  for 
								i_R
2021-07-18 14:48:27,038
								and found 
								R
2021-07-18 14:48:27,038
								solution to R is: 
								      D⋅V_c      
								─────────────────
								2⋅C⋅\Delta v_C⋅fₛ 
2021-07-18 14:48:27,038
								recursesym: 
								[L, D, V_c, V_g, M, \Delta i_L, fₛ, C, R, i_L, i_R]
2021-07-18 14:48:27,038
								calling solver looking for 
								C
2021-07-18 14:48:27,038
											base case
2021-07-18 14:48:27,038
returning: C=set()
2021-07-18 14:48:27,039
								recursesym: 
								[L, D, V_c, V_g, M, \Delta i_L, fₛ, C, R, i_L, i_R]
2021-07-18 14:48:27,039
								calling solver looking for 
								D
2021-07-18 14:48:27,039
											base case
2021-07-18 14:48:27,039
returning: D=set()
2021-07-18 14:48:27,039
								recursesym: 
								[L, D, V_c, V_g, M, \Delta i_L, fₛ, C, R, i_L, i_R]
2021-07-18 14:48:27,039
								calling solver looking for 
								V_c
2021-07-18 14:48:27,039
											base case
2021-07-18 14:48:27,039
returning: V_c=set()
2021-07-18 14:48:27,040
								recursesym: 
								[L, D, V_c, V_g, M, \Delta i_L, fₛ, C, R, i_L, i_R]
2021-07-18 14:48:27,040
								calling solver looking for 
								\Delta v_C
2021-07-18 14:48:27,040
											adding detla_vC to [L, D, V_c, V_g, M, \Delta i_L, f_s, C, R, i_L, i_R]
2021-07-18 14:48:27,040
looking for 
\Delta v_C
2021-07-18 14:48:27,150
nonlinsolve returns: 
0.1⋅V_c
2021-07-18 14:48:27,150

D⋅V_g + V_c⋅(1 - D) solved for 
\Delta v_C=
∅
2021-07-18 14:48:27,151

    V_c
M - ───
    V_g solved for 
\Delta v_C=
∅
2021-07-18 14:48:27,152

  D⋅V_c           ⎛       V_c⎞
- ───── + (1 - D)⋅⎜-i_L - ───⎟
    R             ⎝        R ⎠ solved for 
\Delta v_C=
∅
2021-07-18 14:48:27,153

    V_c
R - ───
    i_R solved for 
\Delta v_C=
∅
2021-07-18 14:48:27,154

  D⋅V_g               
- ───── + 2⋅\Delta i_L
   L⋅fₛ                solved for 
\Delta v_C=
∅
2021-07-18 14:48:27,160

               D⋅V_c 
2⋅\Delta v_C - ──────
               C⋅R⋅fₛ solved for 
\Delta v_C=
⎧ D⋅V_c  ⎫
⎨────────⎬
⎩2⋅C⋅R⋅fₛ⎭
2021-07-18 14:48:27,170

\Delta i_L - 0.1⋅i_L solved for 
\Delta v_C=
∅
2021-07-18 14:48:27,172

-0.1⋅V_c + \Delta v_C solved for 
\Delta v_C=
{0.1⋅V_c}
2021-07-18 14:48:27,177

         V_c   
i_L - ─────────
      R⋅(D - 1) solved for 
\Delta v_C=
∅
2021-07-18 14:48:27,177
											Done with 
\Delta v_C
2021-07-18 14:48:27,178
											so far detla_vC = 
											OrderedSet([D*V_c/(2*C*R*f_s), 0.1*V_c])
2021-07-18 14:48:27,178
											solution to detla_vC is: 
											 D⋅V_c  
											────────
											2⋅C⋅R⋅fₛ 
2021-07-18 14:48:27,179
											recursesym: 
											[L, D, V_c, V_g, M, \Delta i_L, fₛ, C, R, i_L, i_R, \Delta v_C]
2021-07-18 14:48:27,179
											calling solver looking for 
											C
2021-07-18 14:48:27,179
												base case
2021-07-18 14:48:27,179
returning: C=set()
2021-07-18 14:48:27,179
											recursesym: 
											[L, D, V_c, V_g, M, \Delta i_L, fₛ, C, R, i_L, i_R, \Delta v_C]
2021-07-18 14:48:27,179
											calling solver looking for 
											D
2021-07-18 14:48:27,180
												base case
2021-07-18 14:48:27,180
returning: D=set()
2021-07-18 14:48:27,180
											recursesym: 
											[L, D, V_c, V_g, M, \Delta i_L, fₛ, C, R, i_L, i_R, \Delta v_C]
2021-07-18 14:48:27,180
											calling solver looking for 
											R
2021-07-18 14:48:27,180
												base case
2021-07-18 14:48:27,180
returning: R=set()
2021-07-18 14:48:27,181
											recursesym: 
											[L, D, V_c, V_g, M, \Delta i_L, fₛ, C, R, i_L, i_R, \Delta v_C]
2021-07-18 14:48:27,181
											calling solver looking for 
											V_c
2021-07-18 14:48:27,181
												base case
2021-07-18 14:48:27,181
returning: V_c=set()
2021-07-18 14:48:27,181
											recursesym: 
											[L, D, V_c, V_g, M, \Delta i_L, fₛ, C, R, i_L, i_R, \Delta v_C]
2021-07-18 14:48:27,181
											calling solver looking for 
											fₛ
2021-07-18 14:48:27,181
												base case
2021-07-18 14:48:27,182
returning: f_s=set()
2021-07-18 14:48:27,182
											solution to detla_vC is: 
											0.1⋅V_c 
2021-07-18 14:48:27,182
											recursesym: 
											[L, D, V_c, V_g, M, \Delta i_L, fₛ, C, R, i_L, i_R, \Delta v_C]
2021-07-18 14:48:27,182
											calling solver looking for 
											V_c
2021-07-18 14:48:27,182
												base case
2021-07-18 14:48:27,182
returning: V_c=set()
2021-07-18 14:48:27,183
end of function, recursesym: {L: set(), D: set(), V_c: set(), V_g: set(), M: OrderedSet([V_c/V_g]), \Delta i_L: set(), f_s: set(), C: set(), R: set(), i_L: OrderedSet([V_c/(R*(D - 1)), 10.0*\Delta i_L]), i_R: OrderedSet([V_c/R]), \Delta v_C: set()}
2021-07-18 14:48:27,184
returning: 
											OrderedSet([D*V_c/(2*C*R*f_s), 0.1*V_c])
2021-07-18 14:48:27,185
								sub-ing in 
								 D⋅V_c  
								────────
								2⋅C⋅R⋅fₛ for 
								\Delta v_C
2021-07-18 14:48:27,185
								and found 
								R
2021-07-18 14:48:27,198
								sub-ing in 
								0.1⋅V_c for 
								\Delta v_C
2021-07-18 14:48:27,198
								and found 
								5.0⋅D
								─────
								 C⋅fₛ
2021-07-18 14:48:27,199
								recursesym: 
								[L, D, V_c, V_g, M, \Delta i_L, fₛ, C, R, i_L, i_R, \Delta v_C]
2021-07-18 14:48:27,199
								calling solver looking for 
								fₛ
2021-07-18 14:48:27,199
												base case
2021-07-18 14:48:27,199
returning: f_s=set()
2021-07-18 14:48:27,200
end of function, recursesym: {L: set(), D: set(), V_c: set(), V_g: set(), M: OrderedSet([V_c/V_g]), \Delta i_L: set(), f_s: set(), C: set(), R: set(), i_L: OrderedSet([V_c/(R*(D - 1)), 10.0*\Delta i_L]), i_R: OrderedSet([V_c/R]), \Delta v_C: OrderedSet([D*V_c/(2*C*R*f_s), 0.1*V_c])}
2021-07-18 14:48:27,201
returning: 
								OrderedSet([V_c/(i_L*(D - 1)), V_c/i_R, D*V_c/(2*C*\Delta v_C*f_s), 0.1*V_c/(\
								Delta i_L*(D - 1)), 5.0*D/(C*f_s)])
2021-07-18 14:48:27,224
							sub-ing in 
							    V_c    
							───────────
							i_L⋅(D - 1) for 
							R
2021-07-18 14:48:27,225
							and found 
							 D⋅i_L⋅(D - 1) 
							───────────────
							2⋅\Delta v_C⋅fₛ
2021-07-18 14:48:27,236
							sub-ing in 
							V_c
							───
							i_R for 
							R
2021-07-18 14:48:27,237
							and found 
							     D⋅i_R     
							───────────────
							2⋅\Delta v_C⋅fₛ
2021-07-18 14:48:27,238
							sub-ing in 
							      D⋅V_c      
							─────────────────
							2⋅C⋅\Delta v_C⋅fₛ for 
							R
2021-07-18 14:48:27,239
							and found 
							C
2021-07-18 14:48:27,269
							sub-ing in 
							     0.1⋅V_c      
							──────────────────
							\Delta i_L⋅(D - 1) for 
							R
2021-07-18 14:48:27,269
							and found 
							5.0⋅D⋅\Delta i_L⋅(D - 1)
							────────────────────────
							     \Delta v_C⋅fₛ      
2021-07-18 14:48:27,283
							sub-ing in 
							5.0⋅D
							─────
							 C⋅fₛ for 
							R
2021-07-18 14:48:27,283
							and found 
							0.1⋅C⋅V_c 
							──────────
							\Delta v_C
2021-07-18 14:48:27,284
							recursesym: 
							[L, D, V_c, V_g, M, \Delta i_L, fₛ, C, R, i_L, i_R, \Delta v_C]
2021-07-18 14:48:27,284
							calling solver looking for 
							V_c
2021-07-18 14:48:27,284
												base case
2021-07-18 14:48:27,284
returning: V_c=set()
2021-07-18 14:48:27,285
							recursesym: 
							[L, D, V_c, V_g, M, \Delta i_L, fₛ, C, R, i_L, i_R, \Delta v_C]
2021-07-18 14:48:27,285
							calling solver looking for 
							\Delta v_C
2021-07-18 14:48:27,285
												base case
2021-07-18 14:48:27,285
returning: detla_vC=OrderedSet([D*V_c/(2*C*R*f_s), 0.1*V_c])
2021-07-18 14:48:27,286
							sub-ing in 
							 D⋅V_c  
							────────
							2⋅C⋅R⋅fₛ for 
							\Delta v_C
2021-07-18 14:48:27,286
							and found 
							C
2021-07-18 14:48:27,299
							sub-ing in 
							0.1⋅V_c for 
							\Delta v_C
2021-07-18 14:48:27,299
							and found 
							5.0⋅D
							─────
							 R⋅fₛ
2021-07-18 14:48:27,300
							recursesym: 
							[L, D, V_c, V_g, M, \Delta i_L, fₛ, C, R, i_L, i_R, \Delta v_C]
2021-07-18 14:48:27,300
							calling solver looking for 
							fₛ
2021-07-18 14:48:27,300
												base case
2021-07-18 14:48:27,300
returning: f_s=set()
2021-07-18 14:48:27,302
end of function, recursesym: {L: set(), D: set(), V_c: set(), V_g: set(), M: OrderedSet([V_c/V_g]), \Delta i_L: set(), f_s: set(), C: set(), R: OrderedSet([V_c/(i_L*(D - 1)), V_c/i_R, D*V_c/(2*C*\Delta v_C*f_s), 0.1*V_c/(\Delta i_L*(D - 1)), 5.0*D/(C*f_s)]), i_L: OrderedSet([V_c/(R*(D - 1)), 10.0*\Delta i_L]), i_R: OrderedSet([V_c/R]), \Delta v_C: OrderedSet([D*V_c/(2*C*R*f_s), 0.1*V_c])}
2021-07-18 14:48:27,303
returning: 
							OrderedSet([D*V_c/(2*R*\Delta v_C*f_s), D*i_L*(D - 1)/(2*\Delta v_C*f_s), D*i_
							R/(2*\Delta v_C*f_s), 5.0*D*\Delta i_L*(D - 1)/(\Delta v_C*f_s), 5.0*D/(R*f_s)
							])
2021-07-18 14:48:27,305
						sub-ing in 
						      D⋅V_c      
						─────────────────
						2⋅R⋅\Delta v_C⋅fₛ for 
						C
2021-07-18 14:48:27,305
						and found 
						fₛ
2021-07-18 14:48:27,324
						sub-ing in 
						 D⋅i_L⋅(D - 1) 
						───────────────
						2⋅\Delta v_C⋅fₛ for 
						C
2021-07-18 14:48:27,325
						and found 
						    V_c⋅fₛ   
						─────────────
						R⋅i_L⋅(D - 1)
2021-07-18 14:48:27,335
						sub-ing in 
						     D⋅i_R     
						───────────────
						2⋅\Delta v_C⋅fₛ for 
						C
2021-07-18 14:48:27,336
						and found 
						V_c⋅fₛ
						──────
						R⋅i_R 
2021-07-18 14:48:27,365
						sub-ing in 
						5.0⋅D⋅\Delta i_L⋅(D - 1)
						────────────────────────
						     \Delta v_C⋅fₛ       for 
						C
2021-07-18 14:48:27,366
						and found 
						     0.1⋅V_c⋅fₛ     
						────────────────────
						R⋅\Delta i_L⋅(D - 1)
2021-07-18 14:48:27,377
						sub-ing in 
						5.0⋅D
						─────
						 R⋅fₛ for 
						C
2021-07-18 14:48:27,379
						and found 
						0.1⋅V_c⋅fₛ
						──────────
						\Delta v_C
2021-07-18 14:48:27,380
						recursesym: 
						[L, D, V_c, V_g, M, \Delta i_L, fₛ, C, R, i_L, i_R, \Delta v_C]
2021-07-18 14:48:27,380
						calling solver looking for 
						D
2021-07-18 14:48:27,380
												base case
2021-07-18 14:48:27,380
returning: D=set()
2021-07-18 14:48:27,380
						recursesym: 
						[L, D, V_c, V_g, M, \Delta i_L, fₛ, C, R, i_L, i_R, \Delta v_C]
2021-07-18 14:48:27,380
						calling solver looking for 
						R
2021-07-18 14:48:27,380
												base case
2021-07-18 14:48:27,381
returning: R=OrderedSet([V_c/(i_L*(D - 1)), V_c/i_R, D*V_c/(2*C*\Delta v_C*f_s), 0.1*V_c/(\
Delta i_L*(D - 1)), 5.0*D/(C*f_s)])
2021-07-18 14:48:27,398
						sub-ing in 
						    V_c    
						───────────
						i_L⋅(D - 1) for 
						R
2021-07-18 14:48:27,398
						and found 
						D⋅i_L⋅(D - 1) 
						──────────────
						2⋅C⋅\Delta v_C
2021-07-18 14:48:27,407
						sub-ing in 
						V_c
						───
						i_R for 
						R
2021-07-18 14:48:27,407
						and found 
						    D⋅i_R     
						──────────────
						2⋅C⋅\Delta v_C
2021-07-18 14:48:27,408
						sub-ing in 
						      D⋅V_c      
						─────────────────
						2⋅C⋅\Delta v_C⋅fₛ for 
						R
2021-07-18 14:48:27,408
						and found 
						fₛ
2021-07-18 14:48:27,425
						sub-ing in 
						     0.1⋅V_c      
						──────────────────
						\Delta i_L⋅(D - 1) for 
						R
2021-07-18 14:48:27,426
						and found 
						5.0⋅D⋅\Delta i_L⋅(D - 1)
						────────────────────────
						      C⋅\Delta v_C      
2021-07-18 14:48:27,430
						sub-ing in 
						5.0⋅D
						─────
						 C⋅fₛ for 
						R
2021-07-18 14:48:27,430
						and found 
						0.1⋅V_c⋅fₛ
						──────────
						\Delta v_C
2021-07-18 14:48:27,431
						recursesym: 
						[L, D, V_c, V_g, M, \Delta i_L, fₛ, C, R, i_L, i_R, \Delta v_C]
2021-07-18 14:48:27,431
						calling solver looking for 
						V_c
2021-07-18 14:48:27,431
												base case
2021-07-18 14:48:27,431
returning: V_c=set()
2021-07-18 14:48:27,431
						recursesym: 
						[L, D, V_c, V_g, M, \Delta i_L, fₛ, C, R, i_L, i_R, \Delta v_C]
2021-07-18 14:48:27,431
						calling solver looking for 
						\Delta v_C
2021-07-18 14:48:27,431
												base case
2021-07-18 14:48:27,431
returning: detla_vC=OrderedSet([D*V_c/(2*C*R*f_s), 0.1*V_c])
2021-07-18 14:48:27,432
						sub-ing in 
						 D⋅V_c  
						────────
						2⋅C⋅R⋅fₛ for 
						\Delta v_C
2021-07-18 14:48:27,432
						and found 
						fₛ
2021-07-18 14:48:27,440
						sub-ing in 
						0.1⋅V_c for 
						\Delta v_C
2021-07-18 14:48:27,440
						and found 
						5.0⋅D
						─────
						 C⋅R 
2021-07-18 14:48:27,442
end of function, recursesym: {L: set(), D: set(), V_c: set(), V_g: set(), M: OrderedSet([V_c/V_g]), \Delta i_L: set(), f_s: set(), C: OrderedSet([D*V_c/(2*R*\Delta v_C*f_s), D*i_L*(D - 1)/(2*\Delta v_C*f_s), D*i_R/(2*\Delta v_C*f_s), 5.0*D*\Delta i_L*(D - 1)/(\Delta v_C*f_s), 5.0*D/(R*f_s)]), R: OrderedSet([V_c/(i_L*(D - 1)), V_c/i_R, D*V_c/(2*C*\Delta v_C*f_s), 0.1*V_c/(\Delta i_L*(D - 1)), 5.0*D/(C*f_s)]), i_L: OrderedSet([V_c/(R*(D - 1)), 10.0*\Delta i_L]), i_R: OrderedSet([V_c/R]), \Delta v_C: OrderedSet([D*V_c/(2*C*R*f_s), 0.1*V_c])}
2021-07-18 14:48:27,443
returning: 
						OrderedSet([D*V_g/(2*L*\Delta i_L), D*V_c/(2*C*R*\Delta v_C), D*i_L*(D - 1)/(2
						*C*\Delta v_C), D*i_R/(2*C*\Delta v_C), 5.0*D*\Delta i_L*(D - 1)/(C*\Delta v_C
						), 5.0*D/(C*R)])
2021-07-18 14:48:27,444
					sub-ing in 
					    D⋅V_g     
					──────────────
					2⋅L⋅\Delta i_L for 
					fₛ
2021-07-18 14:48:27,444
					and found 
					\Delta i_L
2021-07-18 14:48:27,453
					sub-ing in 
					     D⋅V_c      
					────────────────
					2⋅C⋅R⋅\Delta v_C for 
					fₛ
2021-07-18 14:48:27,453
					and found 
					C⋅R⋅V_g⋅\Delta v_C
					──────────────────
					      L⋅V_c       
2021-07-18 14:48:27,466
					sub-ing in 
					D⋅i_L⋅(D - 1) 
					──────────────
					2⋅C⋅\Delta v_C for 
					fₛ
2021-07-18 14:48:27,466
					and found 
					C⋅V_g⋅\Delta v_C
					────────────────
					 L⋅i_L⋅(D - 1)  
2021-07-18 14:48:27,474
					sub-ing in 
					    D⋅i_R     
					──────────────
					2⋅C⋅\Delta v_C for 
					fₛ
2021-07-18 14:48:27,474
					and found 
					C⋅V_g⋅\Delta v_C
					────────────────
					     L⋅i_R      
2021-07-18 14:48:27,492
					sub-ing in 
					5.0⋅D⋅\Delta i_L⋅(D - 1)
					────────────────────────
					      C⋅\Delta v_C       for 
					fₛ
2021-07-18 14:48:27,493
					and found 
					0.1⋅C⋅V_g⋅\Delta v_C
					────────────────────
					L⋅\Delta i_L⋅(D - 1)
2021-07-18 14:48:27,501
					sub-ing in 
					5.0⋅D
					─────
					 C⋅R  for 
					fₛ
2021-07-18 14:48:27,502
					and found 
					0.1⋅C⋅R⋅V_g
					───────────
					     L     
2021-07-18 14:48:27,502
					solution to delta_iL is: 
					0.1⋅i_L 
2021-07-18 14:48:27,502
					recursesym: 
					[L, D, V_c, V_g, M, \Delta i_L, fₛ, C, R, i_L, i_R, \Delta v_C]
2021-07-18 14:48:27,502
					calling solver looking for 
					i_L
2021-07-18 14:48:27,502
												base case
2021-07-18 14:48:27,503
returning: i_L=OrderedSet([V_c/(R*(D - 1)), 10.0*\Delta i_L])
2021-07-18 14:48:27,515
					sub-ing in 
					   V_c   
					─────────
					R⋅(D - 1) for 
					i_L
2021-07-18 14:48:27,516
					and found 
					 0.1⋅V_c 
					─────────
					R⋅(D - 1)
2021-07-18 14:48:27,520
					sub-ing in 
					10.0⋅\Delta i_L for 
					i_L
2021-07-18 14:48:27,520
					and found 
					1.0⋅\Delta i_L
2021-07-18 14:48:27,522
end of function, recursesym: {L: set(), D: set(), V_c: set(), V_g: set(), M: OrderedSet([V_c/V_g]), \Delta i_L: set(), f_s: OrderedSet([D*V_g/(2*L*\Delta i_L), D*V_c/(2*C*R*\Delta v_C), D*i_L*(D - 1)/(2*C*\Delta v_C), D*i_R/(2*C*\Delta v_C), 5.0*D*\Delta i_L*(D - 1)/(C*\Delta v_C), 5.0*D/(C*R)]), C: OrderedSet([D*V_c/(2*R*\Delta v_C*f_s), D*i_L*(D - 1)/(2*\Delta v_C*f_s), D*i_R/(2*\Delta v_C*f_s), 5.0*D*\Delta i_L*(D - 1)/(\Delta v_C*f_s), 5.0*D/(R*f_s)]), R: OrderedSet([V_c/(i_L*(D - 1)), V_c/i_R, D*V_c/(2*C*\Delta v_C*f_s), 0.1*V_c/(\Delta i_L*(D - 1)), 5.0*D/(C*f_s)]), i_L: OrderedSet([V_c/(R*(D - 1)), 10.0*\Delta i_L]), i_R: OrderedSet([V_c/R]), \Delta v_C: OrderedSet([D*V_c/(2*C*R*f_s), 0.1*V_c])}
2021-07-18 14:48:27,523
returning: 
					OrderedSet([D*V_g/(2*L*f_s), 0.1*i_L, C*R*V_g*\Delta v_C/(L*V_c), C*V_g*\Delta
					 v_C/(L*i_L*(D - 1)), C*V_g*\Delta v_C/(L*i_R), 0.1*C*R*V_g/L, 0.1*V_c/(R*(D -
					 1))])
2021-07-18 14:48:27,524
			sub-ing in 
			D⋅V_g 
			──────
			2⋅L⋅fₛ for 
			\Delta i_L
2021-07-18 14:48:27,524
			and found 
			V_g
2021-07-18 14:48:27,533
			sub-ing in 
			0.1⋅i_L for 
			\Delta i_L
2021-07-18 14:48:27,533
			and found 
			0.2⋅L⋅fₛ⋅i_L
			────────────
			     D      
2021-07-18 14:48:27,542
			sub-ing in 
			C⋅R⋅V_g⋅\Delta v_C
			──────────────────
			      L⋅V_c        for 
			\Delta i_L
2021-07-18 14:48:27,542
			and found 
			2⋅C⋅R⋅V_g⋅\Delta v_C⋅fₛ
			───────────────────────
			         D⋅V_c         
2021-07-18 14:48:27,556
			sub-ing in 
			C⋅V_g⋅\Delta v_C
			────────────────
			 L⋅i_L⋅(D - 1)   for 
			\Delta i_L
2021-07-18 14:48:27,556
			and found 
			2⋅C⋅V_g⋅\Delta v_C⋅fₛ
			─────────────────────
			    D⋅i_L⋅(D - 1)    
2021-07-18 14:48:27,565
			sub-ing in 
			C⋅V_g⋅\Delta v_C
			────────────────
			     L⋅i_R       for 
			\Delta i_L
2021-07-18 14:48:27,565
			and found 
			2⋅C⋅V_g⋅\Delta v_C⋅fₛ
			─────────────────────
			        D⋅i_R        
2021-07-18 14:48:27,573
			sub-ing in 
			0.1⋅C⋅R⋅V_g
			───────────
			     L      for 
			\Delta i_L
2021-07-18 14:48:27,574
			and found 
			0.2⋅C⋅R⋅V_g⋅fₛ
			──────────────
			      D       
2021-07-18 14:48:27,591
			sub-ing in 
			 0.1⋅V_c 
			─────────
			R⋅(D - 1) for 
			\Delta i_L
2021-07-18 14:48:27,592
			and found 
			0.2⋅L⋅V_c⋅fₛ
			────────────
			D⋅R⋅(D - 1) 
2021-07-18 14:48:27,592
			recursesym: 
			[L, D, V_c, V_g, M, \Delta i_L, fₛ, C, R, i_L, i_R, \Delta v_C]
2021-07-18 14:48:27,592
			calling solver looking for 
			fₛ
2021-07-18 14:48:27,592
												base case
2021-07-18 14:48:27,593
returning: f_s=OrderedSet([D*V_g/(2*L*\Delta i_L), D*V_c/(2*C*R*\Delta v_C), D*i_L*(D - 1)/(2
*C*\Delta v_C), D*i_R/(2*C*\Delta v_C), 5.0*D*\Delta i_L*(D - 1)/(C*\Delta v_C
), 5.0*D/(C*R)])
2021-07-18 14:48:27,594
			sub-ing in 
			    D⋅V_g     
			──────────────
			2⋅L⋅\Delta i_L for 
			fₛ
2021-07-18 14:48:27,594
			and found 
			V_g
2021-07-18 14:48:27,603
			sub-ing in 
			     D⋅V_c      
			────────────────
			2⋅C⋅R⋅\Delta v_C for 
			fₛ
2021-07-18 14:48:27,603
			and found 
			L⋅V_c⋅\Delta i_L
			────────────────
			 C⋅R⋅\Delta v_C 
2021-07-18 14:48:27,620
			sub-ing in 
			D⋅i_L⋅(D - 1) 
			──────────────
			2⋅C⋅\Delta v_C for 
			fₛ
2021-07-18 14:48:27,620
			and found 
			L⋅\Delta i_L⋅i_L⋅(D - 1)
			────────────────────────
			      C⋅\Delta v_C      
2021-07-18 14:48:27,629
			sub-ing in 
			    D⋅i_R     
			──────────────
			2⋅C⋅\Delta v_C for 
			fₛ
2021-07-18 14:48:27,629
			and found 
			L⋅\Delta i_L⋅i_R
			────────────────
			  C⋅\Delta v_C  
2021-07-18 14:48:27,655
			sub-ing in 
			5.0⋅D⋅\Delta i_L⋅(D - 1)
			────────────────────────
			      C⋅\Delta v_C       for 
			fₛ
2021-07-18 14:48:27,655
			and found 
			                 2        
			10.0⋅L⋅\Delta i_L ⋅(D - 1)
			──────────────────────────
			       C⋅\Delta v_C       
2021-07-18 14:48:27,667
			sub-ing in 
			5.0⋅D
			─────
			 C⋅R  for 
			fₛ
2021-07-18 14:48:27,667
			and found 
			10.0⋅L⋅\Delta i_L
			─────────────────
			       C⋅R       
2021-07-18 14:48:27,672
end of function, recursesym: {L: set(), D: set(), V_c: set(), V_g: set(), M: OrderedSet([V_c/V_g]), \Delta i_L: OrderedSet([D*V_g/(2*L*f_s), 0.1*i_L, C*R*V_g*\Delta v_C/(L*V_c), C*V_g*\Delta v_C/(L*i_L*(D - 1)), C*V_g*\Delta v_C/(L*i_R), 0.1*C*R*V_g/L, 0.1*V_c/(R*(D - 1))]), f_s: OrderedSet([D*V_g/(2*L*\Delta i_L), D*V_c/(2*C*R*\Delta v_C), D*i_L*(D - 1)/(2*C*\Delta v_C), D*i_R/(2*C*\Delta v_C), 5.0*D*\Delta i_L*(D - 1)/(C*\Delta v_C), 5.0*D/(C*R)]), C: OrderedSet([D*V_c/(2*R*\Delta v_C*f_s), D*i_L*(D - 1)/(2*\Delta v_C*f_s), D*i_R/(2*\Delta v_C*f_s), 5.0*D*\Delta i_L*(D - 1)/(\Delta v_C*f_s), 5.0*D/(R*f_s)]), R: OrderedSet([V_c/(i_L*(D - 1)), V_c/i_R, D*V_c/(2*C*\Delta v_C*f_s), 0.1*V_c/(\Delta i_L*(D - 1)), 5.0*D/(C*f_s)]), i_L: OrderedSet([V_c/(R*(D - 1)), 10.0*\Delta i_L]), i_R: OrderedSet([V_c/R]), \Delta v_C: OrderedSet([D*V_c/(2*C*R*f_s), 0.1*V_c])}
2021-07-18 14:48:27,674
returning: 
			OrderedSet([V_c - V_c/D, V_c/M, 2*L*\Delta i_L*f_s/D, 0.2*L*f_s*i_L/D, 0.2*L*V
			_c*f_s/(D*R*(D - 1)), L*V_c*\Delta i_L/(C*R*\Delta v_C), L*\Delta i_L*i_L*(D -
			 1)/(C*\Delta v_C), L*\Delta i_L*i_R/(C*\Delta v_C), 10.0*L*\Delta i_L**2*(D -
			 1)/(C*\Delta v_C), 10.0*L*\Delta i_L/(C*R)])
2021-07-18 14:48:27,683
		sub-ing in 
		      V_c
		V_c - ───
		       D  for 
		V_g
2021-07-18 14:48:27,684
		and found 
		  ⎛      V_c⎞
		D⋅⎜V_c - ───⎟
		  ⎝       D ⎠
		─────────────
		    D - 1    
2021-07-18 14:48:27,696
		sub-ing in 
		V_c
		───
		 M  for 
		V_g
2021-07-18 14:48:27,697
		and found 
		  D⋅V_c  
		─────────
		M⋅(D - 1)
2021-07-18 14:48:27,706
		sub-ing in 
		2⋅L⋅\Delta i_L⋅fₛ
		─────────────────
		        D         for 
		V_g
2021-07-18 14:48:27,706
		and found 
		2⋅L⋅\Delta i_L⋅fₛ
		─────────────────
		      D - 1      
2021-07-18 14:48:27,721
		sub-ing in 
		0.2⋅L⋅fₛ⋅i_L
		────────────
		     D       for 
		V_g
2021-07-18 14:48:27,721
		and found 
		0.2⋅L⋅fₛ⋅i_L
		────────────
		   D - 1    
2021-07-18 14:48:27,760
		sub-ing in 
		0.2⋅L⋅V_c⋅fₛ
		────────────
		D⋅R⋅(D - 1)  for 
		V_g
2021-07-18 14:48:27,762
		and found 
		0.2⋅L⋅V_c⋅fₛ
		────────────
		          2 
		 R⋅(D - 1)  
2021-07-18 14:48:27,784
		sub-ing in 
		L⋅V_c⋅\Delta i_L
		────────────────
		 C⋅R⋅\Delta v_C  for 
		V_g
2021-07-18 14:48:27,785
		and found 
		  D⋅L⋅V_c⋅\Delta i_L  
		──────────────────────
		C⋅R⋅\Delta v_C⋅(D - 1)
2021-07-18 14:48:27,794
		sub-ing in 
		L⋅\Delta i_L⋅i_L⋅(D - 1)
		────────────────────────
		      C⋅\Delta v_C       for 
		V_g
2021-07-18 14:48:27,794
		and found 
		D⋅L⋅\Delta i_L⋅i_L
		──────────────────
		   C⋅\Delta v_C   
2021-07-18 14:48:27,813
		sub-ing in 
		L⋅\Delta i_L⋅i_R
		────────────────
		  C⋅\Delta v_C   for 
		V_g
2021-07-18 14:48:27,813
		and found 
		 D⋅L⋅\Delta i_L⋅i_R 
		────────────────────
		C⋅\Delta v_C⋅(D - 1)
2021-07-18 14:48:27,826
		sub-ing in 
		                 2        
		10.0⋅L⋅\Delta i_L ⋅(D - 1)
		──────────────────────────
		       C⋅\Delta v_C        for 
		V_g
2021-07-18 14:48:27,827
		and found 
		                   2
		10.0⋅D⋅L⋅\Delta i_L 
		────────────────────
		    C⋅\Delta v_C    
2021-07-18 14:48:27,850
		sub-ing in 
		10.0⋅L⋅\Delta i_L
		─────────────────
		       C⋅R        for 
		V_g
2021-07-18 14:48:27,851
		and found 
		10.0⋅D⋅L⋅\Delta i_L
		───────────────────
		    C⋅R⋅(D - 1)    
2021-07-18 14:48:27,851
		solution to V_c is: 
		M⋅V_g 
2021-07-18 14:48:27,851
		recursesym: 
		[L, D, V_c, V_g, M, \Delta i_L, fₛ, C, R, i_L, i_R, \Delta v_C]
2021-07-18 14:48:27,851
		calling solver looking for 
		M
2021-07-18 14:48:27,851
												base case
2021-07-18 14:48:27,852
returning: M=OrderedSet([V_c/V_g])
2021-07-18 14:48:27,852
		sub-ing in 
		V_c
		───
		V_g for 
		M
2021-07-18 14:48:27,852
		and found 
		V_c
2021-07-18 14:48:27,853
		recursesym: 
		[L, D, V_c, V_g, M, \Delta i_L, fₛ, C, R, i_L, i_R, \Delta v_C]
2021-07-18 14:48:27,853
		calling solver looking for 
		V_g
2021-07-18 14:48:27,853
												base case
2021-07-18 14:48:27,855
returning: V_g=OrderedSet([V_c - V_c/D, V_c/M, 2*L*\Delta i_L*f_s/D, 0.2*L*f_s*i_L/D, 0.2*L*V
_c*f_s/(D*R*(D - 1)), L*V_c*\Delta i_L/(C*R*\Delta v_C), L*\Delta i_L*i_L*(D -
 1)/(C*\Delta v_C), L*\Delta i_L*i_R/(C*\Delta v_C), 10.0*L*\Delta i_L**2*(D -
 1)/(C*\Delta v_C), 10.0*L*\Delta i_L/(C*R)])
2021-07-18 14:48:27,868
		sub-ing in 
		      V_c
		V_c - ───
		       D  for 
		V_g
2021-07-18 14:48:27,869
		and found 
		  ⎛      V_c⎞
		M⋅⎜V_c - ───⎟
		  ⎝       D ⎠
2021-07-18 14:48:27,869
		sub-ing in 
		V_c
		───
		 M  for 
		V_g
2021-07-18 14:48:27,869
		and found 
		V_c
2021-07-18 14:48:27,881
		sub-ing in 
		2⋅L⋅\Delta i_L⋅fₛ
		─────────────────
		        D         for 
		V_g
2021-07-18 14:48:27,881
		and found 
		2⋅L⋅M⋅\Delta i_L⋅fₛ
		───────────────────
		         D         
2021-07-18 14:48:27,893
		sub-ing in 
		0.2⋅L⋅fₛ⋅i_L
		────────────
		     D       for 
		V_g
2021-07-18 14:48:27,893
		and found 
		0.2⋅L⋅M⋅fₛ⋅i_L
		──────────────
		      D       
2021-07-18 14:48:27,912
		sub-ing in 
		0.2⋅L⋅V_c⋅fₛ
		────────────
		D⋅R⋅(D - 1)  for 
		V_g
2021-07-18 14:48:27,913
		and found 
		0.2⋅L⋅M⋅V_c⋅fₛ
		──────────────
		 D⋅R⋅(D - 1)  
2021-07-18 14:48:27,922
		sub-ing in 
		L⋅V_c⋅\Delta i_L
		────────────────
		 C⋅R⋅\Delta v_C  for 
		V_g
2021-07-18 14:48:27,922
		and found 
		L⋅M⋅V_c⋅\Delta i_L
		──────────────────
		  C⋅R⋅\Delta v_C  
2021-07-18 14:48:27,937
		sub-ing in 
		L⋅\Delta i_L⋅i_L⋅(D - 1)
		────────────────────────
		      C⋅\Delta v_C       for 
		V_g
2021-07-18 14:48:27,938
		and found 
		L⋅M⋅\Delta i_L⋅i_L⋅(D - 1)
		──────────────────────────
		       C⋅\Delta v_C       
2021-07-18 14:48:27,945
		sub-ing in 
		L⋅\Delta i_L⋅i_R
		────────────────
		  C⋅\Delta v_C   for 
		V_g
2021-07-18 14:48:27,945
		and found 
		L⋅M⋅\Delta i_L⋅i_R
		──────────────────
		   C⋅\Delta v_C   
2021-07-18 14:48:27,965
		sub-ing in 
		                 2        
		10.0⋅L⋅\Delta i_L ⋅(D - 1)
		──────────────────────────
		       C⋅\Delta v_C        for 
		V_g
2021-07-18 14:48:27,966
		and found 
		                   2        
		10.0⋅L⋅M⋅\Delta i_L ⋅(D - 1)
		────────────────────────────
		        C⋅\Delta v_C        
2021-07-18 14:48:27,975
		sub-ing in 
		10.0⋅L⋅\Delta i_L
		─────────────────
		       C⋅R        for 
		V_g
2021-07-18 14:48:27,975
		and found 
		10.0⋅L⋅M⋅\Delta i_L
		───────────────────
		        C⋅R        
2021-07-18 14:48:27,976
		solution to V_c is: 
		R⋅i_L⋅(D - 1) 
2021-07-18 14:48:27,976
		recursesym: 
		[L, D, V_c, V_g, M, \Delta i_L, fₛ, C, R, i_L, i_R, \Delta v_C]
2021-07-18 14:48:27,976
		calling solver looking for 
		D
2021-07-18 14:48:27,976
												base case
2021-07-18 14:48:27,976
returning: D=set()
2021-07-18 14:48:27,977
		recursesym: 
		[L, D, V_c, V_g, M, \Delta i_L, fₛ, C, R, i_L, i_R, \Delta v_C]
2021-07-18 14:48:27,977
		calling solver looking for 
		R
2021-07-18 14:48:27,977
												base case
2021-07-18 14:48:27,978
returning: R=OrderedSet([V_c/(i_L*(D - 1)), V_c/i_R, D*V_c/(2*C*\Delta v_C*f_s), 0.1*V_c/(\
Delta i_L*(D - 1)), 5.0*D/(C*f_s)])
2021-07-18 14:48:27,978
		sub-ing in 
		    V_c    
		───────────
		i_L⋅(D - 1) for 
		R
2021-07-18 14:48:27,978
		and found 
		V_c
2021-07-18 14:48:27,987
		sub-ing in 
		V_c
		───
		i_R for 
		R
2021-07-18 14:48:27,988
		and found 
		V_c⋅i_L⋅(D - 1)
		───────────────
		      i_R      
2021-07-18 14:48:28,006
		sub-ing in 
		      D⋅V_c      
		─────────────────
		2⋅C⋅\Delta v_C⋅fₛ for 
		R
2021-07-18 14:48:28,006
		and found 
		D⋅V_c⋅i_L⋅(D - 1)
		─────────────────
		2⋅C⋅\Delta v_C⋅fₛ
2021-07-18 14:48:28,015
		sub-ing in 
		     0.1⋅V_c      
		──────────────────
		\Delta i_L⋅(D - 1) for 
		R
2021-07-18 14:48:28,015
		and found 
		0.1⋅V_c⋅i_L
		───────────
		 \Delta i_L
2021-07-18 14:48:28,034
		sub-ing in 
		5.0⋅D
		─────
		 C⋅fₛ for 
		R
2021-07-18 14:48:28,035
		and found 
		5.0⋅D⋅i_L⋅(D - 1)
		─────────────────
		       C⋅fₛ      
2021-07-18 14:48:28,035
		recursesym: 
		[L, D, V_c, V_g, M, \Delta i_L, fₛ, C, R, i_L, i_R, \Delta v_C]
2021-07-18 14:48:28,035
		calling solver looking for 
		i_L
2021-07-18 14:48:28,035
												base case
2021-07-18 14:48:28,036
returning: i_L=OrderedSet([V_c/(R*(D - 1)), 10.0*\Delta i_L])
2021-07-18 14:48:28,036
		sub-ing in 
		   V_c   
		─────────
		R⋅(D - 1) for 
		i_L
2021-07-18 14:48:28,037
		and found 
		V_c
2021-07-18 14:48:28,048
		sub-ing in 
		10.0⋅\Delta i_L for 
		i_L
2021-07-18 14:48:28,048
		and found 
		10.0⋅R⋅\Delta i_L⋅(D - 1)
2021-07-18 14:48:28,048
		solution to V_c is: 
		R⋅i_R 
2021-07-18 14:48:28,049
		recursesym: 
		[L, D, V_c, V_g, M, \Delta i_L, fₛ, C, R, i_L, i_R, \Delta v_C]
2021-07-18 14:48:28,049
		calling solver looking for 
		R
2021-07-18 14:48:28,049
												base case
2021-07-18 14:48:28,049
returning: R=OrderedSet([V_c/(i_L*(D - 1)), V_c/i_R, D*V_c/(2*C*\Delta v_C*f_s), 0.1*V_c/(\
Delta i_L*(D - 1)), 5.0*D/(C*f_s)])
2021-07-18 14:48:28,058
		sub-ing in 
		    V_c    
		───────────
		i_L⋅(D - 1) for 
		R
2021-07-18 14:48:28,059
		and found 
		  V_c⋅i_R  
		───────────
		i_L⋅(D - 1)
2021-07-18 14:48:28,059
		sub-ing in 
		V_c
		───
		i_R for 
		R
2021-07-18 14:48:28,059
		and found 
		V_c
2021-07-18 14:48:28,069
		sub-ing in 
		      D⋅V_c      
		─────────────────
		2⋅C⋅\Delta v_C⋅fₛ for 
		R
2021-07-18 14:48:28,069
		and found 
		    D⋅V_c⋅i_R    
		─────────────────
		2⋅C⋅\Delta v_C⋅fₛ
2021-07-18 14:48:28,083
		sub-ing in 
		     0.1⋅V_c      
		──────────────────
		\Delta i_L⋅(D - 1) for 
		R
2021-07-18 14:48:28,084
		and found 
		   0.1⋅V_c⋅i_R    
		──────────────────
		\Delta i_L⋅(D - 1)
2021-07-18 14:48:28,093
		sub-ing in 
		5.0⋅D
		─────
		 C⋅fₛ for 
		R
2021-07-18 14:48:28,093
		and found 
		5.0⋅D⋅i_R
		─────────
		   C⋅fₛ  
2021-07-18 14:48:28,093
		recursesym: 
		[L, D, V_c, V_g, M, \Delta i_L, fₛ, C, R, i_L, i_R, \Delta v_C]
2021-07-18 14:48:28,093
		calling solver looking for 
		i_R
2021-07-18 14:48:28,093
												base case
2021-07-18 14:48:28,094
returning: i_R=OrderedSet([V_c/R])
2021-07-18 14:48:28,094
		sub-ing in 
		V_c
		───
		 R  for 
		i_R
2021-07-18 14:48:28,094
		and found 
		V_c
2021-07-18 14:48:28,094
		solution to V_c is: 
		2⋅C⋅R⋅\Delta v_C⋅fₛ
		───────────────────
		         D          
2021-07-18 14:48:28,095
		recursesym: 
		[L, D, V_c, V_g, M, \Delta i_L, fₛ, C, R, i_L, i_R, \Delta v_C]
2021-07-18 14:48:28,095
		calling solver looking for 
		C
2021-07-18 14:48:28,095
												base case
2021-07-18 14:48:28,095
returning: C=OrderedSet([D*V_c/(2*R*\Delta v_C*f_s), D*i_L*(D - 1)/(2*\Delta v_C*f_s), D*i_
R/(2*\Delta v_C*f_s), 5.0*D*\Delta i_L*(D - 1)/(\Delta v_C*f_s), 5.0*D/(R*f_s)
])
2021-07-18 14:48:28,096
		sub-ing in 
		      D⋅V_c      
		─────────────────
		2⋅R⋅\Delta v_C⋅fₛ for 
		C
2021-07-18 14:48:28,096
		and found 
		V_c
2021-07-18 14:48:28,104
		sub-ing in 
		 D⋅i_L⋅(D - 1) 
		───────────────
		2⋅\Delta v_C⋅fₛ for 
		C
2021-07-18 14:48:28,104
		and found 
		R⋅i_L⋅(D - 1)
2021-07-18 14:48:28,107
		sub-ing in 
		     D⋅i_R     
		───────────────
		2⋅\Delta v_C⋅fₛ for 
		C
2021-07-18 14:48:28,108
		and found 
		R⋅i_R
2021-07-18 14:48:28,116
		sub-ing in 
		5.0⋅D⋅\Delta i_L⋅(D - 1)
		────────────────────────
		     \Delta v_C⋅fₛ       for 
		C
2021-07-18 14:48:28,117
		and found 
		10.0⋅R⋅\Delta i_L⋅(D - 1)
2021-07-18 14:48:28,121
		sub-ing in 
		5.0⋅D
		─────
		 R⋅fₛ for 
		C
2021-07-18 14:48:28,121
		and found 
		10.0⋅\Delta v_C
2021-07-18 14:48:28,122
		recursesym: 
		[L, D, V_c, V_g, M, \Delta i_L, fₛ, C, R, i_L, i_R, \Delta v_C]
2021-07-18 14:48:28,122
		calling solver looking for 
		D
2021-07-18 14:48:28,122
												base case
2021-07-18 14:48:28,122
returning: D=set()
2021-07-18 14:48:28,123
		recursesym: 
		[L, D, V_c, V_g, M, \Delta i_L, fₛ, C, R, i_L, i_R, \Delta v_C]
2021-07-18 14:48:28,123
		calling solver looking for 
		R
2021-07-18 14:48:28,123
												base case
2021-07-18 14:48:28,124
returning: R=OrderedSet([V_c/(i_L*(D - 1)), V_c/i_R, D*V_c/(2*C*\Delta v_C*f_s), 0.1*V_c/(\
Delta i_L*(D - 1)), 5.0*D/(C*f_s)])
2021-07-18 14:48:28,141
		sub-ing in 
		    V_c    
		───────────
		i_L⋅(D - 1) for 
		R
2021-07-18 14:48:28,142
		and found 
		2⋅C⋅V_c⋅\Delta v_C⋅fₛ
		─────────────────────
		    D⋅i_L⋅(D - 1)    
2021-07-18 14:48:28,151
		sub-ing in 
		V_c
		───
		i_R for 
		R
2021-07-18 14:48:28,152
		and found 
		2⋅C⋅V_c⋅\Delta v_C⋅fₛ
		─────────────────────
		        D⋅i_R        
2021-07-18 14:48:28,152
		sub-ing in 
		      D⋅V_c      
		─────────────────
		2⋅C⋅\Delta v_C⋅fₛ for 
		R
2021-07-18 14:48:28,152
		and found 
		V_c
2021-07-18 14:48:28,179
		sub-ing in 
		     0.1⋅V_c      
		──────────────────
		\Delta i_L⋅(D - 1) for 
		R
2021-07-18 14:48:28,180
		and found 
		0.2⋅C⋅V_c⋅\Delta v_C⋅fₛ
		───────────────────────
		  D⋅\Delta i_L⋅(D - 1) 
2021-07-18 14:48:28,184
		sub-ing in 
		5.0⋅D
		─────
		 C⋅fₛ for 
		R
2021-07-18 14:48:28,185
		and found 
		10.0⋅\Delta v_C
2021-07-18 14:48:28,185
		recursesym: 
		[L, D, V_c, V_g, M, \Delta i_L, fₛ, C, R, i_L, i_R, \Delta v_C]
2021-07-18 14:48:28,185
		calling solver looking for 
		\Delta v_C
2021-07-18 14:48:28,185
												base case
2021-07-18 14:48:28,186
returning: detla_vC=OrderedSet([D*V_c/(2*C*R*f_s), 0.1*V_c])
2021-07-18 14:48:28,186
		sub-ing in 
		 D⋅V_c  
		────────
		2⋅C⋅R⋅fₛ for 
		\Delta v_C
2021-07-18 14:48:28,186
		and found 
		V_c
2021-07-18 14:48:28,200
		sub-ing in 
		0.1⋅V_c for 
		\Delta v_C
2021-07-18 14:48:28,201
		and found 
		0.2⋅C⋅R⋅V_c⋅fₛ
		──────────────
		      D       
2021-07-18 14:48:28,201
		recursesym: 
		[L, D, V_c, V_g, M, \Delta i_L, fₛ, C, R, i_L, i_R, \Delta v_C]
2021-07-18 14:48:28,201
		calling solver looking for 
		fₛ
2021-07-18 14:48:28,201
												base case
2021-07-18 14:48:28,202
returning: f_s=OrderedSet([D*V_g/(2*L*\Delta i_L), D*V_c/(2*C*R*\Delta v_C), D*i_L*(D - 1)/(2
*C*\Delta v_C), D*i_R/(2*C*\Delta v_C), 5.0*D*\Delta i_L*(D - 1)/(C*\Delta v_C
), 5.0*D/(C*R)])
2021-07-18 14:48:28,217
		sub-ing in 
		    D⋅V_g     
		──────────────
		2⋅L⋅\Delta i_L for 
		fₛ
2021-07-18 14:48:28,217
		and found 
		C⋅R⋅V_g⋅\Delta v_C
		──────────────────
		   L⋅\Delta i_L   
2021-07-18 14:48:28,218
		sub-ing in 
		     D⋅V_c      
		────────────────
		2⋅C⋅R⋅\Delta v_C for 
		fₛ
2021-07-18 14:48:28,218
		and found 
		V_c
2021-07-18 14:48:28,226
		sub-ing in 
		D⋅i_L⋅(D - 1) 
		──────────────
		2⋅C⋅\Delta v_C for 
		fₛ
2021-07-18 14:48:28,226
		and found 
		R⋅i_L⋅(D - 1)
2021-07-18 14:48:28,230
		sub-ing in 
		    D⋅i_R     
		──────────────
		2⋅C⋅\Delta v_C for 
		fₛ
2021-07-18 14:48:28,231
		and found 
		R⋅i_R
2021-07-18 14:48:28,239
		sub-ing in 
		5.0⋅D⋅\Delta i_L⋅(D - 1)
		────────────────────────
		      C⋅\Delta v_C       for 
		fₛ
2021-07-18 14:48:28,240
		and found 
		10.0⋅R⋅\Delta i_L⋅(D - 1)
2021-07-18 14:48:28,246
		sub-ing in 
		5.0⋅D
		─────
		 C⋅R  for 
		fₛ
2021-07-18 14:48:28,246
		and found 
		10.0⋅\Delta v_C
2021-07-18 14:48:28,247
		solution to V_c is: 
		10.0⋅\Delta v_C 
2021-07-18 14:48:28,247
		recursesym: 
		[L, D, V_c, V_g, M, \Delta i_L, fₛ, C, R, i_L, i_R, \Delta v_C]
2021-07-18 14:48:28,247
		calling solver looking for 
		\Delta v_C
2021-07-18 14:48:28,247
												base case
2021-07-18 14:48:28,248
returning: detla_vC=OrderedSet([D*V_c/(2*C*R*f_s), 0.1*V_c])
2021-07-18 14:48:28,264
		sub-ing in 
		 D⋅V_c  
		────────
		2⋅C⋅R⋅fₛ for 
		\Delta v_C
2021-07-18 14:48:28,264
		and found 
		5.0⋅D⋅V_c
		─────────
		  C⋅R⋅fₛ 
2021-07-18 14:48:28,270
		sub-ing in 
		0.1⋅V_c for 
		\Delta v_C
2021-07-18 14:48:28,270
		and found 
		1.0⋅V_c
2021-07-18 14:48:28,280
end of function, recursesym: {L: set(), D: set(), V_c: set(), V_g: OrderedSet([V_c - V_c/D, V_c/M, 2*L*\Delta i_L*f_s/D, 0.2*L*f_s*i_L/D, 0.2*L*V_c*f_s/(D*R*(D - 1)), L*V_c*\Delta i_L/(C*R*\Delta v_C), L*\Delta i_L*i_L*(D - 1)/(C*\Delta v_C), L*\Delta i_L*i_R/(C*\Delta v_C), 10.0*L*\Delta i_L**2*(D - 1)/(C*\Delta v_C), 10.0*L*\Delta i_L/(C*R)]), M: OrderedSet([V_c/V_g]), \Delta i_L: OrderedSet([D*V_g/(2*L*f_s), 0.1*i_L, C*R*V_g*\Delta v_C/(L*V_c), C*V_g*\Delta v_C/(L*i_L*(D - 1)), C*V_g*\Delta v_C/(L*i_R), 0.1*C*R*V_g/L, 0.1*V_c/(R*(D - 1))]), f_s: OrderedSet([D*V_g/(2*L*\Delta i_L), D*V_c/(2*C*R*\Delta v_C), D*i_L*(D - 1)/(2*C*\Delta v_C), D*i_R/(2*C*\Delta v_C), 5.0*D*\Delta i_L*(D - 1)/(C*\Delta v_C), 5.0*D/(C*R)]), C: OrderedSet([D*V_c/(2*R*\Delta v_C*f_s), D*i_L*(D - 1)/(2*\Delta v_C*f_s), D*i_R/(2*\Delta v_C*f_s), 5.0*D*\Delta i_L*(D - 1)/(\Delta v_C*f_s), 5.0*D/(R*f_s)]), R: OrderedSet([V_c/(i_L*(D - 1)), V_c/i_R, D*V_c/(2*C*\Delta v_C*f_s), 0.1*V_c/(\Delta i_L*(D - 1)), 5.0*D/(C*f_s)]), i_L: OrderedSet([V_c/(R*(D - 1)), 10.0*\Delta i_L]), i_R: OrderedSet([V_c/R]), \Delta v_C: OrderedSet([D*V_c/(2*C*R*f_s), 0.1*V_c])}
2021-07-18 14:48:28,284
returning: 
		OrderedSet([D*V_g/(D - 1), M*V_g, R*i_L*(D - 1), R*i_R, 2*C*R*\Delta v_C*f_s/D
		, 10.0*\Delta v_C, 2*L*\Delta i_L*f_s/(D - 1), 0.2*L*f_s*i_L/(D - 1), D*L*\Del
		ta i_L*i_L/(C*\Delta v_C), D*L*\Delta i_L*i_R/(C*\Delta v_C*(D - 1)), 10.0*D*L
		*\Delta i_L**2/(C*\Delta v_C), 10.0*D*L*\Delta i_L/(C*R*(D - 1)), L*M*\Delta i
		_L*i_R/(C*\Delta v_C), 10.0*L*M*\Delta i_L/(C*R), 5.0*D*i_L*(D - 1)/(C*f_s), 1
		0.0*R*\Delta i_L*(D - 1), 5.0*D*i_R/(C*f_s), C*R*V_g*\Delta v_C/(L*\Delta i_L)
		])
2021-07-18 14:48:28,297
	sub-ing in 
	D⋅V_g
	─────
	D - 1 for 
	V_c
2021-07-18 14:48:28,298
	and found 
	        D⋅V_g        
	─────────────────────
	        ⎛D⋅V_g      ⎞
	(D - 1)⋅⎜───── - V_g⎟
	        ⎝D - 1      ⎠
2021-07-18 14:48:28,309
	sub-ing in 
	M⋅V_g for 
	V_c
2021-07-18 14:48:28,309
	and found 
	   M⋅V_g   
	───────────
	M⋅V_g - V_g
2021-07-18 14:48:28,336
	sub-ing in 
	R⋅i_L⋅(D - 1) for 
	V_c
2021-07-18 14:48:28,337
	and found 
	   R⋅i_L⋅(D - 1)   
	───────────────────
	R⋅i_L⋅(D - 1) - V_g
2021-07-18 14:48:28,348
	sub-ing in 
	R⋅i_R for 
	V_c
2021-07-18 14:48:28,349
	and found 
	   R⋅i_R   
	───────────
	R⋅i_R - V_g
2021-07-18 14:48:28,377
	sub-ing in 
	2⋅C⋅R⋅\Delta v_C⋅fₛ
	───────────────────
	         D          for 
	V_c
2021-07-18 14:48:28,378
	and found 
	     2⋅C⋅R⋅\Delta v_C⋅fₛ     
	─────────────────────────────
	  ⎛2⋅C⋅R⋅\Delta v_C⋅fₛ      ⎞
	D⋅⎜─────────────────── - V_g⎟
	  ⎝         D               ⎠
2021-07-18 14:48:28,403
	sub-ing in 
	10.0⋅\Delta v_C for 
	V_c
2021-07-18 14:48:28,403
	and found 
	   10.0⋅\Delta v_C    
	──────────────────────
	-V_g + 10.0⋅\Delta v_C
2021-07-18 14:48:28,428
	sub-ing in 
	2⋅L⋅\Delta i_L⋅fₛ
	─────────────────
	      D - 1       for 
	V_c
2021-07-18 14:48:28,429
	and found 
	        2⋅L⋅\Delta i_L⋅fₛ        
	─────────────────────────────────
	        ⎛2⋅L⋅\Delta i_L⋅fₛ      ⎞
	(D - 1)⋅⎜───────────────── - V_g⎟
	        ⎝      D - 1            ⎠
2021-07-18 14:48:28,456
	sub-ing in 
	0.2⋅L⋅fₛ⋅i_L
	────────────
	   D - 1     for 
	V_c
2021-07-18 14:48:28,457
	and found 
	        0.2⋅L⋅fₛ⋅i_L        
	────────────────────────────
	        ⎛0.2⋅L⋅fₛ⋅i_L      ⎞
	(D - 1)⋅⎜──────────── - V_g⎟
	        ⎝   D - 1          ⎠
2021-07-18 14:48:28,481
	sub-ing in 
	D⋅L⋅\Delta i_L⋅i_L
	──────────────────
	   C⋅\Delta v_C    for 
	V_c
2021-07-18 14:48:28,482
	and found 
	           D⋅L⋅\Delta i_L⋅i_L           
	────────────────────────────────────────
	             ⎛       D⋅L⋅\Delta i_L⋅i_L⎞
	C⋅\Delta v_C⋅⎜-V_g + ──────────────────⎟
	             ⎝          C⋅\Delta v_C   ⎠
2021-07-18 14:48:28,513
	sub-ing in 
	 D⋅L⋅\Delta i_L⋅i_R 
	────────────────────
	C⋅\Delta v_C⋅(D - 1) for 
	V_c
2021-07-18 14:48:28,514
	and found 
	                D⋅L⋅\Delta i_L⋅i_R                
	──────────────────────────────────────────────────
	                     ⎛        D⋅L⋅\Delta i_L⋅i_R ⎞
	C⋅\Delta v_C⋅(D - 1)⋅⎜-V_g + ────────────────────⎟
	                     ⎝       C⋅\Delta v_C⋅(D - 1)⎠
2021-07-18 14:48:28,548
	sub-ing in 
	                   2
	10.0⋅D⋅L⋅\Delta i_L 
	────────────────────
	    C⋅\Delta v_C     for 
	V_c
2021-07-18 14:48:28,549
	and found 
	                              2           
	           10.0⋅D⋅L⋅\Delta i_L            
	──────────────────────────────────────────
	             ⎛                          2⎞
	             ⎜       10.0⋅D⋅L⋅\Delta i_L ⎟
	C⋅\Delta v_C⋅⎜-V_g + ────────────────────⎟
	             ⎝           C⋅\Delta v_C    ⎠
2021-07-18 14:48:28,589
	sub-ing in 
	10.0⋅D⋅L⋅\Delta i_L
	───────────────────
	    C⋅R⋅(D - 1)     for 
	V_c
2021-07-18 14:48:28,591
	and found 
	          10.0⋅D⋅L⋅\Delta i_L           
	────────────────────────────────────────
	            ⎛       10.0⋅D⋅L⋅\Delta i_L⎞
	C⋅R⋅(D - 1)⋅⎜-V_g + ───────────────────⎟
	            ⎝           C⋅R⋅(D - 1)    ⎠
2021-07-18 14:48:28,619
	sub-ing in 
	L⋅M⋅\Delta i_L⋅i_R
	──────────────────
	   C⋅\Delta v_C    for 
	V_c
2021-07-18 14:48:28,620
	and found 
	           L⋅M⋅\Delta i_L⋅i_R           
	────────────────────────────────────────
	             ⎛       L⋅M⋅\Delta i_L⋅i_R⎞
	C⋅\Delta v_C⋅⎜-V_g + ──────────────────⎟
	             ⎝          C⋅\Delta v_C   ⎠
2021-07-18 14:48:28,659
	sub-ing in 
	10.0⋅L⋅M⋅\Delta i_L
	───────────────────
	        C⋅R         for 
	V_c
2021-07-18 14:48:28,661
	and found 
	      10.0⋅L⋅M⋅\Delta i_L       
	────────────────────────────────
	    ⎛       10.0⋅L⋅M⋅\Delta i_L⎞
	C⋅R⋅⎜-V_g + ───────────────────⎟
	    ⎝               C⋅R        ⎠
2021-07-18 14:48:28,750
	sub-ing in 
	5.0⋅D⋅i_L⋅(D - 1)
	─────────────────
	       C⋅fₛ       for 
	V_c
2021-07-18 14:48:28,752
	and found 
	       5.0⋅D⋅i_L⋅(D - 1)       
	───────────────────────────────
	     ⎛       5.0⋅D⋅i_L⋅(D - 1)⎞
	C⋅fₛ⋅⎜-V_g + ─────────────────⎟
	     ⎝              C⋅fₛ      ⎠
2021-07-18 14:48:28,814
	sub-ing in 
	10.0⋅R⋅\Delta i_L⋅(D - 1) for 
	V_c
2021-07-18 14:48:28,815
	and found 
	   10.0⋅R⋅\Delta i_L⋅(D - 1)   
	───────────────────────────────
	10.0⋅R⋅\Delta i_L⋅(D - 1) - V_g
2021-07-18 14:48:28,851
	sub-ing in 
	5.0⋅D⋅i_R
	─────────
	   C⋅fₛ   for 
	V_c
2021-07-18 14:48:28,852
	and found 
	       5.0⋅D⋅i_R       
	───────────────────────
	     ⎛       5.0⋅D⋅i_R⎞
	C⋅fₛ⋅⎜-V_g + ─────────⎟
	     ⎝          C⋅fₛ  ⎠
2021-07-18 14:48:28,874
	sub-ing in 
	C⋅R⋅V_g⋅\Delta v_C
	──────────────────
	   L⋅\Delta i_L    for 
	V_c
2021-07-18 14:48:28,875
	and found 
	           C⋅R⋅V_g⋅\Delta v_C          
	───────────────────────────────────────
	             ⎛C⋅R⋅V_g⋅\Delta v_C      ⎞
	L⋅\Delta i_L⋅⎜────────────────── - V_g⎟
	             ⎝   L⋅\Delta i_L         ⎠
2021-07-18 14:48:28,875
	recursesym: 
	[L, D, V_c, V_g, M, \Delta i_L, fₛ, C, R, i_L, i_R, \Delta v_C]
2021-07-18 14:48:28,875
	calling solver looking for 
	V_g
2021-07-18 14:48:28,875
												base case
2021-07-18 14:48:28,877
returning: V_g=OrderedSet([V_c - V_c/D, V_c/M, 2*L*\Delta i_L*f_s/D, 0.2*L*f_s*i_L/D, 0.2*L*V
_c*f_s/(D*R*(D - 1)), L*V_c*\Delta i_L/(C*R*\Delta v_C), L*\Delta i_L*i_L*(D -
 1)/(C*\Delta v_C), L*\Delta i_L*i_R/(C*\Delta v_C), 10.0*L*\Delta i_L**2*(D -
 1)/(C*\Delta v_C), 10.0*L*\Delta i_L/(C*R)])
2021-07-18 14:48:28,877
	sub-ing in 
	      V_c
	V_c - ───
	       D  for 
	V_g
2021-07-18 14:48:28,877
	and found 
	D
2021-07-18 14:48:28,886
	sub-ing in 
	V_c
	───
	 M  for 
	V_g
2021-07-18 14:48:28,886
	and found 
	   V_c   
	─────────
	      V_c
	V_c - ───
	       M 
2021-07-18 14:48:28,902
	sub-ing in 
	2⋅L⋅\Delta i_L⋅fₛ
	─────────────────
	        D         for 
	V_g
2021-07-18 14:48:28,903
	and found 
	          V_c          
	───────────────────────
	      2⋅L⋅\Delta i_L⋅fₛ
	V_c - ─────────────────
	              D        
2021-07-18 14:48:28,924
	sub-ing in 
	0.2⋅L⋅fₛ⋅i_L
	────────────
	     D       for 
	V_g
2021-07-18 14:48:28,925
	and found 
	       V_c        
	──────────────────
	      0.2⋅L⋅fₛ⋅i_L
	V_c - ────────────
	           D      
2021-07-18 14:48:28,975
	sub-ing in 
	0.2⋅L⋅V_c⋅fₛ
	────────────
	D⋅R⋅(D - 1)  for 
	V_g
2021-07-18 14:48:28,976
	and found 
	       V_c        
	──────────────────
	      0.2⋅L⋅V_c⋅fₛ
	V_c - ────────────
	      D⋅R⋅(D - 1) 
2021-07-18 14:48:28,993
	sub-ing in 
	L⋅V_c⋅\Delta i_L
	────────────────
	 C⋅R⋅\Delta v_C  for 
	V_g
2021-07-18 14:48:28,994
	and found 
	         V_c          
	──────────────────────
	      L⋅V_c⋅\Delta i_L
	V_c - ────────────────
	       C⋅R⋅\Delta v_C 
2021-07-18 14:48:29,019
	sub-ing in 
	L⋅\Delta i_L⋅i_L⋅(D - 1)
	────────────────────────
	      C⋅\Delta v_C       for 
	V_g
2021-07-18 14:48:29,020
	and found 
	             V_c              
	──────────────────────────────
	      L⋅\Delta i_L⋅i_L⋅(D - 1)
	V_c - ────────────────────────
	            C⋅\Delta v_C      
2021-07-18 14:48:29,038
	sub-ing in 
	L⋅\Delta i_L⋅i_R
	────────────────
	  C⋅\Delta v_C   for 
	V_g
2021-07-18 14:48:29,039
	and found 
	         V_c          
	──────────────────────
	      L⋅\Delta i_L⋅i_R
	V_c - ────────────────
	        C⋅\Delta v_C  
2021-07-18 14:48:29,070
	sub-ing in 
	                 2        
	10.0⋅L⋅\Delta i_L ⋅(D - 1)
	──────────────────────────
	       C⋅\Delta v_C        for 
	V_g
2021-07-18 14:48:29,071
	and found 
	              V_c               
	────────────────────────────────
	                       2        
	      10.0⋅L⋅\Delta i_L ⋅(D - 1)
	V_c - ──────────────────────────
	             C⋅\Delta v_C       
2021-07-18 14:48:29,094
	sub-ing in 
	10.0⋅L⋅\Delta i_L
	─────────────────
	       C⋅R        for 
	V_g
2021-07-18 14:48:29,095
	and found 
	          V_c          
	───────────────────────
	      10.0⋅L⋅\Delta i_L
	V_c - ─────────────────
	             C⋅R       
2021-07-18 14:48:29,095
	solution to D is: 
	     V_c 
	1 + ─────
	    R⋅i_L 
2021-07-18 14:48:29,096
	recursesym: 
	[L, D, V_c, V_g, M, \Delta i_L, fₛ, C, R, i_L, i_R, \Delta v_C]
2021-07-18 14:48:29,096
	calling solver looking for 
	R
2021-07-18 14:48:29,096
												base case
2021-07-18 14:48:29,096
returning: R=OrderedSet([V_c/(i_L*(D - 1)), V_c/i_R, D*V_c/(2*C*\Delta v_C*f_s), 0.1*V_c/(\
Delta i_L*(D - 1)), 5.0*D/(C*f_s)])
2021-07-18 14:48:29,097
	sub-ing in 
	    V_c    
	───────────
	i_L⋅(D - 1) for 
	R
2021-07-18 14:48:29,097
	and found 
	D
2021-07-18 14:48:29,104
	sub-ing in 
	V_c
	───
	i_R for 
	R
2021-07-18 14:48:29,104
	and found 
	    i_R
	1 + ───
	    i_L
2021-07-18 14:48:29,119
	sub-ing in 
	      D⋅V_c      
	─────────────────
	2⋅C⋅\Delta v_C⋅fₛ for 
	R
2021-07-18 14:48:29,120
	and found 
	2⋅C⋅\Delta v_C⋅fₛ    
	───────────────── + 1
	      D⋅i_L          
2021-07-18 14:48:29,143
	sub-ing in 
	     0.1⋅V_c      
	──────────────────
	\Delta i_L⋅(D - 1) for 
	R
2021-07-18 14:48:29,144
	and found 
	10.0⋅\Delta i_L⋅(D - 1)    
	─────────────────────── + 1
	          i_L              
2021-07-18 14:48:29,164
	sub-ing in 
	5.0⋅D
	─────
	 C⋅fₛ for 
	R
2021-07-18 14:48:29,165
	and found 
	0.2⋅C⋅V_c⋅fₛ    
	──────────── + 1
	   D⋅i_L        
2021-07-18 14:48:29,165
	recursesym: 
	[L, D, V_c, V_g, M, \Delta i_L, fₛ, C, R, i_L, i_R, \Delta v_C]
2021-07-18 14:48:29,165
	calling solver looking for 
	V_c
2021-07-18 14:48:29,165
												base case
2021-07-18 14:48:29,168
returning: V_c=OrderedSet([D*V_g/(D - 1), M*V_g, R*i_L*(D - 1), R*i_R, 2*C*R*\Delta v_C*f_s/D
, 10.0*\Delta v_C, 2*L*\Delta i_L*f_s/(D - 1), 0.2*L*f_s*i_L/(D - 1), D*L*\Del
ta i_L*i_L/(C*\Delta v_C), D*L*\Delta i_L*i_R/(C*\Delta v_C*(D - 1)), 10.0*D*L
*\Delta i_L**2/(C*\Delta v_C), 10.0*D*L*\Delta i_L/(C*R*(D - 1)), L*M*\Delta i
_L*i_R/(C*\Delta v_C), 10.0*L*M*\Delta i_L/(C*R), 5.0*D*i_L*(D - 1)/(C*f_s), 1
0.0*R*\Delta i_L*(D - 1), 5.0*D*i_R/(C*f_s), C*R*V_g*\Delta v_C/(L*\Delta i_L)
])
2021-07-18 14:48:29,191
	sub-ing in 
	D⋅V_g
	─────
	D - 1 for 
	V_c
2021-07-18 14:48:29,192
	and found 
	    D⋅V_g        
	───────────── + 1
	R⋅i_L⋅(D - 1)    
2021-07-18 14:48:29,203
	sub-ing in 
	M⋅V_g for 
	V_c
2021-07-18 14:48:29,203
	and found 
	M⋅V_g    
	───── + 1
	R⋅i_L    
2021-07-18 14:48:29,204
	sub-ing in 
	R⋅i_L⋅(D - 1) for 
	V_c
2021-07-18 14:48:29,204
	and found 
	D
2021-07-18 14:48:29,209
	sub-ing in 
	R⋅i_R for 
	V_c
2021-07-18 14:48:29,209
	and found 
	    i_R
	1 + ───
	    i_L
2021-07-18 14:48:29,218
	sub-ing in 
	2⋅C⋅R⋅\Delta v_C⋅fₛ
	───────────────────
	         D          for 
	V_c
2021-07-18 14:48:29,218
	and found 
	2⋅C⋅\Delta v_C⋅fₛ    
	───────────────── + 1
	      D⋅i_L          
2021-07-18 14:48:29,237
	sub-ing in 
	10.0⋅\Delta v_C for 
	V_c
2021-07-18 14:48:29,238
	and found 
	    10.0⋅\Delta v_C
	1 + ───────────────
	         R⋅i_L     
2021-07-18 14:48:29,267
	sub-ing in 
	2⋅L⋅\Delta i_L⋅fₛ
	─────────────────
	      D - 1       for 
	V_c
2021-07-18 14:48:29,268
	and found 
	2⋅L⋅\Delta i_L⋅fₛ    
	───────────────── + 1
	  R⋅i_L⋅(D - 1)      
2021-07-18 14:48:29,307
	sub-ing in 
	0.2⋅L⋅fₛ⋅i_L
	────────────
	   D - 1     for 
	V_c
2021-07-18 14:48:29,307
	and found 
	 0.2⋅L⋅fₛ    
	───────── + 1
	R⋅(D - 1)    
2021-07-18 14:48:29,324
	sub-ing in 
	D⋅L⋅\Delta i_L⋅i_L
	──────────────────
	   C⋅\Delta v_C    for 
	V_c
2021-07-18 14:48:29,324
	and found 
	    D⋅L⋅\Delta i_L
	1 + ──────────────
	    C⋅R⋅\Delta v_C
2021-07-18 14:48:29,366
	sub-ing in 
	 D⋅L⋅\Delta i_L⋅i_R 
	────────────────────
	C⋅\Delta v_C⋅(D - 1) for 
	V_c
2021-07-18 14:48:29,367
	and found 
	        D⋅L⋅\Delta i_L⋅i_R    
	1 + ──────────────────────────
	    C⋅R⋅\Delta v_C⋅i_L⋅(D - 1)
2021-07-18 14:48:29,395
	sub-ing in 
	                   2
	10.0⋅D⋅L⋅\Delta i_L 
	────────────────────
	    C⋅\Delta v_C     for 
	V_c
2021-07-18 14:48:29,396
	and found 
	                       2
	    10.0⋅D⋅L⋅\Delta i_L 
	1 + ────────────────────
	     C⋅R⋅\Delta v_C⋅i_L 
2021-07-18 14:48:29,461
	sub-ing in 
	10.0⋅D⋅L⋅\Delta i_L
	───────────────────
	    C⋅R⋅(D - 1)     for 
	V_c
2021-07-18 14:48:29,461
	and found 
	    10.0⋅D⋅L⋅\Delta i_L
	1 + ───────────────────
	         2             
	      C⋅R ⋅i_L⋅(D - 1) 
2021-07-18 14:48:29,479
	sub-ing in 
	L⋅M⋅\Delta i_L⋅i_R
	──────────────────
	   C⋅\Delta v_C    for 
	V_c
2021-07-18 14:48:29,479
	and found 
	    L⋅M⋅\Delta i_L⋅i_R
	1 + ──────────────────
	    C⋅R⋅\Delta v_C⋅i_L
2021-07-18 14:48:29,504
	sub-ing in 
	10.0⋅L⋅M⋅\Delta i_L
	───────────────────
	        C⋅R         for 
	V_c
2021-07-18 14:48:29,505
	and found 
	    10.0⋅L⋅M⋅\Delta i_L
	1 + ───────────────────
	             2         
	          C⋅R ⋅i_L     
2021-07-18 14:48:29,535
	sub-ing in 
	5.0⋅D⋅i_L⋅(D - 1)
	─────────────────
	       C⋅fₛ       for 
	V_c
2021-07-18 14:48:29,535
	and found 
	    5.0⋅D⋅(D - 1)
	1 + ─────────────
	        C⋅R⋅fₛ   
2021-07-18 14:48:29,555
	sub-ing in 
	10.0⋅R⋅\Delta i_L⋅(D - 1) for 
	V_c
2021-07-18 14:48:29,555
	and found 
	10.0⋅\Delta i_L⋅(D - 1)    
	─────────────────────── + 1
	          i_L              
2021-07-18 14:48:29,581
	sub-ing in 
	5.0⋅D⋅i_R
	─────────
	   C⋅fₛ   for 
	V_c
2021-07-18 14:48:29,582
	and found 
	    5.0⋅D⋅i_R 
	1 + ──────────
	    C⋅R⋅fₛ⋅i_L
2021-07-18 14:48:29,598
	sub-ing in 
	C⋅R⋅V_g⋅\Delta v_C
	──────────────────
	   L⋅\Delta i_L    for 
	V_c
2021-07-18 14:48:29,598
	and found 
	C⋅V_g⋅\Delta v_C    
	──────────────── + 1
	L⋅\Delta i_L⋅i_L    
2021-07-18 14:48:29,599
	recursesym: 
	[L, D, V_c, V_g, M, \Delta i_L, fₛ, C, R, i_L, i_R, \Delta v_C]
2021-07-18 14:48:29,599
	calling solver looking for 
	i_L
2021-07-18 14:48:29,599
												base case
2021-07-18 14:48:29,599
returning: i_L=OrderedSet([V_c/(R*(D - 1)), 10.0*\Delta i_L])
2021-07-18 14:48:29,600
	sub-ing in 
	   V_c   
	─────────
	R⋅(D - 1) for 
	i_L
2021-07-18 14:48:29,600
	and found 
	D
2021-07-18 14:48:29,620
	sub-ing in 
	10.0⋅\Delta i_L for 
	i_L
2021-07-18 14:48:29,620
	and found 
	      0.1⋅V_c   
	1 + ────────────
	    R⋅\Delta i_L
2021-07-18 14:48:29,620
	solution to D is: 
	2⋅L⋅\Delta i_L⋅fₛ
	─────────────────
	       V_g        
2021-07-18 14:48:29,621
	recursesym: 
	[L, D, V_c, V_g, M, \Delta i_L, fₛ, C, R, i_L, i_R, \Delta v_C]
2021-07-18 14:48:29,621
	calling solver looking for 
	L
2021-07-18 14:48:29,621
												base case
2021-07-18 14:48:29,621
returning: L=set()
2021-07-18 14:48:29,621
	recursesym: 
	[L, D, V_c, V_g, M, \Delta i_L, fₛ, C, R, i_L, i_R, \Delta v_C]
2021-07-18 14:48:29,621
	calling solver looking for 
	V_g
2021-07-18 14:48:29,621
												base case
2021-07-18 14:48:29,623
returning: V_g=OrderedSet([V_c - V_c/D, V_c/M, 2*L*\Delta i_L*f_s/D, 0.2*L*f_s*i_L/D, 0.2*L*V
_c*f_s/(D*R*(D - 1)), L*V_c*\Delta i_L/(C*R*\Delta v_C), L*\Delta i_L*i_L*(D -
 1)/(C*\Delta v_C), L*\Delta i_L*i_R/(C*\Delta v_C), 10.0*L*\Delta i_L**2*(D -
 1)/(C*\Delta v_C), 10.0*L*\Delta i_L/(C*R)])
2021-07-18 14:48:29,637
	sub-ing in 
	      V_c
	V_c - ───
	       D  for 
	V_g
2021-07-18 14:48:29,637
	and found 
	2⋅L⋅\Delta i_L⋅fₛ
	─────────────────
	          V_c    
	    V_c - ───    
	           D     
2021-07-18 14:48:29,644
	sub-ing in 
	V_c
	───
	 M  for 
	V_g
2021-07-18 14:48:29,645
	and found 
	2⋅L⋅M⋅\Delta i_L⋅fₛ
	───────────────────
	        V_c        
2021-07-18 14:48:29,645
	sub-ing in 
	2⋅L⋅\Delta i_L⋅fₛ
	─────────────────
	        D         for 
	V_g
2021-07-18 14:48:29,646
	and found 
	D
2021-07-18 14:48:29,652
	sub-ing in 
	0.2⋅L⋅fₛ⋅i_L
	────────────
	     D       for 
	V_g
2021-07-18 14:48:29,653
	and found 
	10.0⋅D⋅\Delta i_L
	─────────────────
	       i_L       
2021-07-18 14:48:29,673
	sub-ing in 
	0.2⋅L⋅V_c⋅fₛ
	────────────
	D⋅R⋅(D - 1)  for 
	V_g
2021-07-18 14:48:29,673
	and found 
	10.0⋅D⋅R⋅\Delta i_L⋅(D - 1)
	───────────────────────────
	            V_c            
2021-07-18 14:48:29,680
	sub-ing in 
	L⋅V_c⋅\Delta i_L
	────────────────
	 C⋅R⋅\Delta v_C  for 
	V_g
2021-07-18 14:48:29,680
	and found 
	2⋅C⋅R⋅\Delta v_C⋅fₛ
	───────────────────
	        V_c        
2021-07-18 14:48:29,691
	sub-ing in 
	L⋅\Delta i_L⋅i_L⋅(D - 1)
	────────────────────────
	      C⋅\Delta v_C       for 
	V_g
2021-07-18 14:48:29,692
	and found 
	2⋅C⋅\Delta v_C⋅fₛ
	─────────────────
	   i_L⋅(D - 1)   
2021-07-18 14:48:29,698
	sub-ing in 
	L⋅\Delta i_L⋅i_R
	────────────────
	  C⋅\Delta v_C   for 
	V_g
2021-07-18 14:48:29,699
	and found 
	2⋅C⋅\Delta v_C⋅fₛ
	─────────────────
	       i_R       
2021-07-18 14:48:29,715
	sub-ing in 
	                 2        
	10.0⋅L⋅\Delta i_L ⋅(D - 1)
	──────────────────────────
	       C⋅\Delta v_C        for 
	V_g
2021-07-18 14:48:29,715
	and found 
	0.2⋅C⋅\Delta v_C⋅fₛ
	───────────────────
	 \Delta i_L⋅(D - 1)
2021-07-18 14:48:29,721
	sub-ing in 
	10.0⋅L⋅\Delta i_L
	─────────────────
	       C⋅R        for 
	V_g
2021-07-18 14:48:29,721
	and found 
	0.2⋅C⋅R⋅fₛ
2021-07-18 14:48:29,722
	recursesym: 
	[L, D, V_c, V_g, M, \Delta i_L, fₛ, C, R, i_L, i_R, \Delta v_C]
2021-07-18 14:48:29,722
	calling solver looking for 
	\Delta i_L
2021-07-18 14:48:29,722
												base case
2021-07-18 14:48:29,723
returning: delta_iL=OrderedSet([D*V_g/(2*L*f_s), 0.1*i_L, C*R*V_g*\Delta v_C/(L*V_c), C*V_g*\Delta
 v_C/(L*i_L*(D - 1)), C*V_g*\Delta v_C/(L*i_R), 0.1*C*R*V_g/L, 0.1*V_c/(R*(D -
 1))])
2021-07-18 14:48:29,723
	sub-ing in 
	D⋅V_g 
	──────
	2⋅L⋅fₛ for 
	\Delta i_L
2021-07-18 14:48:29,723
	and found 
	D
2021-07-18 14:48:29,732
	sub-ing in 
	0.1⋅i_L for 
	\Delta i_L
2021-07-18 14:48:29,732
	and found 
	0.2⋅L⋅fₛ⋅i_L
	────────────
	    V_g     
2021-07-18 14:48:29,737
	sub-ing in 
	C⋅R⋅V_g⋅\Delta v_C
	──────────────────
	      L⋅V_c        for 
	\Delta i_L
2021-07-18 14:48:29,737
	and found 
	2⋅C⋅R⋅\Delta v_C⋅fₛ
	───────────────────
	        V_c        
2021-07-18 14:48:29,744
	sub-ing in 
	C⋅V_g⋅\Delta v_C
	────────────────
	 L⋅i_L⋅(D - 1)   for 
	\Delta i_L
2021-07-18 14:48:29,745
	and found 
	2⋅C⋅\Delta v_C⋅fₛ
	─────────────────
	   i_L⋅(D - 1)   
2021-07-18 14:48:29,750
	sub-ing in 
	C⋅V_g⋅\Delta v_C
	────────────────
	     L⋅i_R       for 
	\Delta i_L
2021-07-18 14:48:29,750
	and found 
	2⋅C⋅\Delta v_C⋅fₛ
	─────────────────
	       i_R       
2021-07-18 14:48:29,753
	sub-ing in 
	0.1⋅C⋅R⋅V_g
	───────────
	     L      for 
	\Delta i_L
2021-07-18 14:48:29,753
	and found 
	0.2⋅C⋅R⋅fₛ
2021-07-18 14:48:29,772
	sub-ing in 
	 0.1⋅V_c 
	─────────
	R⋅(D - 1) for 
	\Delta i_L
2021-07-18 14:48:29,773
	and found 
	 0.2⋅L⋅V_c⋅fₛ
	─────────────
	R⋅V_g⋅(D - 1)
2021-07-18 14:48:29,773
	recursesym: 
	[L, D, V_c, V_g, M, \Delta i_L, fₛ, C, R, i_L, i_R, \Delta v_C]
2021-07-18 14:48:29,773
	calling solver looking for 
	fₛ
2021-07-18 14:48:29,773
												base case
2021-07-18 14:48:29,774
returning: f_s=OrderedSet([D*V_g/(2*L*\Delta i_L), D*V_c/(2*C*R*\Delta v_C), D*i_L*(D - 1)/(2
*C*\Delta v_C), D*i_R/(2*C*\Delta v_C), 5.0*D*\Delta i_L*(D - 1)/(C*\Delta v_C
), 5.0*D/(C*R)])
2021-07-18 14:48:29,775
	sub-ing in 
	    D⋅V_g     
	──────────────
	2⋅L⋅\Delta i_L for 
	fₛ
2021-07-18 14:48:29,775
	and found 
	D
2021-07-18 14:48:29,848
	sub-ing in 
	     D⋅V_c      
	────────────────
	2⋅C⋅R⋅\Delta v_C for 
	fₛ
2021-07-18 14:48:29,849
	and found 
	D⋅L⋅V_c⋅\Delta i_L
	──────────────────
	C⋅R⋅V_g⋅\Delta v_C
2021-07-18 14:48:29,873
	sub-ing in 
	D⋅i_L⋅(D - 1) 
	──────────────
	2⋅C⋅\Delta v_C for 
	fₛ
2021-07-18 14:48:29,874
	and found 
	D⋅L⋅\Delta i_L⋅i_L⋅(D - 1)
	──────────────────────────
	     C⋅V_g⋅\Delta v_C     
2021-07-18 14:48:29,888
	sub-ing in 
	    D⋅i_R     
	──────────────
	2⋅C⋅\Delta v_C for 
	fₛ
2021-07-18 14:48:29,888
	and found 
	D⋅L⋅\Delta i_L⋅i_R
	──────────────────
	 C⋅V_g⋅\Delta v_C 
2021-07-18 14:48:29,923
	sub-ing in 
	5.0⋅D⋅\Delta i_L⋅(D - 1)
	────────────────────────
	      C⋅\Delta v_C       for 
	fₛ
2021-07-18 14:48:29,924
	and found 
	                   2        
	10.0⋅D⋅L⋅\Delta i_L ⋅(D - 1)
	────────────────────────────
	      C⋅V_g⋅\Delta v_C      
2021-07-18 14:48:29,941
	sub-ing in 
	5.0⋅D
	─────
	 C⋅R  for 
	fₛ
2021-07-18 14:48:29,942
	and found 
	10.0⋅D⋅L⋅\Delta i_L
	───────────────────
	      C⋅R⋅V_g      
2021-07-18 14:48:29,942
	solution to D is: 
	2⋅C⋅R⋅\Delta v_C⋅fₛ
	───────────────────
	        V_c         
2021-07-18 14:48:29,943
	recursesym: 
	[L, D, V_c, V_g, M, \Delta i_L, fₛ, C, R, i_L, i_R, \Delta v_C]
2021-07-18 14:48:29,943
	calling solver looking for 
	C
2021-07-18 14:48:29,943
												base case
2021-07-18 14:48:29,944
returning: C=OrderedSet([D*V_c/(2*R*\Delta v_C*f_s), D*i_L*(D - 1)/(2*\Delta v_C*f_s), D*i_
R/(2*\Delta v_C*f_s), 5.0*D*\Delta i_L*(D - 1)/(\Delta v_C*f_s), 5.0*D/(R*f_s)
])
2021-07-18 14:48:29,945
	sub-ing in 
	      D⋅V_c      
	─────────────────
	2⋅R⋅\Delta v_C⋅fₛ for 
	C
2021-07-18 14:48:29,945
	and found 
	D
2021-07-18 14:48:29,962
	sub-ing in 
	 D⋅i_L⋅(D - 1) 
	───────────────
	2⋅\Delta v_C⋅fₛ for 
	C
2021-07-18 14:48:29,963
	and found 
	D⋅R⋅i_L⋅(D - 1)
	───────────────
	      V_c      
2021-07-18 14:48:29,970
	sub-ing in 
	     D⋅i_R     
	───────────────
	2⋅\Delta v_C⋅fₛ for 
	C
2021-07-18 14:48:29,971
	and found 
	D⋅R⋅i_R
	───────
	  V_c  
2021-07-18 14:48:29,982
	sub-ing in 
	5.0⋅D⋅\Delta i_L⋅(D - 1)
	────────────────────────
	     \Delta v_C⋅fₛ       for 
	C
2021-07-18 14:48:29,983
	and found 
	10.0⋅D⋅R⋅\Delta i_L⋅(D - 1)
	───────────────────────────
	            V_c            
2021-07-18 14:48:29,993
	sub-ing in 
	5.0⋅D
	─────
	 R⋅fₛ for 
	C
2021-07-18 14:48:29,993
	and found 
	10.0⋅D⋅\Delta v_C
	─────────────────
	       V_c       
2021-07-18 14:48:29,993
	recursesym: 
	[L, D, V_c, V_g, M, \Delta i_L, fₛ, C, R, i_L, i_R, \Delta v_C]
2021-07-18 14:48:29,994
	calling solver looking for 
	R
2021-07-18 14:48:29,994
												base case
2021-07-18 14:48:29,995
returning: R=OrderedSet([V_c/(i_L*(D - 1)), V_c/i_R, D*V_c/(2*C*\Delta v_C*f_s), 0.1*V_c/(\
Delta i_L*(D - 1)), 5.0*D/(C*f_s)])
2021-07-18 14:48:30,005
	sub-ing in 
	    V_c    
	───────────
	i_L⋅(D - 1) for 
	R
2021-07-18 14:48:30,005
	and found 
	2⋅C⋅\Delta v_C⋅fₛ
	─────────────────
	   i_L⋅(D - 1)   
2021-07-18 14:48:30,010
	sub-ing in 
	V_c
	───
	i_R for 
	R
2021-07-18 14:48:30,011
	and found 
	2⋅C⋅\Delta v_C⋅fₛ
	─────────────────
	       i_R       
2021-07-18 14:48:30,012
	sub-ing in 
	      D⋅V_c      
	─────────────────
	2⋅C⋅\Delta v_C⋅fₛ for 
	R
2021-07-18 14:48:30,012
	and found 
	D
2021-07-18 14:48:30,024
	sub-ing in 
	     0.1⋅V_c      
	──────────────────
	\Delta i_L⋅(D - 1) for 
	R
2021-07-18 14:48:30,025
	and found 
	0.2⋅C⋅\Delta v_C⋅fₛ
	───────────────────
	 \Delta i_L⋅(D - 1)
2021-07-18 14:48:30,031
	sub-ing in 
	5.0⋅D
	─────
	 C⋅fₛ for 
	R
2021-07-18 14:48:30,031
	and found 
	10.0⋅D⋅\Delta v_C
	─────────────────
	       V_c       
2021-07-18 14:48:30,032
	recursesym: 
	[L, D, V_c, V_g, M, \Delta i_L, fₛ, C, R, i_L, i_R, \Delta v_C]
2021-07-18 14:48:30,032
	calling solver looking for 
	V_c
2021-07-18 14:48:30,032
												base case
2021-07-18 14:48:30,035
returning: V_c=OrderedSet([D*V_g/(D - 1), M*V_g, R*i_L*(D - 1), R*i_R, 2*C*R*\Delta v_C*f_s/D
, 10.0*\Delta v_C, 2*L*\Delta i_L*f_s/(D - 1), 0.2*L*f_s*i_L/(D - 1), D*L*\Del
ta i_L*i_L/(C*\Delta v_C), D*L*\Delta i_L*i_R/(C*\Delta v_C*(D - 1)), 10.0*D*L
*\Delta i_L**2/(C*\Delta v_C), 10.0*D*L*\Delta i_L/(C*R*(D - 1)), L*M*\Delta i
_L*i_R/(C*\Delta v_C), 10.0*L*M*\Delta i_L/(C*R), 5.0*D*i_L*(D - 1)/(C*f_s), 1
0.0*R*\Delta i_L*(D - 1), 5.0*D*i_R/(C*f_s), C*R*V_g*\Delta v_C/(L*\Delta i_L)
])
2021-07-18 14:48:30,057
	sub-ing in 
	D⋅V_g
	─────
	D - 1 for 
	V_c
2021-07-18 14:48:30,058
	and found 
	2⋅C⋅R⋅\Delta v_C⋅fₛ⋅(D - 1)
	───────────────────────────
	           D⋅V_g           
2021-07-18 14:48:30,069
	sub-ing in 
	M⋅V_g for 
	V_c
2021-07-18 14:48:30,069
	and found 
	2⋅C⋅R⋅\Delta v_C⋅fₛ
	───────────────────
	       M⋅V_g       
2021-07-18 14:48:30,080
	sub-ing in 
	R⋅i_L⋅(D - 1) for 
	V_c
2021-07-18 14:48:30,080
	and found 
	2⋅C⋅\Delta v_C⋅fₛ
	─────────────────
	   i_L⋅(D - 1)   
2021-07-18 14:48:30,086
	sub-ing in 
	R⋅i_R for 
	V_c
2021-07-18 14:48:30,086
	and found 
	2⋅C⋅\Delta v_C⋅fₛ
	─────────────────
	       i_R       
2021-07-18 14:48:30,087
	sub-ing in 
	2⋅C⋅R⋅\Delta v_C⋅fₛ
	───────────────────
	         D          for 
	V_c
2021-07-18 14:48:30,087
	and found 
	D
2021-07-18 14:48:30,092
	sub-ing in 
	10.0⋅\Delta v_C for 
	V_c
2021-07-18 14:48:30,093
	and found 
	0.2⋅C⋅R⋅fₛ
2021-07-18 14:48:30,113
	sub-ing in 
	2⋅L⋅\Delta i_L⋅fₛ
	─────────────────
	      D - 1       for 
	V_c
2021-07-18 14:48:30,113
	and found 
	C⋅R⋅\Delta v_C⋅(D - 1)
	──────────────────────
	     L⋅\Delta i_L     
2021-07-18 14:48:30,142
	sub-ing in 
	0.2⋅L⋅fₛ⋅i_L
	────────────
	   D - 1     for 
	V_c
2021-07-18 14:48:30,142
	and found 
	10.0⋅C⋅R⋅\Delta v_C⋅(D - 1)
	───────────────────────────
	           L⋅i_L           
2021-07-18 14:48:30,166
	sub-ing in 
	D⋅L⋅\Delta i_L⋅i_L
	──────────────────
	   C⋅\Delta v_C    for 
	V_c
2021-07-18 14:48:30,167
	and found 
	   2             2   
	2⋅C ⋅R⋅\Delta v_C ⋅fₛ
	─────────────────────
	  D⋅L⋅\Delta i_L⋅i_L 
2021-07-18 14:48:30,198
	sub-ing in 
	 D⋅L⋅\Delta i_L⋅i_R 
	────────────────────
	C⋅\Delta v_C⋅(D - 1) for 
	V_c
2021-07-18 14:48:30,199
	and found 
	   2             2           
	2⋅C ⋅R⋅\Delta v_C ⋅fₛ⋅(D - 1)
	─────────────────────────────
	      D⋅L⋅\Delta i_L⋅i_R     
2021-07-18 14:48:30,217
	sub-ing in 
	                   2
	10.0⋅D⋅L⋅\Delta i_L 
	────────────────────
	    C⋅\Delta v_C     for 
	V_c
2021-07-18 14:48:30,218
	and found 
	     2             2   
	0.2⋅C ⋅R⋅\Delta v_C ⋅fₛ
	───────────────────────
	                  2    
	    D⋅L⋅\Delta i_L     
2021-07-18 14:48:30,243
	sub-ing in 
	10.0⋅D⋅L⋅\Delta i_L
	───────────────────
	    C⋅R⋅(D - 1)     for 
	V_c
2021-07-18 14:48:30,244
	and found 
	     2  2                      
	0.2⋅C ⋅R ⋅\Delta v_C⋅fₛ⋅(D - 1)
	───────────────────────────────
	         D⋅L⋅\Delta i_L        
2021-07-18 14:48:30,257
	sub-ing in 
	L⋅M⋅\Delta i_L⋅i_R
	──────────────────
	   C⋅\Delta v_C    for 
	V_c
2021-07-18 14:48:30,258
	and found 
	   2             2   
	2⋅C ⋅R⋅\Delta v_C ⋅fₛ
	─────────────────────
	  L⋅M⋅\Delta i_L⋅i_R 
2021-07-18 14:48:30,272
	sub-ing in 
	10.0⋅L⋅M⋅\Delta i_L
	───────────────────
	        C⋅R         for 
	V_c
2021-07-18 14:48:30,273
	and found 
	     2  2              
	0.2⋅C ⋅R ⋅\Delta v_C⋅fₛ
	───────────────────────
	     L⋅M⋅\Delta i_L    
2021-07-18 14:48:30,295
	sub-ing in 
	5.0⋅D⋅i_L⋅(D - 1)
	─────────────────
	       C⋅fₛ       for 
	V_c
2021-07-18 14:48:30,296
	and found 
	     2                2
	0.4⋅C ⋅R⋅\Delta v_C⋅fₛ 
	───────────────────────
	     D⋅i_L⋅(D - 1)     
2021-07-18 14:48:30,305
	sub-ing in 
	10.0⋅R⋅\Delta i_L⋅(D - 1) for 
	V_c
2021-07-18 14:48:30,306
	and found 
	0.2⋅C⋅\Delta v_C⋅fₛ
	───────────────────
	 \Delta i_L⋅(D - 1)
2021-07-18 14:48:30,318
	sub-ing in 
	5.0⋅D⋅i_R
	─────────
	   C⋅fₛ   for 
	V_c
2021-07-18 14:48:30,319
	and found 
	     2                2
	0.4⋅C ⋅R⋅\Delta v_C⋅fₛ 
	───────────────────────
	         D⋅i_R         
2021-07-18 14:48:30,325
	sub-ing in 
	C⋅R⋅V_g⋅\Delta v_C
	──────────────────
	   L⋅\Delta i_L    for 
	V_c
2021-07-18 14:48:30,325
	and found 
	2⋅L⋅\Delta i_L⋅fₛ
	─────────────────
	       V_g       
2021-07-18 14:48:30,325
	recursesym: 
	[L, D, V_c, V_g, M, \Delta i_L, fₛ, C, R, i_L, i_R, \Delta v_C]
2021-07-18 14:48:30,326
	calling solver looking for 
	\Delta v_C
2021-07-18 14:48:30,326
												base case
2021-07-18 14:48:30,326
returning: detla_vC=OrderedSet([D*V_c/(2*C*R*f_s), 0.1*V_c])
2021-07-18 14:48:30,326
	sub-ing in 
	 D⋅V_c  
	────────
	2⋅C⋅R⋅fₛ for 
	\Delta v_C
2021-07-18 14:48:30,327
	and found 
	D
2021-07-18 14:48:30,330
	sub-ing in 
	0.1⋅V_c for 
	\Delta v_C
2021-07-18 14:48:30,330
	and found 
	0.2⋅C⋅R⋅fₛ
2021-07-18 14:48:30,331
	recursesym: 
	[L, D, V_c, V_g, M, \Delta i_L, fₛ, C, R, i_L, i_R, \Delta v_C]
2021-07-18 14:48:30,331
	calling solver looking for 
	fₛ
2021-07-18 14:48:30,331
												base case
2021-07-18 14:48:30,332
returning: f_s=OrderedSet([D*V_g/(2*L*\Delta i_L), D*V_c/(2*C*R*\Delta v_C), D*i_L*(D - 1)/(2
*C*\Delta v_C), D*i_R/(2*C*\Delta v_C), 5.0*D*\Delta i_L*(D - 1)/(C*\Delta v_C
), 5.0*D/(C*R)])
2021-07-18 14:48:30,341
	sub-ing in 
	    D⋅V_g     
	──────────────
	2⋅L⋅\Delta i_L for 
	fₛ
2021-07-18 14:48:30,341
	and found 
	C⋅D⋅R⋅V_g⋅\Delta v_C
	────────────────────
	  L⋅V_c⋅\Delta i_L  
2021-07-18 14:48:30,342
	sub-ing in 
	     D⋅V_c      
	────────────────
	2⋅C⋅R⋅\Delta v_C for 
	fₛ
2021-07-18 14:48:30,342
	and found 
	D
2021-07-18 14:48:30,349
	sub-ing in 
	D⋅i_L⋅(D - 1) 
	──────────────
	2⋅C⋅\Delta v_C for 
	fₛ
2021-07-18 14:48:30,350
	and found 
	D⋅R⋅i_L⋅(D - 1)
	───────────────
	      V_c      
2021-07-18 14:48:30,353
	sub-ing in 
	    D⋅i_R     
	──────────────
	2⋅C⋅\Delta v_C for 
	fₛ
2021-07-18 14:48:30,354
	and found 
	D⋅R⋅i_R
	───────
	  V_c  
2021-07-18 14:48:30,362
	sub-ing in 
	5.0⋅D⋅\Delta i_L⋅(D - 1)
	────────────────────────
	      C⋅\Delta v_C       for 
	fₛ
2021-07-18 14:48:30,362
	and found 
	10.0⋅D⋅R⋅\Delta i_L⋅(D - 1)
	───────────────────────────
	            V_c            
2021-07-18 14:48:30,367
	sub-ing in 
	5.0⋅D
	─────
	 C⋅R  for 
	fₛ
2021-07-18 14:48:30,367
	and found 
	10.0⋅D⋅\Delta v_C
	─────────────────
	       V_c       
2021-07-18 14:48:30,375
end of function, recursesym: {L: set(), D: set(), V_c: OrderedSet([D*V_g/(D - 1), M*V_g, R*i_L*(D - 1), R*i_R, 2*C*R*\Delta v_C*f_s/D, 10.0*\Delta v_C, 2*L*\Delta i_L*f_s/(D - 1), 0.2*L*f_s*i_L/(D - 1), D*L*\Delta i_L*i_L/(C*\Delta v_C), D*L*\Delta i_L*i_R/(C*\Delta v_C*(D - 1)), 10.0*D*L*\Delta i_L**2/(C*\Delta v_C), 10.0*D*L*\Delta i_L/(C*R*(D - 1)), L*M*\Delta i_L*i_R/(C*\Delta v_C), 10.0*L*M*\Delta i_L/(C*R), 5.0*D*i_L*(D - 1)/(C*f_s), 10.0*R*\Delta i_L*(D - 1), 5.0*D*i_R/(C*f_s), C*R*V_g*\Delta v_C/(L*\Delta i_L)]), V_g: OrderedSet([V_c - V_c/D, V_c/M, 2*L*\Delta i_L*f_s/D, 0.2*L*f_s*i_L/D, 0.2*L*V_c*f_s/(D*R*(D - 1)), L*V_c*\Delta i_L/(C*R*\Delta v_C), L*\Delta i_L*i_L*(D - 1)/(C*\Delta v_C), L*\Delta i_L*i_R/(C*\Delta v_C), 10.0*L*\Delta i_L**2*(D - 1)/(C*\Delta v_C), 10.0*L*\Delta i_L/(C*R)]), M: OrderedSet([V_c/V_g]), \Delta i_L: OrderedSet([D*V_g/(2*L*f_s), 0.1*i_L, C*R*V_g*\Delta v_C/(L*V_c), C*V_g*\Delta v_C/(L*i_L*(D - 1)), C*V_g*\Delta v_C/(L*i_R), 0.1*C*R*V_g/L, 0.1*V_c/(R*(D - 1))]), f_s: OrderedSet([D*V_g/(2*L*\Delta i_L), D*V_c/(2*C*R*\Delta v_C), D*i_L*(D - 1)/(2*C*\Delta v_C), D*i_R/(2*C*\Delta v_C), 5.0*D*\Delta i_L*(D - 1)/(C*\Delta v_C), 5.0*D/(C*R)]), C: OrderedSet([D*V_c/(2*R*\Delta v_C*f_s), D*i_L*(D - 1)/(2*\Delta v_C*f_s), D*i_R/(2*\Delta v_C*f_s), 5.0*D*\Delta i_L*(D - 1)/(\Delta v_C*f_s), 5.0*D/(R*f_s)]), R: OrderedSet([V_c/(i_L*(D - 1)), V_c/i_R, D*V_c/(2*C*\Delta v_C*f_s), 0.1*V_c/(\Delta i_L*(D - 1)), 5.0*D/(C*f_s)]), i_L: OrderedSet([V_c/(R*(D - 1)), 10.0*\Delta i_L]), i_R: OrderedSet([V_c/R]), \Delta v_C: OrderedSet([D*V_c/(2*C*R*f_s), 0.1*V_c])}
2021-07-18 14:48:30,382
returning: 
	OrderedSet([V_c/(V_c - V_g), 1 + V_c/(R*i_L), 2*L*\Delta i_L*f_s/V_g, 2*C*R*\D
	elta v_C*f_s/V_c, M/(M - 1), R*i_R/(R*i_R - V_g), -10.0*\Delta v_C/(V_g - 10.0
	*\Delta v_C), -L*M*\Delta i_L*i_R/(C*V_g*\Delta v_C - L*M*\Delta i_L*i_R), -10
	.0*L*M*\Delta i_L/(C*R*V_g - 10.0*L*M*\Delta i_L), C*R*\Delta v_C/(C*R*\Delta 
	v_C - L*\Delta i_L), C*V_c*\Delta v_C/(C*V_c*\Delta v_C - L*\Delta i_L*i_R), C
	*R*V_c/(C*R*V_c - 10.0*L*\Delta i_L), (i_L + i_R)/i_L, M*V_g/(R*i_L) + 1, 1 + 
	10.0*\Delta v_C/(R*i_L), 1 + L*M*\Delta i_L*i_R/(C*R*\Delta v_C*i_L), 1 + 10.0
	*L*M*\Delta i_L/(C*R**2*i_L), C*V_g*\Delta v_C/(L*\Delta i_L*i_L) + 1, 1 + 0.1
	*V_c/(R*\Delta i_L), 2*L*M*\Delta i_L*f_s/V_c, 2*C*\Delta v_C*f_s/i_R, 0.2*C*R
	*f_s, 0.2*L*f_s*i_L/V_g, 2*C*R*\Delta v_C*f_s/(M*V_g), 2*C**2*R*\Delta v_C**2*
	f_s/(L*M*\Delta i_L*i_R), 0.2*C**2*R**2*\Delta v_C*f_s/(L*M*\Delta i_L)])
2021-07-18 14:48:30,399
sub-ing in 
   V_c   
─────────
V_c - V_g for 
D
2021-07-18 14:48:30,400
and found 
          V_c⋅V_g          
───────────────────────────
2⋅\Delta i_L⋅fₛ⋅(V_c - V_g)
2021-07-18 14:48:30,421
sub-ing in 
     V_c 
1 + ─────
    R⋅i_L for 
D
2021-07-18 14:48:30,422
and found 
    ⎛     V_c ⎞
V_g⋅⎜1 + ─────⎟
    ⎝    R⋅i_L⎠
───────────────
2⋅\Delta i_L⋅fₛ
2021-07-18 14:48:30,422
sub-ing in 
2⋅L⋅\Delta i_L⋅fₛ
─────────────────
       V_g        for 
D
2021-07-18 14:48:30,423
and found 
L
2021-07-18 14:48:30,431
sub-ing in 
2⋅C⋅R⋅\Delta v_C⋅fₛ
───────────────────
        V_c         for 
D
2021-07-18 14:48:30,431
and found 
C⋅R⋅V_g⋅\Delta v_C
──────────────────
  V_c⋅\Delta i_L  
2021-07-18 14:48:30,445
sub-ing in 
  M  
─────
M - 1 for 
D
2021-07-18 14:48:30,446
and found 
         M⋅V_g         
───────────────────────
2⋅\Delta i_L⋅fₛ⋅(M - 1)
2021-07-18 14:48:30,463
sub-ing in 
   R⋅i_R   
───────────
R⋅i_R - V_g for 
D
2021-07-18 14:48:30,464
and found 
          R⋅V_g⋅i_R          
─────────────────────────────
2⋅\Delta i_L⋅fₛ⋅(R⋅i_R - V_g)
2021-07-18 14:48:30,490
sub-ing in 
  -10.0⋅\Delta v_C   
─────────────────────
V_g - 10.0⋅\Delta v_C for 
D
2021-07-18 14:48:30,491
and found 
         -5.0⋅V_g⋅\Delta v_C         
─────────────────────────────────────
\Delta i_L⋅fₛ⋅(V_g - 10.0⋅\Delta v_C)
2021-07-18 14:48:30,513
sub-ing in 
         -L⋅M⋅\Delta i_L⋅i_R         
─────────────────────────────────────
C⋅V_g⋅\Delta v_C - L⋅M⋅\Delta i_L⋅i_R for 
D
2021-07-18 14:48:30,514
and found 
               -L⋅M⋅V_g⋅i_R                 
────────────────────────────────────────────
2⋅fₛ⋅(C⋅V_g⋅\Delta v_C - L⋅M⋅\Delta i_L⋅i_R)
2021-07-18 14:48:30,545
sub-ing in 
    -10.0⋅L⋅M⋅\Delta i_L     
─────────────────────────────
C⋅R⋅V_g - 10.0⋅L⋅M⋅\Delta i_L for 
D
2021-07-18 14:48:30,546
and found 
          -5.0⋅L⋅M⋅V_g            
──────────────────────────────────
fₛ⋅(C⋅R⋅V_g - 10.0⋅L⋅M⋅\Delta i_L)
2021-07-18 14:48:30,567
sub-ing in 
        C⋅R⋅\Delta v_C       
─────────────────────────────
C⋅R⋅\Delta v_C - L⋅\Delta i_L for 
D
2021-07-18 14:48:30,568
and found 
               C⋅R⋅V_g⋅\Delta v_C              
───────────────────────────────────────────────
2⋅\Delta i_L⋅fₛ⋅(C⋅R⋅\Delta v_C - L⋅\Delta i_L)
2021-07-18 14:48:30,590
sub-ing in 
          C⋅V_c⋅\Delta v_C         
───────────────────────────────────
C⋅V_c⋅\Delta v_C - L⋅\Delta i_L⋅i_R for 
D
2021-07-18 14:48:30,591
and found 
                 C⋅V_c⋅V_g⋅\Delta v_C                
─────────────────────────────────────────────────────
2⋅\Delta i_L⋅fₛ⋅(C⋅V_c⋅\Delta v_C - L⋅\Delta i_L⋅i_R)
2021-07-18 14:48:30,621
sub-ing in 
          C⋅R⋅V_c          
───────────────────────────
C⋅R⋅V_c - 10.0⋅L⋅\Delta i_L for 
D
2021-07-18 14:48:30,622
and found 
                 C⋅R⋅V_c⋅V_g                 
─────────────────────────────────────────────
2⋅\Delta i_L⋅fₛ⋅(C⋅R⋅V_c - 10.0⋅L⋅\Delta i_L)
2021-07-18 14:48:30,637
sub-ing in 
i_L + i_R
─────────
   i_L    for 
D
2021-07-18 14:48:30,638
and found 
  V_g⋅(i_L + i_R)  
───────────────────
2⋅\Delta i_L⋅fₛ⋅i_L
2021-07-18 14:48:30,659
sub-ing in 
M⋅V_g    
───── + 1
R⋅i_L     for 
D
2021-07-18 14:48:30,660
and found 
    ⎛M⋅V_g    ⎞
V_g⋅⎜───── + 1⎟
    ⎝R⋅i_L    ⎠
───────────────
2⋅\Delta i_L⋅fₛ
2021-07-18 14:48:30,693
sub-ing in 
    10.0⋅\Delta v_C
1 + ───────────────
         R⋅i_L      for 
D
2021-07-18 14:48:30,694
and found 
    ⎛    10.0⋅\Delta v_C⎞
V_g⋅⎜1 + ───────────────⎟
    ⎝         R⋅i_L     ⎠
─────────────────────────
     2⋅\Delta i_L⋅fₛ     
2021-07-18 14:48:30,727
sub-ing in 
    L⋅M⋅\Delta i_L⋅i_R
1 + ──────────────────
    C⋅R⋅\Delta v_C⋅i_L for 
D
2021-07-18 14:48:30,728
and found 
    ⎛    L⋅M⋅\Delta i_L⋅i_R⎞
V_g⋅⎜1 + ──────────────────⎟
    ⎝    C⋅R⋅\Delta v_C⋅i_L⎠
────────────────────────────
      2⋅\Delta i_L⋅fₛ       
2021-07-18 14:48:30,773
sub-ing in 
    10.0⋅L⋅M⋅\Delta i_L
1 + ───────────────────
             2         
          C⋅R ⋅i_L      for 
D
2021-07-18 14:48:30,774
and found 
    ⎛    10.0⋅L⋅M⋅\Delta i_L⎞
V_g⋅⎜1 + ───────────────────⎟
    ⎜             2         ⎟
    ⎝          C⋅R ⋅i_L     ⎠
─────────────────────────────
       2⋅\Delta i_L⋅fₛ       
2021-07-18 14:48:30,800
sub-ing in 
C⋅V_g⋅\Delta v_C    
──────────────── + 1
L⋅\Delta i_L⋅i_L     for 
D
2021-07-18 14:48:30,801
and found 
    ⎛C⋅V_g⋅\Delta v_C    ⎞
V_g⋅⎜──────────────── + 1⎟
    ⎝L⋅\Delta i_L⋅i_L    ⎠
──────────────────────────
     2⋅\Delta i_L⋅fₛ      
2021-07-18 14:48:30,835
sub-ing in 
      0.1⋅V_c   
1 + ────────────
    R⋅\Delta i_L for 
D
2021-07-18 14:48:30,835
and found 
    ⎛      0.1⋅V_c   ⎞
V_g⋅⎜1 + ────────────⎟
    ⎝    R⋅\Delta i_L⎠
──────────────────────
   2⋅\Delta i_L⋅fₛ    
2021-07-18 14:48:30,842
sub-ing in 
2⋅L⋅M⋅\Delta i_L⋅fₛ
───────────────────
        V_c         for 
D
2021-07-18 14:48:30,842
and found 
L⋅M⋅V_g
───────
  V_c  
2021-07-18 14:48:30,850
sub-ing in 
2⋅C⋅\Delta v_C⋅fₛ
─────────────────
       i_R        for 
D
2021-07-18 14:48:30,850
and found 
C⋅V_g⋅\Delta v_C
────────────────
 \Delta i_L⋅i_R 
2021-07-18 14:48:30,859
sub-ing in 
0.2⋅C⋅R⋅fₛ for 
D
2021-07-18 14:48:30,859
and found 
0.1⋅C⋅R⋅V_g
───────────
 \Delta i_L
2021-07-18 14:48:30,867
sub-ing in 
0.2⋅L⋅fₛ⋅i_L
────────────
    V_g      for 
D
2021-07-18 14:48:30,867
and found 
0.1⋅L⋅i_L 
──────────
\Delta i_L
2021-07-18 14:48:30,876
sub-ing in 
2⋅C⋅R⋅\Delta v_C⋅fₛ
───────────────────
       M⋅V_g        for 
D
2021-07-18 14:48:30,876
and found 
C⋅R⋅\Delta v_C
──────────────
 M⋅\Delta i_L 
2021-07-18 14:48:30,891
sub-ing in 
   2             2   
2⋅C ⋅R⋅\Delta v_C ⋅fₛ
─────────────────────
  L⋅M⋅\Delta i_L⋅i_R  for 
D
2021-07-18 14:48:30,892
and found 
 2                 2
C ⋅R⋅V_g⋅\Delta v_C 
────────────────────
              2     
L⋅M⋅\Delta i_L ⋅i_R 
2021-07-18 14:48:30,908
sub-ing in 
     2  2              
0.2⋅C ⋅R ⋅\Delta v_C⋅fₛ
───────────────────────
     L⋅M⋅\Delta i_L     for 
D
2021-07-18 14:48:30,908
and found 
     2  2               
0.1⋅C ⋅R ⋅V_g⋅\Delta v_C
────────────────────────
                  2     
    L⋅M⋅\Delta i_L      
2021-07-18 14:48:30,909
recursesym: 
[L, D, V_c, V_g, M, \Delta i_L, fₛ, C, R, i_L, i_R, \Delta v_C]
2021-07-18 14:48:30,909
calling solver looking for 
V_g
2021-07-18 14:48:30,909
												base case
2021-07-18 14:48:30,910
returning: V_g=OrderedSet([V_c - V_c/D, V_c/M, 2*L*\Delta i_L*f_s/D, 0.2*L*f_s*i_L/D, 0.2*L*V
_c*f_s/(D*R*(D - 1)), L*V_c*\Delta i_L/(C*R*\Delta v_C), L*\Delta i_L*i_L*(D -
 1)/(C*\Delta v_C), L*\Delta i_L*i_R/(C*\Delta v_C), 10.0*L*\Delta i_L**2*(D -
 1)/(C*\Delta v_C), 10.0*L*\Delta i_L/(C*R)])
2021-07-18 14:48:30,928
sub-ing in 
      V_c
V_c - ───
       D  for 
V_g
2021-07-18 14:48:30,928
and found 
   ⎛      V_c⎞ 
 D⋅⎜V_c - ───⎟ 
   ⎝       D ⎠ 
───────────────
2⋅\Delta i_L⋅fₛ
2021-07-18 14:48:30,938
sub-ing in 
V_c
───
 M  for 
V_g
2021-07-18 14:48:30,938
and found 
      D⋅V_c      
─────────────────
2⋅M⋅\Delta i_L⋅fₛ
2021-07-18 14:48:30,939
sub-ing in 
2⋅L⋅\Delta i_L⋅fₛ
─────────────────
        D         for 
V_g
2021-07-18 14:48:30,939
and found 
L
2021-07-18 14:48:30,944
sub-ing in 
0.2⋅L⋅fₛ⋅i_L
────────────
     D       for 
V_g
2021-07-18 14:48:30,944
and found 
0.1⋅L⋅i_L 
──────────
\Delta i_L
2021-07-18 14:48:30,961
sub-ing in 
0.2⋅L⋅V_c⋅fₛ
────────────
D⋅R⋅(D - 1)  for 
V_g
2021-07-18 14:48:30,961
and found 
     0.1⋅L⋅V_c      
────────────────────
R⋅\Delta i_L⋅(D - 1)
2021-07-18 14:48:30,974
sub-ing in 
L⋅V_c⋅\Delta i_L
────────────────
 C⋅R⋅\Delta v_C  for 
V_g
2021-07-18 14:48:30,974
and found 
      D⋅L⋅V_c      
───────────────────
2⋅C⋅R⋅\Delta v_C⋅fₛ
2021-07-18 14:48:30,993
sub-ing in 
L⋅\Delta i_L⋅i_L⋅(D - 1)
────────────────────────
      C⋅\Delta v_C       for 
V_g
2021-07-18 14:48:30,993
and found 
 D⋅L⋅i_L⋅(D - 1) 
─────────────────
2⋅C⋅\Delta v_C⋅fₛ
2021-07-18 14:48:31,003
sub-ing in 
L⋅\Delta i_L⋅i_R
────────────────
  C⋅\Delta v_C   for 
V_g
2021-07-18 14:48:31,003
and found 
     D⋅L⋅i_R     
─────────────────
2⋅C⋅\Delta v_C⋅fₛ
2021-07-18 14:48:31,026
sub-ing in 
                 2        
10.0⋅L⋅\Delta i_L ⋅(D - 1)
──────────────────────────
       C⋅\Delta v_C        for 
V_g
2021-07-18 14:48:31,027
and found 
5.0⋅D⋅L⋅\Delta i_L⋅(D - 1)
──────────────────────────
     C⋅\Delta v_C⋅fₛ      
2021-07-18 14:48:31,038
sub-ing in 
10.0⋅L⋅\Delta i_L
─────────────────
       C⋅R        for 
V_g
2021-07-18 14:48:31,038
and found 
5.0⋅D⋅L
───────
 C⋅R⋅fₛ
2021-07-18 14:48:31,038
recursesym: 
[L, D, V_c, V_g, M, \Delta i_L, fₛ, C, R, i_L, i_R, \Delta v_C]
2021-07-18 14:48:31,038
calling solver looking for 
\Delta i_L
2021-07-18 14:48:31,038
												base case
2021-07-18 14:48:31,039
returning: delta_iL=OrderedSet([D*V_g/(2*L*f_s), 0.1*i_L, C*R*V_g*\Delta v_C/(L*V_c), C*V_g*\Delta
 v_C/(L*i_L*(D - 1)), C*V_g*\Delta v_C/(L*i_R), 0.1*C*R*V_g/L, 0.1*V_c/(R*(D -
 1))])
2021-07-18 14:48:31,040
sub-ing in 
D⋅V_g 
──────
2⋅L⋅fₛ for 
\Delta i_L
2021-07-18 14:48:31,040
and found 
L
2021-07-18 14:48:31,050
sub-ing in 
0.1⋅i_L for 
\Delta i_L
2021-07-18 14:48:31,051
and found 
5.0⋅D⋅V_g
─────────
  fₛ⋅i_L 
2021-07-18 14:48:31,059
sub-ing in 
C⋅R⋅V_g⋅\Delta v_C
──────────────────
      L⋅V_c        for 
\Delta i_L
2021-07-18 14:48:31,059
and found 
      D⋅L⋅V_c      
───────────────────
2⋅C⋅R⋅\Delta v_C⋅fₛ
2021-07-18 14:48:31,069
sub-ing in 
C⋅V_g⋅\Delta v_C
────────────────
 L⋅i_L⋅(D - 1)   for 
\Delta i_L
2021-07-18 14:48:31,069
and found 
 D⋅L⋅i_L⋅(D - 1) 
─────────────────
2⋅C⋅\Delta v_C⋅fₛ
2021-07-18 14:48:31,076
sub-ing in 
C⋅V_g⋅\Delta v_C
────────────────
     L⋅i_R       for 
\Delta i_L
2021-07-18 14:48:31,077
and found 
     D⋅L⋅i_R     
─────────────────
2⋅C⋅\Delta v_C⋅fₛ
2021-07-18 14:48:31,084
sub-ing in 
0.1⋅C⋅R⋅V_g
───────────
     L      for 
\Delta i_L
2021-07-18 14:48:31,084
and found 
5.0⋅D⋅L
───────
 C⋅R⋅fₛ
2021-07-18 14:48:31,106
sub-ing in 
 0.1⋅V_c 
─────────
R⋅(D - 1) for 
\Delta i_L
2021-07-18 14:48:31,106
and found 
5.0⋅D⋅R⋅V_g⋅(D - 1)
───────────────────
       V_c⋅fₛ      
2021-07-18 14:48:31,107
recursesym: 
[L, D, V_c, V_g, M, \Delta i_L, fₛ, C, R, i_L, i_R, \Delta v_C]
2021-07-18 14:48:31,107
calling solver looking for 
fₛ
2021-07-18 14:48:31,107
												base case
2021-07-18 14:48:31,108
returning: f_s=OrderedSet([D*V_g/(2*L*\Delta i_L), D*V_c/(2*C*R*\Delta v_C), D*i_L*(D - 1)/(2
*C*\Delta v_C), D*i_R/(2*C*\Delta v_C), 5.0*D*\Delta i_L*(D - 1)/(C*\Delta v_C
), 5.0*D/(C*R)])
2021-07-18 14:48:31,108
sub-ing in 
    D⋅V_g     
──────────────
2⋅L⋅\Delta i_L for 
fₛ
2021-07-18 14:48:31,108
and found 
L
2021-07-18 14:48:31,115
sub-ing in 
     D⋅V_c      
────────────────
2⋅C⋅R⋅\Delta v_C for 
fₛ
2021-07-18 14:48:31,116
and found 
C⋅R⋅V_g⋅\Delta v_C
──────────────────
  V_c⋅\Delta i_L  
2021-07-18 14:48:31,128
sub-ing in 
D⋅i_L⋅(D - 1) 
──────────────
2⋅C⋅\Delta v_C for 
fₛ
2021-07-18 14:48:31,129
and found 
   C⋅V_g⋅\Delta v_C   
──────────────────────
\Delta i_L⋅i_L⋅(D - 1)
2021-07-18 14:48:31,134
sub-ing in 
    D⋅i_R     
──────────────
2⋅C⋅\Delta v_C for 
fₛ
2021-07-18 14:48:31,134
and found 
C⋅V_g⋅\Delta v_C
────────────────
 \Delta i_L⋅i_R 
2021-07-18 14:48:31,151
sub-ing in 
5.0⋅D⋅\Delta i_L⋅(D - 1)
────────────────────────
      C⋅\Delta v_C       for 
fₛ
2021-07-18 14:48:31,151
and found 
0.1⋅C⋅V_g⋅\Delta v_C
────────────────────
          2         
\Delta i_L ⋅(D - 1) 
2021-07-18 14:48:31,156
sub-ing in 
5.0⋅D
─────
 C⋅R  for 
fₛ
2021-07-18 14:48:31,157
and found 
0.1⋅C⋅R⋅V_g
───────────
 \Delta i_L
2021-07-18 14:48:31,170
end of function, recursesym: {L: set(), D: OrderedSet([V_c/(V_c - V_g), 1 + V_c/(R*i_L), 2*L*\Delta i_L*f_s/V_g, 2*C*R*\Delta v_C*f_s/V_c, M/(M - 1), R*i_R/(R*i_R - V_g), -10.0*\Delta v_C/(V_g - 10.0*\Delta v_C), -L*M*\Delta i_L*i_R/(C*V_g*\Delta v_C - L*M*\Delta i_L*i_R), -10.0*L*M*\Delta i_L/(C*R*V_g - 10.0*L*M*\Delta i_L), C*R*\Delta v_C/(C*R*\Delta v_C - L*\Delta i_L), C*V_c*\Delta v_C/(C*V_c*\Delta v_C - L*\Delta i_L*i_R), C*R*V_c/(C*R*V_c - 10.0*L*\Delta i_L), (i_L + i_R)/i_L, M*V_g/(R*i_L) + 1, 1 + 10.0*\Delta v_C/(R*i_L), 1 + L*M*\Delta i_L*i_R/(C*R*\Delta v_C*i_L), 1 + 10.0*L*M*\Delta i_L/(C*R**2*i_L), C*V_g*\Delta v_C/(L*\Delta i_L*i_L) + 1, 1 + 0.1*V_c/(R*\Delta i_L), 2*L*M*\Delta i_L*f_s/V_c, 2*C*\Delta v_C*f_s/i_R, 0.2*C*R*f_s, 0.2*L*f_s*i_L/V_g, 2*C*R*\Delta v_C*f_s/(M*V_g), 2*C**2*R*\Delta v_C**2*f_s/(L*M*\Delta i_L*i_R), 0.2*C**2*R**2*\Delta v_C*f_s/(L*M*\Delta i_L)]), V_c: OrderedSet([D*V_g/(D - 1), M*V_g, R*i_L*(D - 1), R*i_R, 2*C*R*\Delta v_C*f_s/D, 10.0*\Delta v_C, 2*L*\Delta i_L*f_s/(D - 1), 0.2*L*f_s*i_L/(D - 1), D*L*\Delta i_L*i_L/(C*\Delta v_C), D*L*\Delta i_L*i_R/(C*\Delta v_C*(D - 1)), 10.0*D*L*\Delta i_L**2/(C*\Delta v_C), 10.0*D*L*\Delta i_L/(C*R*(D - 1)), L*M*\Delta i_L*i_R/(C*\Delta v_C), 10.0*L*M*\Delta i_L/(C*R), 5.0*D*i_L*(D - 1)/(C*f_s), 10.0*R*\Delta i_L*(D - 1), 5.0*D*i_R/(C*f_s), C*R*V_g*\Delta v_C/(L*\Delta i_L)]), V_g: OrderedSet([V_c - V_c/D, V_c/M, 2*L*\Delta i_L*f_s/D, 0.2*L*f_s*i_L/D, 0.2*L*V_c*f_s/(D*R*(D - 1)), L*V_c*\Delta i_L/(C*R*\Delta v_C), L*\Delta i_L*i_L*(D - 1)/(C*\Delta v_C), L*\Delta i_L*i_R/(C*\Delta v_C), 10.0*L*\Delta i_L**2*(D - 1)/(C*\Delta v_C), 10.0*L*\Delta i_L/(C*R)]), M: OrderedSet([V_c/V_g]), \Delta i_L: OrderedSet([D*V_g/(2*L*f_s), 0.1*i_L, C*R*V_g*\Delta v_C/(L*V_c), C*V_g*\Delta v_C/(L*i_L*(D - 1)), C*V_g*\Delta v_C/(L*i_R), 0.1*C*R*V_g/L, 0.1*V_c/(R*(D - 1))]), f_s: OrderedSet([D*V_g/(2*L*\Delta i_L), D*V_c/(2*C*R*\Delta v_C), D*i_L*(D - 1)/(2*C*\Delta v_C), D*i_R/(2*C*\Delta v_C), 5.0*D*\Delta i_L*(D - 1)/(C*\Delta v_C), 5.0*D/(C*R)]), C: OrderedSet([D*V_c/(2*R*\Delta v_C*f_s), D*i_L*(D - 1)/(2*\Delta v_C*f_s), D*i_R/(2*\Delta v_C*f_s), 5.0*D*\Delta i_L*(D - 1)/(\Delta v_C*f_s), 5.0*D/(R*f_s)]), R: OrderedSet([V_c/(i_L*(D - 1)), V_c/i_R, D*V_c/(2*C*\Delta v_C*f_s), 0.1*V_c/(\Delta i_L*(D - 1)), 5.0*D/(C*f_s)]), i_L: OrderedSet([V_c/(R*(D - 1)), 10.0*\Delta i_L]), i_R: OrderedSet([V_c/R]), \Delta v_C: OrderedSet([D*V_c/(2*C*R*f_s), 0.1*V_c])}
2021-07-18 14:48:31,174
returning: 
OrderedSet([D*V_g/(2*\Delta i_L*f_s), V_c*V_g/(2*\Delta i_L*f_s*(V_c - V_g)), 
V_g*(R*i_L + V_c)/(2*R*\Delta i_L*f_s*i_L), C*R*V_g*\Delta v_C/(V_c*\Delta i_L
), M*V_g/(2*\Delta i_L*f_s*(M - 1)), R*V_g*i_R/(2*\Delta i_L*f_s*(R*i_R - V_g)
), -5.0*V_g*\Delta v_C/(\Delta i_L*f_s*(V_g - 10.0*\Delta v_C)), V_g*(i_L + i_
R)/(2*\Delta i_L*f_s*i_L), V_g*(M*V_g + R*i_L)/(2*R*\Delta i_L*f_s*i_L), V_g*(
R*i_L + 10.0*\Delta v_C)/(2*R*\Delta i_L*f_s*i_L), V_g*(R*\Delta i_L + 0.1*V_c
)/(2*R*\Delta i_L**2*f_s), C*V_g*\Delta v_C/(\Delta i_L*i_R), 0.1*C*R*V_g/\Del
ta i_L, C*R*\Delta v_C/(M*\Delta i_L), V_c*(D - 1)/(2*\Delta i_L*f_s), 5.0*D*V
_g/(f_s*i_L), 5.0*D*R*V_g*(D - 1)/(V_c*f_s), C*V_g*\Delta v_C/(\Delta i_L*i_L*
(D - 1)), 0.1*C*V_g*\Delta v_C/(\Delta i_L**2*(D - 1))])
2021-07-18 14:48:31,228
adding C to []
2021-07-18 14:48:31,228
looking for 
C
2021-07-18 14:48:31,409
nonlinsolve returns: 
3.125e-5⋅D
2021-07-18 14:48:31,412

D⋅V_g + V_c⋅(1 - D) solved for 
C=
∅
2021-07-18 14:48:31,419

  D⋅V_c           ⎛       V_c⎞
- ───── + (1 - D)⋅⎜-i_L - ───⎟
    R             ⎝        R ⎠ solved for 
C=
∅
2021-07-18 14:48:31,421

    V_c
R - ───
    i_R solved for 
C=
∅
2021-07-18 14:48:31,423

  D⋅V_g               
- ───── + 2⋅\Delta i_L
   L⋅fₛ                solved for 
C=
∅
2021-07-18 14:48:31,435

               D⋅V_c 
2⋅\Delta v_C - ──────
               C⋅R⋅fₛ solved for 
C=
{3.125e-5⋅D}
2021-07-18 14:48:31,442

\Delta i_L - 0.1⋅i_L solved for 
C=
∅
2021-07-18 14:48:31,445

         V_c   
i_L - ─────────
      R⋅(D - 1) solved for 
C=
∅
2021-07-18 14:48:31,445
Done with 
C
2021-07-18 14:48:31,446
so far C = 
OrderedSet([3.125e-5*D])
2021-07-18 14:48:31,446
solution to C is: 
3.125e-5⋅D 
2021-07-18 14:48:31,446
recursesym: 
[C]
2021-07-18 14:48:31,446
calling solver looking for 
D
2021-07-18 14:48:31,446
	adding D to [C]
2021-07-18 14:48:31,446
looking for 
D
2021-07-18 14:48:31,543
nonlinsolve returns: 
2/5
2021-07-18 14:48:31,545

D⋅V_g + V_c⋅(1 - D) solved for 
D=
{2/5}
2021-07-18 14:48:31,561

  D⋅V_c           ⎛       V_c⎞
- ───── + (1 - D)⋅⎜-i_L - ───⎟
    R             ⎝        R ⎠ solved for 
D=
⎧i_L - 5⎫
⎨───────⎬
⎩  i_L  ⎭
2021-07-18 14:48:31,571

    V_c
R - ───
    i_R solved for 
D=
∅
2021-07-18 14:48:31,577

  D⋅V_g               
- ───── + 2⋅\Delta i_L
   L⋅fₛ                solved for 
D=
{2666.66666666667⋅L⋅\Delta i_L}
2021-07-18 14:48:31,586

               D⋅V_c 
2⋅\Delta v_C - ──────
               C⋅R⋅fₛ solved for 
D=
{32000.0⋅C}
2021-07-18 14:48:31,590

\Delta i_L - 0.1⋅i_L solved for 
D=
∅
2021-07-18 14:48:31,604

         V_c   
i_L - ─────────
      R⋅(D - 1) solved for 
D=
⎧     5 ⎫
⎨1 - ───⎬
⎩    i_L⎭
2021-07-18 14:48:31,609
	Done with 
D
2021-07-18 14:48:31,609
	so far D = 
	OrderedSet([2/5, (i_L - 5)/i_L, 2666.66666666667*L*\Delta i_L, 32000.0*C])
2021-07-18 14:48:31,609
	solution to D is: 
	2/5 
2021-07-18 14:48:31,610
	solution to D is: 
	i_L - 5
	───────
	  i_L   
2021-07-18 14:48:31,610
	recursesym: 
	[C, D]
2021-07-18 14:48:31,610
	calling solver looking for 
	i_L
2021-07-18 14:48:31,610
		adding i_L to [C, D]
2021-07-18 14:48:31,610
looking for 
i_L
2021-07-18 14:48:31,693
nonlinsolve returns: 
10.0⋅\Delta i_L
2021-07-18 14:48:31,694

D⋅V_g + V_c⋅(1 - D) solved for 
i_L=
∅
2021-07-18 14:48:31,709

  D⋅V_c           ⎛       V_c⎞
- ───── + (1 - D)⋅⎜-i_L - ───⎟
    R             ⎝        R ⎠ solved for 
i_L=
⎧   5⋅D     ⎫
⎨- ───── + 5⎬
⎩  D - 1    ⎭
2021-07-18 14:48:31,717

    V_c
R - ───
    i_R solved for 
i_L=
∅
2021-07-18 14:48:31,718

  D⋅V_g               
- ───── + 2⋅\Delta i_L
   L⋅fₛ                solved for 
i_L=
∅
2021-07-18 14:48:31,720

               D⋅V_c 
2⋅\Delta v_C - ──────
               C⋅R⋅fₛ solved for 
i_L=
∅
2021-07-18 14:48:31,723

\Delta i_L - 0.1⋅i_L solved for 
i_L=
{10.0⋅\Delta i_L}
2021-07-18 14:48:31,731

         V_c   
i_L - ─────────
      R⋅(D - 1) solved for 
i_L=
⎧ -5  ⎫
⎨─────⎬
⎩D - 1⎭
2021-07-18 14:48:31,736
		Done with 
i_L
2021-07-18 14:48:31,736
		so far i_L = 
		OrderedSet([-5/(D - 1), 10.0*\Delta i_L])
2021-07-18 14:48:31,736
		solution to i_L is: 
		 -5  
		─────
		D - 1 
2021-07-18 14:48:31,737
		recursesym: 
		[C, D, i_L]
2021-07-18 14:48:31,737
		calling solver looking for 
		D
2021-07-18 14:48:31,737
			base case
2021-07-18 14:48:31,737
returning: D=set()
2021-07-18 14:48:31,737
		solution to i_L is: 
		10.0⋅\Delta i_L 
2021-07-18 14:48:31,737
		recursesym: 
		[C, D, i_L]
2021-07-18 14:48:31,737
		calling solver looking for 
		\Delta i_L
2021-07-18 14:48:31,737
			adding delta_iL to [C, D, i_L]
2021-07-18 14:48:31,737
looking for 
\Delta i_L
2021-07-18 14:48:31,811
nonlinsolve returns: 
0.1⋅i_L
2021-07-18 14:48:31,812

D⋅V_g + V_c⋅(1 - D) solved for 
\Delta i_L=
∅
2021-07-18 14:48:31,813

  D⋅V_c           ⎛       V_c⎞
- ───── + (1 - D)⋅⎜-i_L - ───⎟
    R             ⎝        R ⎠ solved for 
\Delta i_L=
∅
2021-07-18 14:48:31,814

    V_c
R - ───
    i_R solved for 
\Delta i_L=
∅
2021-07-18 14:48:31,818

  D⋅V_g               
- ───── + 2⋅\Delta i_L
   L⋅fₛ                solved for 
\Delta i_L=
⎧0.000375⋅D⎫
⎨──────────⎬
⎩    L     ⎭
2021-07-18 14:48:31,825

               D⋅V_c 
2⋅\Delta v_C - ──────
               C⋅R⋅fₛ solved for 
\Delta i_L=
∅
2021-07-18 14:48:31,826

\Delta i_L - 0.1⋅i_L solved for 
\Delta i_L=
{0.1⋅i_L}
2021-07-18 14:48:31,830

         V_c   
i_L - ─────────
      R⋅(D - 1) solved for 
\Delta i_L=
∅
2021-07-18 14:48:31,830
			Done with 
\Delta i_L
2021-07-18 14:48:31,831
			so far delta_iL = 
			OrderedSet([0.000375*D/L, 0.1*i_L])
2021-07-18 14:48:31,831
			solution to delta_iL is: 
			0.000375⋅D
			──────────
			    L      
2021-07-18 14:48:31,831
			recursesym: 
			[C, D, i_L, \Delta i_L]
2021-07-18 14:48:31,831
			calling solver looking for 
			D
2021-07-18 14:48:31,831
				base case
2021-07-18 14:48:31,831
returning: D=set()
2021-07-18 14:48:31,832
			recursesym: 
			[C, D, i_L, \Delta i_L]
2021-07-18 14:48:31,832
			calling solver looking for 
			L
2021-07-18 14:48:31,832
				adding L to [C, D, i_L, \Delta i_L]
2021-07-18 14:48:31,832
looking for 
L
2021-07-18 14:48:31,927
nonlinsolve returns: 
0.000375⋅D
──────────
\Delta i_L
2021-07-18 14:48:31,928

D⋅V_g + V_c⋅(1 - D) solved for 
L=
∅
2021-07-18 14:48:31,930

  D⋅V_c           ⎛       V_c⎞
- ───── + (1 - D)⋅⎜-i_L - ───⎟
    R             ⎝        R ⎠ solved for 
L=
∅
2021-07-18 14:48:31,931

    V_c
R - ───
    i_R solved for 
L=
∅
2021-07-18 14:48:31,941

  D⋅V_g               
- ───── + 2⋅\Delta i_L
   L⋅fₛ                solved for 
L=
⎧0.000375⋅D⎫
⎨──────────⎬
⎩\Delta i_L⎭
2021-07-18 14:48:31,946

               D⋅V_c 
2⋅\Delta v_C - ──────
               C⋅R⋅fₛ solved for 
L=
∅
2021-07-18 14:48:31,947

\Delta i_L - 0.1⋅i_L solved for 
L=
∅
2021-07-18 14:48:31,948

         V_c   
i_L - ─────────
      R⋅(D - 1) solved for 
L=
∅
2021-07-18 14:48:31,948
				Done with 
L
2021-07-18 14:48:31,948
				so far L = 
				OrderedSet([0.000375*D/\Delta i_L])
2021-07-18 14:48:31,949
				solution to L is: 
				0.000375⋅D
				──────────
				\Delta i_L 
2021-07-18 14:48:31,949
				recursesym: 
				[C, D, i_L, \Delta i_L, L]
2021-07-18 14:48:31,949
				calling solver looking for 
				D
2021-07-18 14:48:31,949
					base case
2021-07-18 14:48:31,949
returning: D=set()
2021-07-18 14:48:31,949
				recursesym: 
				[C, D, i_L, \Delta i_L, L]
2021-07-18 14:48:31,949
				calling solver looking for 
				\Delta i_L
2021-07-18 14:48:31,949
					base case
2021-07-18 14:48:31,949
returning: delta_iL=set()
2021-07-18 14:48:31,949
end of function, recursesym: {C: set(), D: set(), i_L: set(), \Delta i_L: set(), L: set()}
2021-07-18 14:48:31,950
returning: 
				OrderedSet([0.000375*D/\Delta i_L])
2021-07-18 14:48:31,953
			sub-ing in 
			0.000375⋅D
			──────────
			\Delta i_L for 
			L
2021-07-18 14:48:31,953
			and found 
			1.0⋅\Delta i_L
2021-07-18 14:48:31,953
			solution to delta_iL is: 
			0.1⋅i_L 
2021-07-18 14:48:31,954
			recursesym: 
			[C, D, i_L, \Delta i_L, L]
2021-07-18 14:48:31,954
			calling solver looking for 
			i_L
2021-07-18 14:48:31,954
					base case
2021-07-18 14:48:31,954
returning: i_L=set()
2021-07-18 14:48:31,954
end of function, recursesym: {C: set(), D: set(), i_L: set(), \Delta i_L: set(), L: OrderedSet([0.000375*D/\Delta i_L])}
2021-07-18 14:48:31,954
returning: 
			OrderedSet([0.000375*D/L, 0.1*i_L])
2021-07-18 14:48:31,960
		sub-ing in 
		0.000375⋅D
		──────────
		    L      for 
		\Delta i_L
2021-07-18 14:48:31,960
		and found 
		0.00375⋅D
		─────────
		    L    
2021-07-18 14:48:31,965
		sub-ing in 
		0.1⋅i_L for 
		\Delta i_L
2021-07-18 14:48:31,965
		and found 
		1.0⋅i_L
2021-07-18 14:48:31,965
end of function, recursesym: {C: set(), D: set(), i_L: set(), \Delta i_L: OrderedSet([0.000375*D/L, 0.1*i_L]), L: OrderedSet([0.000375*D/\Delta i_L])}
2021-07-18 14:48:31,966
returning: 
		OrderedSet([-5/(D - 1), 10.0*\Delta i_L, 0.00375*D/L])
2021-07-18 14:48:31,974
	sub-ing in 
	 -5  
	─────
	D - 1 for 
	i_L
2021-07-18 14:48:31,975
	and found 
	⎛       5  ⎞ ⎛1   D⎞
	⎜-5 - ─────⎟⋅⎜─ - ─⎟
	⎝     D - 1⎠ ⎝5   5⎠
2021-07-18 14:48:31,989
	sub-ing in 
	10.0⋅\Delta i_L for 
	i_L
2021-07-18 14:48:31,990
	and found 
	0.1⋅(10.0⋅\Delta i_L - 5)
	─────────────────────────
	        \Delta i_L       
2021-07-18 14:48:32,010
	sub-ing in 
	0.00375⋅D
	─────────
	    L     for 
	i_L
2021-07-18 14:48:32,011
	and found 
	                   ⎛0.00375⋅D    ⎞
	266.666666666667⋅L⋅⎜───────── - 5⎟
	                   ⎝    L        ⎠
	──────────────────────────────────
	                D                 
2021-07-18 14:48:32,011
	solution to D is: 
	2666.66666666667⋅L⋅\Delta i_L 
2021-07-18 14:48:32,011
	recursesym: 
	[C, D, i_L, \Delta i_L, L]
2021-07-18 14:48:32,012
	calling solver looking for 
	L
2021-07-18 14:48:32,012
					base case
2021-07-18 14:48:32,012
returning: L=OrderedSet([0.000375*D/\Delta i_L])
2021-07-18 14:48:32,015
	sub-ing in 
	0.000375⋅D
	──────────
	\Delta i_L for 
	L
2021-07-18 14:48:32,015
	and found 
	1.0⋅D
2021-07-18 14:48:32,016
	recursesym: 
	[C, D, i_L, \Delta i_L, L]
2021-07-18 14:48:32,016
	calling solver looking for 
	\Delta i_L
2021-07-18 14:48:32,016
					base case
2021-07-18 14:48:32,016
returning: delta_iL=OrderedSet([0.000375*D/L, 0.1*i_L])
2021-07-18 14:48:32,019
	sub-ing in 
	0.000375⋅D
	──────────
	    L      for 
	\Delta i_L
2021-07-18 14:48:32,019
	and found 
	1.0⋅D
2021-07-18 14:48:32,024
	sub-ing in 
	0.1⋅i_L for 
	\Delta i_L
2021-07-18 14:48:32,024
	and found 
	266.666666666667⋅L⋅i_L
2021-07-18 14:48:32,025
	solution to D is: 
	32000.0⋅C 
2021-07-18 14:48:32,025
	recursesym: 
	[C, D, i_L, \Delta i_L, L]
2021-07-18 14:48:32,025
	calling solver looking for 
	C
2021-07-18 14:48:32,025
					base case
2021-07-18 14:48:32,025
returning: C=set()
2021-07-18 14:48:32,026
end of function, recursesym: {C: set(), D: set(), i_L: OrderedSet([-5/(D - 1), 10.0*\Delta i_L, 0.00375*D/L]), \Delta i_L: OrderedSet([0.000375*D/L, 0.1*i_L]), L: OrderedSet([0.000375*D/\Delta i_L])}
2021-07-18 14:48:32,027
returning: 
	OrderedSet([2/5, (i_L - 5)/i_L, 2666.66666666667*L*\Delta i_L, 32000.0*C, 1.0 
	- 0.5/\Delta i_L, 266.666666666667*L*i_L])
2021-07-18 14:48:32,027
sub-ing in 
2/5 for 
D
2021-07-18 14:48:32,027
and found 
1.25000000000000e-5
2021-07-18 14:48:32,040
sub-ing in 
i_L - 5
───────
  i_L   for 
D
2021-07-18 14:48:32,041
and found 
3.125e-5⋅(i_L - 5)
──────────────────
       i_L        
2021-07-18 14:48:32,046
sub-ing in 
2666.66666666667⋅L⋅\Delta i_L for 
D
2021-07-18 14:48:32,046
and found 
0.0833333333333333⋅L⋅\Delta i_L
2021-07-18 14:48:32,049
sub-ing in 
32000.0⋅C for 
D
2021-07-18 14:48:32,049
and found 
1.0⋅C
2021-07-18 14:48:32,064
sub-ing in 
         0.5    
1.0 - ──────────
      \Delta i_L for 
D
2021-07-18 14:48:32,064
and found 
           1.5625e-5 
3.125e-5 - ──────────
           \Delta i_L
2021-07-18 14:48:32,069
sub-ing in 
266.666666666667⋅L⋅i_L for 
D
2021-07-18 14:48:32,069
and found 
0.00833333333333333⋅L⋅i_L
2021-07-18 14:48:32,071
end of function, recursesym: {C: set(), D: OrderedSet([2/5, (i_L - 5)/i_L, 2666.66666666667*L*\Delta i_L, 32000.0*C, 1.0 - 0.5/\Delta i_L, 266.666666666667*L*i_L]), i_L: OrderedSet([-5/(D - 1), 10.0*\Delta i_L, 0.00375*D/L]), \Delta i_L: OrderedSet([0.000375*D/L, 0.1*i_L]), L: OrderedSet([0.000375*D/\Delta i_L])}
2021-07-18 14:48:32,071
returning: 
OrderedSet([3.125e-5*D, 1.25000000000000e-5, 3.125e-5 - 0.00015625/i_L, 0.0833
333333333333*L*\Delta i_L, 3.125e-5 - 1.5625e-5/\Delta i_L, 0.0083333333333333
3*L*i_L])
2021-07-18 14:48:32,081
adding delta_iL to []
2021-07-18 14:48:32,081
looking for 
\Delta i_L
2021-07-18 14:48:32,169
nonlinsolve returns: 
0.1⋅i_L
2021-07-18 14:48:32,170

D⋅V_g + V_c⋅(1 - D) solved for 
\Delta i_L=
∅
2021-07-18 14:48:32,172

  D⋅V_c           ⎛       V_c⎞
- ───── + (1 - D)⋅⎜-i_L - ───⎟
    R             ⎝        R ⎠ solved for 
\Delta i_L=
∅
2021-07-18 14:48:32,173

    V_c
R - ───
    i_R solved for 
\Delta i_L=
∅
2021-07-18 14:48:32,175

  D⋅V_g               
- ───── + 2⋅\Delta i_L
   L⋅fₛ                solved for 
\Delta i_L=
⎧0.000375⋅D⎫
⎨──────────⎬
⎩    L     ⎭
2021-07-18 14:48:32,181

               D⋅V_c 
2⋅\Delta v_C - ──────
               C⋅R⋅fₛ solved for 
\Delta i_L=
∅
2021-07-18 14:48:32,183

\Delta i_L - 0.1⋅i_L solved for 
\Delta i_L=
{0.1⋅i_L}
2021-07-18 14:48:32,188

         V_c   
i_L - ─────────
      R⋅(D - 1) solved for 
\Delta i_L=
∅
2021-07-18 14:48:32,188
Done with 
\Delta i_L
2021-07-18 14:48:32,188
so far delta_iL = 
OrderedSet([0.000375*D/L, 0.1*i_L])
2021-07-18 14:48:32,188
solution to delta_iL is: 
0.000375⋅D
──────────
    L      
2021-07-18 14:48:32,188
recursesym: 
[\Delta i_L]
2021-07-18 14:48:32,189
calling solver looking for 
D
2021-07-18 14:48:32,189
	adding D to [\Delta i_L]
2021-07-18 14:48:32,189
looking for 
D
2021-07-18 14:48:32,264
nonlinsolve returns: 
2/5
2021-07-18 14:48:32,266

D⋅V_g + V_c⋅(1 - D) solved for 
D=
{2/5}
2021-07-18 14:48:32,276

  D⋅V_c           ⎛       V_c⎞
- ───── + (1 - D)⋅⎜-i_L - ───⎟
    R             ⎝        R ⎠ solved for 
D=
⎧i_L - 5⎫
⎨───────⎬
⎩  i_L  ⎭
2021-07-18 14:48:32,282

    V_c
R - ───
    i_R solved for 
D=
∅
2021-07-18 14:48:32,286

  D⋅V_g               
- ───── + 2⋅\Delta i_L
   L⋅fₛ                solved for 
D=
{2666.66666666667⋅L⋅\Delta i_L}
2021-07-18 14:48:32,294

               D⋅V_c 
2⋅\Delta v_C - ──────
               C⋅R⋅fₛ solved for 
D=
{32000.0⋅C}
2021-07-18 14:48:32,297

\Delta i_L - 0.1⋅i_L solved for 
D=
∅
2021-07-18 14:48:32,308

         V_c   
i_L - ─────────
      R⋅(D - 1) solved for 
D=
⎧     5 ⎫
⎨1 - ───⎬
⎩    i_L⎭
2021-07-18 14:48:32,312
	Done with 
D
2021-07-18 14:48:32,312
	so far D = 
	OrderedSet([2/5, (i_L - 5)/i_L, 2666.66666666667*L*\Delta i_L, 32000.0*C])
2021-07-18 14:48:32,313
	solution to D is: 
	2/5 
2021-07-18 14:48:32,313
	solution to D is: 
	i_L - 5
	───────
	  i_L   
2021-07-18 14:48:32,313
	recursesym: 
	[\Delta i_L, D]
2021-07-18 14:48:32,313
	calling solver looking for 
	i_L
2021-07-18 14:48:32,313
		adding i_L to [\Delta i_L, D]
2021-07-18 14:48:32,313
looking for 
i_L
2021-07-18 14:48:32,387
nonlinsolve returns: 
10.0⋅\Delta i_L
2021-07-18 14:48:32,388

D⋅V_g + V_c⋅(1 - D) solved for 
i_L=
∅
2021-07-18 14:48:32,396

  D⋅V_c           ⎛       V_c⎞
- ───── + (1 - D)⋅⎜-i_L - ───⎟
    R             ⎝        R ⎠ solved for 
i_L=
⎧   5⋅D     ⎫
⎨- ───── + 5⎬
⎩  D - 1    ⎭
2021-07-18 14:48:32,403

    V_c
R - ───
    i_R solved for 
i_L=
∅
2021-07-18 14:48:32,404

  D⋅V_g               
- ───── + 2⋅\Delta i_L
   L⋅fₛ                solved for 
i_L=
∅
2021-07-18 14:48:32,405

               D⋅V_c 
2⋅\Delta v_C - ──────
               C⋅R⋅fₛ solved for 
i_L=
∅
2021-07-18 14:48:32,407

\Delta i_L - 0.1⋅i_L solved for 
i_L=
{10.0⋅\Delta i_L}
2021-07-18 14:48:32,413

         V_c   
i_L - ─────────
      R⋅(D - 1) solved for 
i_L=
⎧ -5  ⎫
⎨─────⎬
⎩D - 1⎭
2021-07-18 14:48:32,417
		Done with 
i_L
2021-07-18 14:48:32,417
		so far i_L = 
		OrderedSet([-5/(D - 1), 10.0*\Delta i_L])
2021-07-18 14:48:32,418
		solution to i_L is: 
		 -5  
		─────
		D - 1 
2021-07-18 14:48:32,418
		recursesym: 
		[\Delta i_L, D, i_L]
2021-07-18 14:48:32,418
		calling solver looking for 
		D
2021-07-18 14:48:32,418
			base case
2021-07-18 14:48:32,418
returning: D=set()
2021-07-18 14:48:32,418
		solution to i_L is: 
		10.0⋅\Delta i_L 
2021-07-18 14:48:32,418
		recursesym: 
		[\Delta i_L, D, i_L]
2021-07-18 14:48:32,418
		calling solver looking for 
		\Delta i_L
2021-07-18 14:48:32,418
			base case
2021-07-18 14:48:32,418
returning: delta_iL=set()
2021-07-18 14:48:32,418
end of function, recursesym: {\Delta i_L: set(), D: set(), i_L: set()}
2021-07-18 14:48:32,419
returning: 
		OrderedSet([-5/(D - 1), 10.0*\Delta i_L])
2021-07-18 14:48:32,423
	sub-ing in 
	 -5  
	─────
	D - 1 for 
	i_L
2021-07-18 14:48:32,424
	and found 
	⎛       5  ⎞ ⎛1   D⎞
	⎜-5 - ─────⎟⋅⎜─ - ─⎟
	⎝     D - 1⎠ ⎝5   5⎠
2021-07-18 14:48:32,435
	sub-ing in 
	10.0⋅\Delta i_L for 
	i_L
2021-07-18 14:48:32,436
	and found 
	0.1⋅(10.0⋅\Delta i_L - 5)
	─────────────────────────
	        \Delta i_L       
2021-07-18 14:48:32,436
	solution to D is: 
	2666.66666666667⋅L⋅\Delta i_L 
2021-07-18 14:48:32,436
	recursesym: 
	[\Delta i_L, D, i_L]
2021-07-18 14:48:32,436
	calling solver looking for 
	L
2021-07-18 14:48:32,437
			adding L to [\Delta i_L, D, i_L]
2021-07-18 14:48:32,437
looking for 
L
2021-07-18 14:48:32,531
nonlinsolve returns: 
0.000375⋅D
──────────
\Delta i_L
2021-07-18 14:48:32,532

D⋅V_g + V_c⋅(1 - D) solved for 
L=
∅
2021-07-18 14:48:32,533

  D⋅V_c           ⎛       V_c⎞
- ───── + (1 - D)⋅⎜-i_L - ───⎟
    R             ⎝        R ⎠ solved for 
L=
∅
2021-07-18 14:48:32,534

    V_c
R - ───
    i_R solved for 
L=
∅
2021-07-18 14:48:32,543

  D⋅V_g               
- ───── + 2⋅\Delta i_L
   L⋅fₛ                solved for 
L=
⎧0.000375⋅D⎫
⎨──────────⎬
⎩\Delta i_L⎭
2021-07-18 14:48:32,548

               D⋅V_c 
2⋅\Delta v_C - ──────
               C⋅R⋅fₛ solved for 
L=
∅
2021-07-18 14:48:32,549

\Delta i_L - 0.1⋅i_L solved for 
L=
∅
2021-07-18 14:48:32,550

         V_c   
i_L - ─────────
      R⋅(D - 1) solved for 
L=
∅
2021-07-18 14:48:32,550
			Done with 
L
2021-07-18 14:48:32,550
			so far L = 
			OrderedSet([0.000375*D/\Delta i_L])
2021-07-18 14:48:32,550
			solution to L is: 
			0.000375⋅D
			──────────
			\Delta i_L 
2021-07-18 14:48:32,551
			recursesym: 
			[\Delta i_L, D, i_L, L]
2021-07-18 14:48:32,551
			calling solver looking for 
			D
2021-07-18 14:48:32,551
				base case
2021-07-18 14:48:32,551
returning: D=set()
2021-07-18 14:48:32,551
			recursesym: 
			[\Delta i_L, D, i_L, L]
2021-07-18 14:48:32,551
			calling solver looking for 
			\Delta i_L
2021-07-18 14:48:32,551
				base case
2021-07-18 14:48:32,551
returning: delta_iL=set()
2021-07-18 14:48:32,551
end of function, recursesym: {\Delta i_L: set(), D: set(), i_L: OrderedSet([-5/(D - 1), 10.0*\Delta i_L]), L: set()}
2021-07-18 14:48:32,552
returning: 
			OrderedSet([0.000375*D/\Delta i_L])
2021-07-18 14:48:32,555
	sub-ing in 
	0.000375⋅D
	──────────
	\Delta i_L for 
	L
2021-07-18 14:48:32,555
	and found 
	1.0⋅D
2021-07-18 14:48:32,555
	recursesym: 
	[\Delta i_L, D, i_L, L]
2021-07-18 14:48:32,555
	calling solver looking for 
	\Delta i_L
2021-07-18 14:48:32,555
				base case
2021-07-18 14:48:32,555
returning: delta_iL=set()
2021-07-18 14:48:32,556
	solution to D is: 
	32000.0⋅C 
2021-07-18 14:48:32,556
	recursesym: 
	[\Delta i_L, D, i_L, L]
2021-07-18 14:48:32,556
	calling solver looking for 
	C
2021-07-18 14:48:32,556
				adding C to [\Delta i_L, D, i_L, L]
2021-07-18 14:48:32,556
looking for 
C
2021-07-18 14:48:32,639
nonlinsolve returns: 
3.125e-5⋅D
2021-07-18 14:48:32,640

D⋅V_g + V_c⋅(1 - D) solved for 
C=
∅
2021-07-18 14:48:32,642

  D⋅V_c           ⎛       V_c⎞
- ───── + (1 - D)⋅⎜-i_L - ───⎟
    R             ⎝        R ⎠ solved for 
C=
∅
2021-07-18 14:48:32,643

    V_c
R - ───
    i_R solved for 
C=
∅
2021-07-18 14:48:32,644

  D⋅V_g               
- ───── + 2⋅\Delta i_L
   L⋅fₛ                solved for 
C=
∅
2021-07-18 14:48:32,652

               D⋅V_c 
2⋅\Delta v_C - ──────
               C⋅R⋅fₛ solved for 
C=
{3.125e-5⋅D}
2021-07-18 14:48:32,655

\Delta i_L - 0.1⋅i_L solved for 
C=
∅
2021-07-18 14:48:32,656

         V_c   
i_L - ─────────
      R⋅(D - 1) solved for 
C=
∅
2021-07-18 14:48:32,657
				Done with 
C
2021-07-18 14:48:32,657
				so far C = 
				OrderedSet([3.125e-5*D])
2021-07-18 14:48:32,657
				solution to C is: 
				3.125e-5⋅D 
2021-07-18 14:48:32,657
				recursesym: 
				[\Delta i_L, D, i_L, L, C]
2021-07-18 14:48:32,657
				calling solver looking for 
				D
2021-07-18 14:48:32,657
					base case
2021-07-18 14:48:32,657
returning: D=set()
2021-07-18 14:48:32,658
end of function, recursesym: {\Delta i_L: set(), D: set(), i_L: OrderedSet([-5/(D - 1), 10.0*\Delta i_L]), L: OrderedSet([0.000375*D/\Delta i_L]), C: set()}
2021-07-18 14:48:32,658
returning: 
				OrderedSet([3.125e-5*D])
2021-07-18 14:48:32,661
	sub-ing in 
	3.125e-5⋅D for 
	C
2021-07-18 14:48:32,661
	and found 
	1.0⋅D
2021-07-18 14:48:32,662
end of function, recursesym: {\Delta i_L: set(), D: set(), i_L: OrderedSet([-5/(D - 1), 10.0*\Delta i_L]), L: OrderedSet([0.000375*D/\Delta i_L]), C: OrderedSet([3.125e-5*D])}
2021-07-18 14:48:32,662
returning: 
	OrderedSet([2/5, (i_L - 5)/i_L, 2666.66666666667*L*\Delta i_L, 32000.0*C, 1.0 
	- 0.5/\Delta i_L])
2021-07-18 14:48:32,668
sub-ing in 
2/5 for 
D
2021-07-18 14:48:32,668
and found 
0.00015
───────
   L   
2021-07-18 14:48:32,683
sub-ing in 
i_L - 5
───────
  i_L   for 
D
2021-07-18 14:48:32,684
and found 
0.000375⋅(i_L - 5)
──────────────────
      L⋅i_L       
2021-07-18 14:48:32,687
sub-ing in 
2666.66666666667⋅L⋅\Delta i_L for 
D
2021-07-18 14:48:32,687
and found 
1.0⋅\Delta i_L
2021-07-18 14:48:32,693
sub-ing in 
32000.0⋅C for 
D
2021-07-18 14:48:32,694
and found 
12.0⋅C
──────
  L   
2021-07-18 14:48:32,712
sub-ing in 
         0.5    
1.0 - ──────────
      \Delta i_L for 
D
2021-07-18 14:48:32,712
and found 
         ⎛         0.5    ⎞
0.000375⋅⎜1.0 - ──────────⎟
         ⎝      \Delta i_L⎠
───────────────────────────
             L             
2021-07-18 14:48:32,712
recursesym: 
[\Delta i_L, D, i_L, L, C]
2021-07-18 14:48:32,712
calling solver looking for 
L
2021-07-18 14:48:32,712
					base case
2021-07-18 14:48:32,712
returning: L=OrderedSet([0.000375*D/\Delta i_L])
2021-07-18 14:48:32,715
sub-ing in 
0.000375⋅D
──────────
\Delta i_L for 
L
2021-07-18 14:48:32,715
and found 
1.0⋅\Delta i_L
2021-07-18 14:48:32,715
solution to delta_iL is: 
0.1⋅i_L 
2021-07-18 14:48:32,715
recursesym: 
[\Delta i_L, D, i_L, L, C]
2021-07-18 14:48:32,716
calling solver looking for 
i_L
2021-07-18 14:48:32,716
					base case
2021-07-18 14:48:32,716
returning: i_L=OrderedSet([-5/(D - 1), 10.0*\Delta i_L])
2021-07-18 14:48:32,725
sub-ing in 
 -5  
─────
D - 1 for 
i_L
2021-07-18 14:48:32,725
and found 
-0.5 
─────
D - 1
2021-07-18 14:48:32,728
sub-ing in 
10.0⋅\Delta i_L for 
i_L
2021-07-18 14:48:32,728
and found 
1.0⋅\Delta i_L
2021-07-18 14:48:32,729
end of function, recursesym: {\Delta i_L: set(), D: OrderedSet([2/5, (i_L - 5)/i_L, 2666.66666666667*L*\Delta i_L, 32000.0*C, 1.0 - 0.5/\Delta i_L]), i_L: OrderedSet([-5/(D - 1), 10.0*\Delta i_L]), L: OrderedSet([0.000375*D/\Delta i_L]), C: OrderedSet([3.125e-5*D])}
2021-07-18 14:48:32,730
returning: 
OrderedSet([0.000375*D/L, 0.1*i_L, 0.00015/L, (0.000375*i_L - 0.001875)/(L*i_L
), 12.0*C/L, -0.5/(D - 1)])
